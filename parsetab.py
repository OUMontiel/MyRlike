
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR CLOSEBOX CLOSECURLY CLOSEPAR COLON COMMA DIVIDE DO ELSE EQ FLOAT FOR FUNCTION GE GT ID IF INT IS LE LT MAIN MINUS MODULO MULTIPLY NE OPENBOX OPENCURLY OPENPAR OR PLUS PROGRAM READ RETURN SEMICOLON STRING THEN TO TYPECHAR TYPEFLOAT TYPEINT TYPEVOID VARS WHILE WRITE\n    programa : PROGRAM programa_punto1 programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY\n    \n    programa1 : ID SEMICOLON vars\n              | ID SEMICOLON\n    \n    programa2 : funciones\n              | epsilon\n    \n    programa3 : estatutos\n              | epsilon\n    \n    programa_punto1 : epsilon\n    \n    main : MAIN\n    \n    vars : VARS vars1\n    \n    vars1 : tipo COLON vars2\n    \n    vars2 : ID vars3\n    \n    vars3 : OPENBOX INT CLOSEBOX vars4\n          | vars4\n    \n    vars4 : SEMICOLON vars5\n          | COMMA vars2\n    \n    vars5 : vars1\n          | epsilon\n    \n    lista_ids : lista_ids1 lista_ids2\n              | ID lista_ids2\n    \n    lista_ids1 : ID OPENBOX block exp CLOSEBOX unblock\n    \n    lista_ids2 : COMMA lista_ids\n               | epsilon\n    \n    tipo : TYPEFLOAT\n         | TYPEINT\n         | TYPECHAR\n    \n    tipo_void : TYPEVOID\n    \n    funciones : FUNCTION funciones1\n              | epsilon\n    \n    funciones1 : tipo funciones2 funciones3\n               | tipo_void funciones2 funciones3\n    \n    funciones2 : ID OPENPAR\n    \n    funciones3 : parameters funciones4\n               | funciones4\n    \n    funciones4 : CLOSEPAR funciones5\n    \n    funciones5 : vars funciones_punto1 OPENCURLY funciones6\n               | funciones_punto1 OPENCURLY funciones6\n    \n    funciones6 : estatutos funciones6\n               | CLOSECURLY funciones_punto2 funciones\n    \n    funciones_punto1 : epsilon\n    \n    funciones_punto2 : epsilon\n    \n    parameters : tipo ID parameters1\n    \n    parameters1 : COMMA parameters\n                | epsilon\n    \n    estatutos : asignacion estatutos1\n              | llamada estatutos1\n              | retorno estatutos1\n              | lectura estatutos1\n              | escritura estatutos1\n              | condicion estatutos1\n              | while estatutos1\n              | for estatutos1\n              | est_exp estatutos1\n    \n    estatutos1 : estatutos\n               | epsilon\n    \n    asignacion : asignacion1 expresion SEMICOLON\n    \n    asignacion1 : ID OPENBOX block exp CLOSEBOX IS unblock\n                | ID IS\n    \n    llamada : funcion SEMICOLON\n    \n    funcion : funcion_punto1 OPENPAR funcion1 funcion_punto3\n    \n    funcion1 : exp funcion_punto2 funcion2\n             | CLOSEPAR\n    \n    funcion2 : COMMA funcion1\n             | CLOSEPAR\n    \n    funcion_punto1 : ID\n    \n    funcion_punto2 : epsilon\n    \n    funcion_punto3 : epsilon\n    \n    retorno : RETURN OPENPAR exp CLOSEPAR SEMICOLON\n    \n    lectura : READ OPENPAR lista_ids CLOSEPAR SEMICOLON\n    \n    escritura : WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON\n    \n    escritura1 : escritura_string escritura2\n               | escritura_expresion escritura2\n    \n    escritura2 : COMMA escritura1\n               | epsilon\n    \n    escritura_string : STRING\n    \n    escritura_expresion : expresion\n    \n    condicion : IF OPENPAR expresion CLOSEPAR THEN condicion_punto1 OPENCURLY estatutos CLOSECURLY condicion1\n    \n    condicion1 : ELSE condicion_punto3 OPENCURLY estatutos CLOSECURLY condicion_punto4\n               | condicion_punto2 epsilon\n    \n    condicion_punto1 : epsilon\n    \n    condicion_punto2 : epsilon\n    \n    condicion_punto3 : epsilon\n    \n    condicion_punto4 : epsilon\n    \n    while : WHILE while_punto1 OPENPAR expresion CLOSEPAR while_punto2 DO OPENCURLY estatutos CLOSECURLY while_punto3\n    \n    while_punto1 : epsilon\n    \n    while_punto2 : epsilon\n    \n    while_punto3 : epsilon\n    \n    for : FOR for1 IS exp for_punto1 TO exp for_punto2 DO OPENCURLY estatutos CLOSECURLY for_punto3\n    \n    for1 : ID OPENBOX block exp CLOSEBOX unblock\n         | ID\n    \n    for_punto1 : epsilon\n    \n    for_punto2 : epsilon\n    \n    for_punto3 : epsilon\n    \n    est_exp : expresion SEMICOLON\n    \n    expresion : and generate_expresion\n              | and generate_expresion expresion1 expresion\n    \n    expresion1 : OR\n    \n    generate_expresion : epsilon\n    \n    and : equal generate_and\n        | equal generate_and and1 and\n    \n    and1 : AND\n    \n    generate_and : epsilon\n    \n    equal : compare generate_equal\n          | compare generate_equal equal1 equal\n    \n    equal1 : EQ\n           | NE\n    \n    generate_equal : epsilon\n    \n    compare : exp generate_compare\n            | exp generate_compare compare1 compare\n    \n    compare1 : LT\n             | LE\n             | GT\n             | GE\n    \n    generate_compare : epsilon\n    \n    exp : termino generate_exp\n        | termino generate_exp exp1 exp\n    \n    exp1 : PLUS\n         | MINUS\n    \n    generate_exp : epsilon\n    \n    termino : factor generate_termino\n            | factor generate_termino termino1 termino\n    \n    termino1 : MULTIPLY\n             | DIVIDE\n             | MODULO\n    \n    generate_termino : epsilon\n    \n    factor : factor1\n           | OPENPAR block expresion CLOSEPAR unblock\n           | funcion\n           | factor2 varcte\n    \n    factor1 : ID OPENBOX block exp CLOSEBOX unblock\n            | ID\n    \n    factor2 : PLUS\n            | MINUS\n            | epsilon\n    \n    block : epsilon\n    \n    unblock : epsilon\n    \n    varcte : int\n           | float\n           | char\n    \n    int : INT\n    \n    float : FLOAT\n    \n    char : CHAR\n    \n    epsilon :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,93,],[0,-1,]),'ID':([2,3,4,15,16,17,18,19,20,30,37,38,47,51,52,53,54,55,56,57,58,59,60,69,85,90,91,92,94,95,96,97,98,99,100,101,102,103,104,109,110,111,114,115,116,121,122,123,142,144,152,153,155,156,157,158,159,169,170,171,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,201,204,207,213,228,230,231,233,234,243,251,253,257,261,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[-143,6,-8,25,25,-24,-25,-26,-27,39,46,70,-143,70,70,70,70,70,70,70,70,70,107,120,70,46,107,-135,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,107,162,107,107,-143,-58,107,70,70,-56,-143,107,-110,-111,-112,-113,107,107,-143,107,107,-97,107,-101,107,-105,-106,107,-117,-118,107,-122,-123,-124,107,162,-143,107,107,-136,-68,-69,107,-70,107,107,-143,70,-57,70,-143,-77,-143,-81,-143,70,-79,-84,-87,70,-143,-88,-93,-143,-78,-83,]),'FUNCTION':([5,11,21,27,45,86,88,89,145,147,148,149,150,192,193,226,],[10,-3,-2,-10,-11,-12,-14,-143,-143,-15,-17,-18,-16,10,-41,-13,]),'MAIN':([5,7,8,9,11,14,21,27,31,33,36,40,41,45,86,88,89,143,145,147,148,149,150,190,191,192,193,224,225,226,],[-143,13,-4,-5,-3,-28,-2,-10,-30,-34,-31,-33,-35,-11,-12,-14,-143,-37,-143,-15,-17,-18,-16,-36,-38,-143,-41,-39,-29,-13,]),'SEMICOLON':([6,46,61,62,64,70,72,73,74,75,76,77,105,106,107,112,113,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,173,175,194,195,197,198,199,205,215,216,219,220,221,222,223,227,228,241,242,244,245,254,255,],[11,89,109,110,-143,-131,-143,-143,-143,-143,-143,-126,152,-128,-131,-108,-114,-95,-98,-99,-102,-103,-107,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,89,-143,230,-109,231,234,-60,-67,-96,-100,-104,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'TYPEFLOAT':([10,22,24,26,35,82,89,],[17,17,17,17,-32,17,17,]),'TYPEINT':([10,22,24,26,35,82,89,],[18,18,18,18,-32,18,18,]),'TYPECHAR':([10,22,24,26,35,82,89,],[19,19,19,19,-32,19,19,]),'TYPEVOID':([10,],[20,]),'VARS':([11,34,],[22,22,]),'OPENPAR':([12,13,25,38,47,51,52,53,54,55,56,57,58,59,60,63,65,66,67,68,70,71,85,91,92,94,95,96,97,98,99,100,101,102,103,104,107,109,110,111,115,116,117,118,121,122,123,142,144,152,153,155,156,157,158,159,169,170,171,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,204,207,213,228,230,231,233,234,243,251,253,257,261,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[23,-9,35,47,-143,47,47,47,47,47,47,47,47,47,47,111,114,115,116,-143,-65,123,47,47,-135,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-65,-94,-59,47,47,47,169,-85,-143,-58,47,47,47,-56,-143,47,-110,-111,-112,-113,47,47,-143,47,47,-97,47,-101,47,-105,-106,47,-117,-118,47,-122,-123,-124,47,-143,47,47,-136,-68,-69,47,-70,47,47,-143,47,-57,47,-143,-77,-143,-81,-143,47,-79,-84,-87,47,-143,-88,-93,-143,-78,-83,]),'COLON':([17,18,19,28,],[-24,-25,-26,37,]),'CLOSEPAR':([23,24,26,32,35,39,64,72,73,74,75,76,77,81,83,106,107,112,113,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,151,154,160,161,162,163,164,165,166,167,168,173,174,175,195,198,200,202,203,206,208,209,211,215,216,217,218,219,220,221,222,223,227,228,232,235,242,243,244,245,254,255,256,262,],[29,34,34,34,-32,-143,-143,-143,-143,-143,-143,-143,-126,-42,-44,-128,-131,-108,-114,175,-95,-98,-99,-102,-103,-107,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-43,195,197,199,-143,-143,205,-143,-143,-75,-76,210,-143,-143,-62,-143,-109,-19,-23,-20,-71,-74,-72,237,-60,-67,244,-66,-96,-100,-104,-116,-121,-127,-136,-22,-73,-61,175,-64,-143,-130,-63,-143,-21,]),'OPENCURLY':([27,29,34,42,43,44,45,84,86,88,89,147,148,149,150,226,236,247,248,258,269,271,276,277,],[-10,38,-143,-143,85,-40,-11,142,-12,-14,-143,-15,-17,-18,-16,-13,-143,257,-80,264,275,-143,282,-82,]),'CLOSECURLY':([38,48,49,50,51,52,53,54,55,56,57,58,59,85,94,95,96,97,98,99,100,101,102,103,104,109,110,142,144,152,230,231,234,263,267,268,270,272,273,274,278,279,280,281,283,284,285,286,287,288,289,],[-143,93,-6,-7,-143,-143,-143,-143,-143,-143,-143,-143,-143,145,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,145,145,-56,-68,-69,-70,267,-143,274,-77,-143,-81,-143,-79,-84,-87,283,-143,287,-88,-93,-143,-78,-83,]),'INT':([38,47,50,51,52,53,54,55,56,57,58,59,60,78,79,80,85,87,91,92,94,95,96,97,98,99,100,101,102,103,104,108,109,110,111,115,116,121,122,123,142,144,152,153,155,156,157,158,159,169,170,171,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,204,207,213,228,230,231,233,234,243,251,253,257,261,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[-143,-143,-134,-143,-143,-143,-143,-143,-143,-143,-143,-143,-143,138,-132,-133,-143,146,-143,-135,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-134,-94,-59,-143,-143,-143,-143,-58,-143,-143,-143,-56,-143,-143,-110,-111,-112,-113,-143,-143,-143,-143,-143,-97,-143,-101,-143,-105,-106,-143,-117,-118,-143,-122,-123,-124,-143,-143,-143,-143,-136,-68,-69,-143,-70,-143,-143,-143,-143,-57,-143,-143,-77,-143,-81,-143,-143,-79,-84,-87,-143,-143,-88,-93,-143,-78,-83,]),'FLOAT':([38,47,50,51,52,53,54,55,56,57,58,59,60,78,79,80,85,91,92,94,95,96,97,98,99,100,101,102,103,104,108,109,110,111,115,116,121,122,123,142,144,152,153,155,156,157,158,159,169,170,171,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,204,207,213,228,230,231,233,234,243,251,253,257,261,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[-143,-143,-134,-143,-143,-143,-143,-143,-143,-143,-143,-143,-143,139,-132,-133,-143,-143,-135,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-134,-94,-59,-143,-143,-143,-143,-58,-143,-143,-143,-56,-143,-143,-110,-111,-112,-113,-143,-143,-143,-143,-143,-97,-143,-101,-143,-105,-106,-143,-117,-118,-143,-122,-123,-124,-143,-143,-143,-143,-136,-68,-69,-143,-70,-143,-143,-143,-143,-57,-143,-143,-77,-143,-81,-143,-143,-79,-84,-87,-143,-143,-88,-93,-143,-78,-83,]),'CHAR':([38,47,50,51,52,53,54,55,56,57,58,59,60,78,79,80,85,91,92,94,95,96,97,98,99,100,101,102,103,104,108,109,110,111,115,116,121,122,123,142,144,152,153,155,156,157,158,159,169,170,171,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,204,207,213,228,230,231,233,234,243,251,253,257,261,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[-143,-143,-134,-143,-143,-143,-143,-143,-143,-143,-143,-143,-143,140,-132,-133,-143,-143,-135,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-134,-94,-59,-143,-143,-143,-143,-58,-143,-143,-143,-56,-143,-143,-110,-111,-112,-113,-143,-143,-143,-143,-143,-97,-143,-101,-143,-105,-106,-143,-117,-118,-143,-122,-123,-124,-143,-143,-143,-143,-136,-68,-69,-143,-70,-143,-143,-143,-143,-57,-143,-143,-77,-143,-81,-143,-143,-79,-84,-87,-143,-143,-88,-93,-143,-78,-83,]),'RETURN':([38,51,52,53,54,55,56,57,58,59,85,94,95,96,97,98,99,100,101,102,103,104,109,110,142,144,152,230,231,234,257,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[63,63,63,63,63,63,63,63,63,63,63,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,63,63,-56,-68,-69,-70,63,63,-143,-77,-143,-81,-143,63,-79,-84,-87,63,-143,-88,-93,-143,-78,-83,]),'READ':([38,51,52,53,54,55,56,57,58,59,85,94,95,96,97,98,99,100,101,102,103,104,109,110,142,144,152,230,231,234,257,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[65,65,65,65,65,65,65,65,65,65,65,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,65,65,-56,-68,-69,-70,65,65,-143,-77,-143,-81,-143,65,-79,-84,-87,65,-143,-88,-93,-143,-78,-83,]),'WRITE':([38,51,52,53,54,55,56,57,58,59,85,94,95,96,97,98,99,100,101,102,103,104,109,110,142,144,152,230,231,234,257,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[66,66,66,66,66,66,66,66,66,66,66,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,66,66,-56,-68,-69,-70,66,66,-143,-77,-143,-81,-143,66,-79,-84,-87,66,-143,-88,-93,-143,-78,-83,]),'IF':([38,51,52,53,54,55,56,57,58,59,85,94,95,96,97,98,99,100,101,102,103,104,109,110,142,144,152,230,231,234,257,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[67,67,67,67,67,67,67,67,67,67,67,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,67,67,-56,-68,-69,-70,67,67,-143,-77,-143,-81,-143,67,-79,-84,-87,67,-143,-88,-93,-143,-78,-83,]),'WHILE':([38,51,52,53,54,55,56,57,58,59,85,94,95,96,97,98,99,100,101,102,103,104,109,110,142,144,152,230,231,234,257,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[68,68,68,68,68,68,68,68,68,68,68,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,68,68,-56,-68,-69,-70,68,68,-143,-77,-143,-81,-143,68,-79,-84,-87,68,-143,-88,-93,-143,-78,-83,]),'FOR':([38,51,52,53,54,55,56,57,58,59,85,94,95,96,97,98,99,100,101,102,103,104,109,110,142,144,152,230,231,234,257,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[69,69,69,69,69,69,69,69,69,69,69,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-94,-59,69,69,-56,-68,-69,-70,69,69,-143,-77,-143,-81,-143,69,-79,-84,-87,69,-143,-88,-93,-143,-78,-83,]),'PLUS':([38,47,51,52,53,54,55,56,57,58,59,60,62,70,75,76,77,85,91,92,94,95,96,97,98,99,100,101,102,103,104,106,107,109,110,111,115,116,121,122,123,130,131,132,133,134,135,136,137,138,139,140,142,144,152,153,155,156,157,158,159,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,196,204,207,213,215,216,223,227,228,230,231,233,234,241,242,243,244,245,251,253,254,255,257,261,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[79,-143,79,79,79,79,79,79,79,79,79,79,-128,-131,-143,-143,-126,79,79,-135,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-128,-131,-94,-59,79,79,79,-143,-58,79,184,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,79,79,-56,-143,79,-110,-111,-112,-113,79,79,-143,79,-143,-62,79,-97,79,-101,79,-105,-106,79,-117,-118,79,-122,-123,-124,-143,79,-143,79,79,-60,-67,-121,-127,-136,-68,-69,79,-70,-143,-61,79,-64,-143,79,-143,-130,-63,79,-57,79,-143,-77,-143,-81,-143,79,-79,-84,-87,79,-143,-88,-93,-143,-78,-83,]),'MINUS':([38,47,51,52,53,54,55,56,57,58,59,60,62,70,75,76,77,85,91,92,94,95,96,97,98,99,100,101,102,103,104,106,107,109,110,111,115,116,121,122,123,130,131,132,133,134,135,136,137,138,139,140,142,144,152,153,155,156,157,158,159,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,196,204,207,213,215,216,223,227,228,230,231,233,234,241,242,243,244,245,251,253,254,255,257,261,264,267,270,272,273,274,275,278,279,280,282,283,285,286,287,288,289,],[80,-143,80,80,80,80,80,80,80,80,80,80,-128,-131,-143,-143,-126,80,80,-135,-45,-54,-55,-46,-47,-48,-49,-50,-51,-52,-53,-128,-131,-94,-59,80,80,80,-143,-58,80,185,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,80,80,-56,-143,80,-110,-111,-112,-113,80,80,-143,80,-143,-62,80,-97,80,-101,80,-105,-106,80,-117,-118,80,-122,-123,-124,-143,80,-143,80,80,-60,-67,-121,-127,-136,-68,-69,80,-70,-143,-61,80,-64,-143,80,-143,-130,-63,80,-57,80,-143,-77,-143,-81,-143,80,-79,-84,-87,80,-143,-88,-93,-143,-78,-83,]),'COMMA':([39,46,64,72,73,74,75,76,77,106,107,112,113,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,161,162,164,165,166,167,173,174,175,194,195,198,215,216,217,218,219,220,221,222,223,227,228,242,244,245,254,255,256,262,],[82,90,-143,-143,-143,-143,-143,-143,-126,-128,-131,-108,-114,-95,-98,-99,-102,-103,-107,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,201,201,207,207,-75,-76,-143,-143,-62,90,-143,-109,-60,-67,243,-66,-96,-100,-104,-116,-121,-127,-136,-61,-64,-143,-130,-63,-143,-21,]),'OPENBOX':([46,70,107,120,162,],[87,121,153,171,204,]),'MULTIPLY':([62,70,76,77,106,107,132,133,134,135,136,137,138,139,140,173,175,195,215,216,227,228,241,242,244,245,254,255,],[-128,-131,-143,-126,-128,-131,187,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-127,-136,-143,-61,-64,-143,-130,-63,]),'DIVIDE':([62,70,76,77,106,107,132,133,134,135,136,137,138,139,140,173,175,195,215,216,227,228,241,242,244,245,254,255,],[-128,-131,-143,-126,-128,-131,188,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-127,-136,-143,-61,-64,-143,-130,-63,]),'MODULO':([62,70,76,77,106,107,132,133,134,135,136,137,138,139,140,173,175,195,215,216,227,228,241,242,244,245,254,255,],[-128,-131,-143,-126,-128,-131,189,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-127,-136,-143,-61,-64,-143,-130,-63,]),'LT':([62,64,70,75,76,77,106,107,112,113,130,131,132,133,134,135,136,137,138,139,140,173,175,195,215,216,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-126,-128,-131,156,-114,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'LE':([62,64,70,75,76,77,106,107,112,113,130,131,132,133,134,135,136,137,138,139,140,173,175,195,215,216,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-126,-128,-131,157,-114,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'GT':([62,64,70,75,76,77,106,107,112,113,130,131,132,133,134,135,136,137,138,139,140,173,175,195,215,216,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-126,-128,-131,158,-114,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'GE':([62,64,70,75,76,77,106,107,112,113,130,131,132,133,134,135,136,137,138,139,140,173,175,195,215,216,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-126,-128,-131,159,-114,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'EQ':([62,64,70,74,75,76,77,106,107,112,113,128,129,130,131,132,133,134,135,136,137,138,139,140,173,175,195,198,215,216,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-143,-126,-128,-131,-108,-114,181,-107,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-109,-60,-67,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'NE':([62,64,70,74,75,76,77,106,107,112,113,128,129,130,131,132,133,134,135,136,137,138,139,140,173,175,195,198,215,216,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-143,-126,-128,-131,-108,-114,182,-107,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-109,-60,-67,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'AND':([62,64,70,73,74,75,76,77,106,107,112,113,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,173,175,195,198,215,216,221,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-143,-143,-126,-128,-131,-108,-114,179,-102,-103,-107,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-109,-60,-67,-104,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'OR':([62,64,70,72,73,74,75,76,77,106,107,112,113,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,173,175,195,198,215,216,220,221,222,223,227,228,241,242,244,245,254,255,],[-128,-143,-131,-143,-143,-143,-143,-143,-126,-128,-131,-108,-114,177,-98,-99,-102,-103,-107,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-109,-60,-67,-100,-104,-116,-121,-127,-136,-143,-61,-64,-143,-130,-63,]),'IS':([70,119,120,228,241,252,260,],[122,170,-90,-136,253,-143,-89,]),'TO':([75,76,77,106,107,130,131,132,133,134,135,136,137,138,139,140,173,175,195,212,215,216,222,223,227,228,238,239,242,244,245,254,255,],[-143,-143,-126,-128,-131,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-143,-60,-67,-116,-121,-127,-136,251,-91,-61,-64,-143,-130,-63,]),'CLOSEBOX':([75,76,77,106,107,130,131,132,133,134,135,136,137,138,139,140,146,173,175,195,214,215,216,222,223,227,228,229,240,241,242,244,245,246,254,255,],[-143,-143,-126,-128,-131,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,194,-143,-62,-143,241,-60,-67,-116,-121,-127,-136,245,252,-143,-61,-64,-143,256,-130,-63,]),'DO':([75,76,77,106,107,130,131,132,133,134,135,136,137,138,139,140,173,175,195,215,216,222,223,227,228,237,242,244,245,249,250,254,255,259,265,266,],[-143,-143,-126,-128,-131,-115,-119,-120,-125,-129,-137,-138,-139,-140,-141,-142,-143,-62,-143,-60,-67,-116,-121,-127,-136,-143,-61,-64,-143,258,-86,-130,-63,-143,269,-92,]),'STRING':([115,207,],[166,166,]),'THEN':([210,],[236,]),'ELSE':([267,],[271,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa_punto1':([2,],[3,]),'epsilon':([2,5,34,38,39,42,47,51,52,53,54,55,56,57,58,59,60,64,68,72,73,74,75,76,85,89,91,111,115,116,121,123,142,144,145,153,155,161,162,164,165,169,170,171,172,173,174,176,178,180,183,186,192,195,196,204,207,212,213,233,236,237,241,243,245,251,252,253,256,257,259,264,267,271,272,274,275,282,283,287,],[4,9,44,50,83,44,92,96,96,96,96,96,96,96,96,96,108,113,118,125,127,129,131,133,108,149,108,108,108,108,92,108,108,108,193,92,108,202,202,208,208,108,108,92,108,216,218,108,108,108,108,108,225,228,108,92,108,239,108,108,248,250,228,108,228,108,228,228,228,108,266,108,273,277,278,280,108,108,286,289,]),'programa1':([3,],[5,]),'programa2':([5,],[7,]),'funciones':([5,192,],[8,224,]),'main':([7,],[12,]),'funciones1':([10,],[14,]),'tipo':([10,22,24,26,82,89,],[15,28,30,30,30,28,]),'tipo_void':([10,],[16,]),'vars':([11,34,],[21,42,]),'funciones2':([15,16,],[24,26,]),'vars1':([22,89,],[27,148,]),'funciones3':([24,26,],[31,36,]),'parameters':([24,26,82,],[32,32,141,]),'funciones4':([24,26,32,],[33,33,40,]),'funciones5':([34,],[41,]),'funciones_punto1':([34,42,],[43,84,]),'vars2':([37,90,],[45,150,]),'programa3':([38,],[48,]),'estatutos':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[49,95,95,95,95,95,95,95,95,95,144,144,144,263,268,281,284,]),'asignacion':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'llamada':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'retorno':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'lectura':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'escritura':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'condicion':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'while':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'for':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'est_exp':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'asignacion1':([38,51,52,53,54,55,56,57,58,59,85,142,144,257,264,275,282,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'expresion':([38,51,52,53,54,55,56,57,58,59,60,85,91,115,116,142,144,169,176,207,257,264,275,282,],[61,61,61,61,61,61,61,61,61,61,105,61,151,167,168,61,61,211,219,167,61,61,61,61,]),'funcion':([38,51,52,53,54,55,56,57,58,59,60,85,91,111,115,116,123,142,144,155,169,170,172,176,178,180,183,186,196,207,213,233,243,251,257,264,275,282,],[62,62,62,62,62,62,62,62,62,62,106,62,106,106,106,106,106,62,62,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,62,62,62,62,]),'exp':([38,51,52,53,54,55,56,57,58,59,60,85,91,111,115,116,123,142,144,155,169,170,172,176,178,180,183,196,207,213,233,243,251,257,264,275,282,],[64,64,64,64,64,64,64,64,64,64,64,64,64,154,64,64,174,64,64,64,64,212,214,64,64,64,222,229,64,240,246,174,259,64,64,64,64,]),'funcion_punto1':([38,51,52,53,54,55,56,57,58,59,60,85,91,111,115,116,123,142,144,155,169,170,172,176,178,180,183,186,196,207,213,233,243,251,257,264,275,282,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'and':([38,51,52,53,54,55,56,57,58,59,60,85,91,115,116,142,144,169,176,178,207,257,264,275,282,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,220,72,72,72,72,72,]),'equal':([38,51,52,53,54,55,56,57,58,59,60,85,91,115,116,142,144,169,176,178,180,207,257,264,275,282,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,221,73,73,73,73,73,]),'compare':([38,51,52,53,54,55,56,57,58,59,60,85,91,115,116,142,144,155,169,176,178,180,207,257,264,275,282,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,198,74,74,74,74,74,74,74,74,74,]),'termino':([38,51,52,53,54,55,56,57,58,59,60,85,91,111,115,116,123,142,144,155,169,170,172,176,178,180,183,186,196,207,213,233,243,251,257,264,275,282,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,223,75,75,75,75,75,75,75,75,75,75,]),'factor':([38,51,52,53,54,55,56,57,58,59,60,85,91,111,115,116,123,142,144,155,169,170,172,176,178,180,183,186,196,207,213,233,243,251,257,264,275,282,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'factor1':([38,51,52,53,54,55,56,57,58,59,60,85,91,111,115,116,123,142,144,155,169,170,172,176,178,180,183,186,196,207,213,233,243,251,257,264,275,282,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'factor2':([38,51,52,53,54,55,56,57,58,59,60,85,91,111,115,116,123,142,144,155,169,170,172,176,178,180,183,186,196,207,213,233,243,251,257,264,275,282,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'parameters1':([39,],[81,]),'vars3':([46,],[86,]),'vars4':([46,194,],[88,226,]),'block':([47,121,153,171,204,],[91,172,196,213,233,]),'estatutos1':([51,52,53,54,55,56,57,58,59,],[94,97,98,99,100,101,102,103,104,]),'generate_compare':([64,],[112,]),'while_punto1':([68,],[117,]),'for1':([69,],[119,]),'generate_expresion':([72,],[124,]),'generate_and':([73,],[126,]),'generate_equal':([74,],[128,]),'generate_exp':([75,],[130,]),'generate_termino':([76,],[132,]),'varcte':([78,],[134,]),'int':([78,],[135,]),'float':([78,],[136,]),'char':([78,],[137,]),'funciones6':([85,142,144,],[143,190,191,]),'vars5':([89,],[147,]),'compare1':([112,],[155,]),'lista_ids':([114,201,],[160,232,]),'lista_ids1':([114,201,],[161,161,]),'escritura1':([115,207,],[163,235,]),'escritura_string':([115,207,],[164,164,]),'escritura_expresion':([115,207,],[165,165,]),'funcion1':([123,243,],[173,255,]),'expresion1':([124,],[176,]),'and1':([126,],[178,]),'equal1':([128,],[180,]),'exp1':([130,],[183,]),'termino1':([132,],[186,]),'funciones_punto2':([145,],[192,]),'lista_ids2':([161,162,],[200,203,]),'escritura2':([164,165,],[206,209,]),'funcion_punto3':([173,],[215,]),'funcion_punto2':([174,],[217,]),'unblock':([195,241,245,252,253,256,],[227,254,254,260,261,262,]),'for_punto1':([212,],[238,]),'funcion2':([217,],[242,]),'condicion_punto1':([236,],[247,]),'while_punto2':([237,],[249,]),'for_punto2':([259,],[265,]),'condicion1':([267,],[270,]),'condicion_punto2':([267,],[272,]),'condicion_punto3':([271,],[276,]),'while_punto3':([274,],[279,]),'for_punto3':([283,],[285,]),'condicion_punto4':([287,],[288,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM programa_punto1 programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY','programa',10,'p_programa','MyRlike.py',212),
  ('programa1 -> ID SEMICOLON vars','programa1',3,'p_programa1','MyRlike.py',224),
  ('programa1 -> ID SEMICOLON','programa1',2,'p_programa1','MyRlike.py',225),
  ('programa2 -> funciones','programa2',1,'p_programa2','MyRlike.py',238),
  ('programa2 -> epsilon','programa2',1,'p_programa2','MyRlike.py',239),
  ('programa3 -> estatutos','programa3',1,'p_programa3','MyRlike.py',245),
  ('programa3 -> epsilon','programa3',1,'p_programa3','MyRlike.py',246),
  ('programa_punto1 -> epsilon','programa_punto1',1,'p_programa_punto1','MyRlike.py',252),
  ('main -> MAIN','main',1,'p_main','MyRlike.py',259),
  ('vars -> VARS vars1','vars',2,'p_vars','MyRlike.py',268),
  ('vars1 -> tipo COLON vars2','vars1',3,'p_vars1','MyRlike.py',274),
  ('vars2 -> ID vars3','vars2',2,'p_vars2','MyRlike.py',280),
  ('vars3 -> OPENBOX INT CLOSEBOX vars4','vars3',4,'p_vars3','MyRlike.py',288),
  ('vars3 -> vars4','vars3',1,'p_vars3','MyRlike.py',289),
  ('vars4 -> SEMICOLON vars5','vars4',2,'p_vars4','MyRlike.py',299),
  ('vars4 -> COMMA vars2','vars4',2,'p_vars4','MyRlike.py',300),
  ('vars5 -> vars1','vars5',1,'p_vars5','MyRlike.py',306),
  ('vars5 -> epsilon','vars5',1,'p_vars5','MyRlike.py',307),
  ('lista_ids -> lista_ids1 lista_ids2','lista_ids',2,'p_lista_ids','MyRlike.py',315),
  ('lista_ids -> ID lista_ids2','lista_ids',2,'p_lista_ids','MyRlike.py',316),
  ('lista_ids1 -> ID OPENBOX block exp CLOSEBOX unblock','lista_ids1',6,'p_lista_ids1','MyRlike.py',327),
  ('lista_ids2 -> COMMA lista_ids','lista_ids2',2,'p_lista_ids2','MyRlike.py',343),
  ('lista_ids2 -> epsilon','lista_ids2',1,'p_lista_ids2','MyRlike.py',344),
  ('tipo -> TYPEFLOAT','tipo',1,'p_tipo','MyRlike.py',350),
  ('tipo -> TYPEINT','tipo',1,'p_tipo','MyRlike.py',351),
  ('tipo -> TYPECHAR','tipo',1,'p_tipo','MyRlike.py',352),
  ('tipo_void -> TYPEVOID','tipo_void',1,'p_tipo_void','MyRlike.py',359),
  ('funciones -> FUNCTION funciones1','funciones',2,'p_funciones','MyRlike.py',366),
  ('funciones -> epsilon','funciones',1,'p_funciones','MyRlike.py',367),
  ('funciones1 -> tipo funciones2 funciones3','funciones1',3,'p_funciones1','MyRlike.py',373),
  ('funciones1 -> tipo_void funciones2 funciones3','funciones1',3,'p_funciones1','MyRlike.py',374),
  ('funciones2 -> ID OPENPAR','funciones2',2,'p_funciones2','MyRlike.py',380),
  ('funciones3 -> parameters funciones4','funciones3',2,'p_funciones3','MyRlike.py',387),
  ('funciones3 -> funciones4','funciones3',1,'p_funciones3','MyRlike.py',388),
  ('funciones4 -> CLOSEPAR funciones5','funciones4',2,'p_funciones4','MyRlike.py',394),
  ('funciones5 -> vars funciones_punto1 OPENCURLY funciones6','funciones5',4,'p_funciones5','MyRlike.py',400),
  ('funciones5 -> funciones_punto1 OPENCURLY funciones6','funciones5',3,'p_funciones5','MyRlike.py',401),
  ('funciones6 -> estatutos funciones6','funciones6',2,'p_funciones6','MyRlike.py',407),
  ('funciones6 -> CLOSECURLY funciones_punto2 funciones','funciones6',3,'p_funciones6','MyRlike.py',408),
  ('funciones_punto1 -> epsilon','funciones_punto1',1,'p_funciones_punto1','MyRlike.py',414),
  ('funciones_punto2 -> epsilon','funciones_punto2',1,'p_funciones_punto2','MyRlike.py',426),
  ('parameters -> tipo ID parameters1','parameters',3,'p_parameters','MyRlike.py',437),
  ('parameters1 -> COMMA parameters','parameters1',2,'p_parameters1','MyRlike.py',444),
  ('parameters1 -> epsilon','parameters1',1,'p_parameters1','MyRlike.py',445),
  ('estatutos -> asignacion estatutos1','estatutos',2,'p_estatutos','MyRlike.py',451),
  ('estatutos -> llamada estatutos1','estatutos',2,'p_estatutos','MyRlike.py',452),
  ('estatutos -> retorno estatutos1','estatutos',2,'p_estatutos','MyRlike.py',453),
  ('estatutos -> lectura estatutos1','estatutos',2,'p_estatutos','MyRlike.py',454),
  ('estatutos -> escritura estatutos1','estatutos',2,'p_estatutos','MyRlike.py',455),
  ('estatutos -> condicion estatutos1','estatutos',2,'p_estatutos','MyRlike.py',456),
  ('estatutos -> while estatutos1','estatutos',2,'p_estatutos','MyRlike.py',457),
  ('estatutos -> for estatutos1','estatutos',2,'p_estatutos','MyRlike.py',458),
  ('estatutos -> est_exp estatutos1','estatutos',2,'p_estatutos','MyRlike.py',459),
  ('estatutos1 -> estatutos','estatutos1',1,'p_estatutos1','MyRlike.py',465),
  ('estatutos1 -> epsilon','estatutos1',1,'p_estatutos1','MyRlike.py',466),
  ('asignacion -> asignacion1 expresion SEMICOLON','asignacion',3,'p_asignacion','MyRlike.py',472),
  ('asignacion1 -> ID OPENBOX block exp CLOSEBOX IS unblock','asignacion1',7,'p_asignacion1','MyRlike.py',480),
  ('asignacion1 -> ID IS','asignacion1',2,'p_asignacion1','MyRlike.py',481),
  ('llamada -> funcion SEMICOLON','llamada',2,'p_llamada','MyRlike.py',503),
  ('funcion -> funcion_punto1 OPENPAR funcion1 funcion_punto3','funcion',4,'p_funcion','MyRlike.py',509),
  ('funcion1 -> exp funcion_punto2 funcion2','funcion1',3,'p_funcion1','MyRlike.py',515),
  ('funcion1 -> CLOSEPAR','funcion1',1,'p_funcion1','MyRlike.py',516),
  ('funcion2 -> COMMA funcion1','funcion2',2,'p_funcion2','MyRlike.py',522),
  ('funcion2 -> CLOSEPAR','funcion2',1,'p_funcion2','MyRlike.py',523),
  ('funcion_punto1 -> ID','funcion_punto1',1,'p_funcion_punto1','MyRlike.py',529),
  ('funcion_punto2 -> epsilon','funcion_punto2',1,'p_funcion_punto2','MyRlike.py',536),
  ('funcion_punto3 -> epsilon','funcion_punto3',1,'p_funcion_punto3','MyRlike.py',543),
  ('retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON','retorno',5,'p_retorno','MyRlike.py',550),
  ('lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON','lectura',5,'p_lectura','MyRlike.py',557),
  ('escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON','escritura',5,'p_escritura','MyRlike.py',564),
  ('escritura1 -> escritura_string escritura2','escritura1',2,'p_escritura1','MyRlike.py',570),
  ('escritura1 -> escritura_expresion escritura2','escritura1',2,'p_escritura1','MyRlike.py',571),
  ('escritura2 -> COMMA escritura1','escritura2',2,'p_escritura2','MyRlike.py',577),
  ('escritura2 -> epsilon','escritura2',1,'p_escritura2','MyRlike.py',578),
  ('escritura_string -> STRING','escritura_string',1,'p_escritura_string','MyRlike.py',584),
  ('escritura_expresion -> expresion','escritura_expresion',1,'p_escritura_expresion','MyRlike.py',600),
  ('condicion -> IF OPENPAR expresion CLOSEPAR THEN condicion_punto1 OPENCURLY estatutos CLOSECURLY condicion1','condicion',10,'p_condicion','MyRlike.py',608),
  ('condicion1 -> ELSE condicion_punto3 OPENCURLY estatutos CLOSECURLY condicion_punto4','condicion1',6,'p_condicion1','MyRlike.py',614),
  ('condicion1 -> condicion_punto2 epsilon','condicion1',2,'p_condicion1','MyRlike.py',615),
  ('condicion_punto1 -> epsilon','condicion_punto1',1,'p_condicion_punto1','MyRlike.py',621),
  ('condicion_punto2 -> epsilon','condicion_punto2',1,'p_condicion_punto2','MyRlike.py',628),
  ('condicion_punto3 -> epsilon','condicion_punto3',1,'p_condicion_punto3','MyRlike.py',635),
  ('condicion_punto4 -> epsilon','condicion_punto4',1,'p_condicion_punto4','MyRlike.py',642),
  ('while -> WHILE while_punto1 OPENPAR expresion CLOSEPAR while_punto2 DO OPENCURLY estatutos CLOSECURLY while_punto3','while',11,'p_while','MyRlike.py',649),
  ('while_punto1 -> epsilon','while_punto1',1,'p_while_punto1','MyRlike.py',655),
  ('while_punto2 -> epsilon','while_punto2',1,'p_while_punto2','MyRlike.py',662),
  ('while_punto3 -> epsilon','while_punto3',1,'p_while_punto3','MyRlike.py',669),
  ('for -> FOR for1 IS exp for_punto1 TO exp for_punto2 DO OPENCURLY estatutos CLOSECURLY for_punto3','for',13,'p_for','MyRlike.py',676),
  ('for1 -> ID OPENBOX block exp CLOSEBOX unblock','for1',6,'p_for1','MyRlike.py',682),
  ('for1 -> ID','for1',1,'p_for1','MyRlike.py',683),
  ('for_punto1 -> epsilon','for_punto1',1,'p_for_punto1','MyRlike.py',703),
  ('for_punto2 -> epsilon','for_punto2',1,'p_for_punto2','MyRlike.py',710),
  ('for_punto3 -> epsilon','for_punto3',1,'p_for_punto3','MyRlike.py',717),
  ('est_exp -> expresion SEMICOLON','est_exp',2,'p_est_exp','MyRlike.py',724),
  ('expresion -> and generate_expresion','expresion',2,'p_expresion','MyRlike.py',732),
  ('expresion -> and generate_expresion expresion1 expresion','expresion',4,'p_expresion','MyRlike.py',733),
  ('expresion1 -> OR','expresion1',1,'p_expresion1','MyRlike.py',739),
  ('generate_expresion -> epsilon','generate_expresion',1,'p_generate_expresion','MyRlike.py',746),
  ('and -> equal generate_and','and',2,'p_and','MyRlike.py',753),
  ('and -> equal generate_and and1 and','and',4,'p_and','MyRlike.py',754),
  ('and1 -> AND','and1',1,'p_and1','MyRlike.py',760),
  ('generate_and -> epsilon','generate_and',1,'p_generate_and','MyRlike.py',767),
  ('equal -> compare generate_equal','equal',2,'p_equal','MyRlike.py',774),
  ('equal -> compare generate_equal equal1 equal','equal',4,'p_equal','MyRlike.py',775),
  ('equal1 -> EQ','equal1',1,'p_equal1','MyRlike.py',781),
  ('equal1 -> NE','equal1',1,'p_equal1','MyRlike.py',782),
  ('generate_equal -> epsilon','generate_equal',1,'p_generate_equal','MyRlike.py',789),
  ('compare -> exp generate_compare','compare',2,'p_compare','MyRlike.py',796),
  ('compare -> exp generate_compare compare1 compare','compare',4,'p_compare','MyRlike.py',797),
  ('compare1 -> LT','compare1',1,'p_compare1','MyRlike.py',803),
  ('compare1 -> LE','compare1',1,'p_compare1','MyRlike.py',804),
  ('compare1 -> GT','compare1',1,'p_compare1','MyRlike.py',805),
  ('compare1 -> GE','compare1',1,'p_compare1','MyRlike.py',806),
  ('generate_compare -> epsilon','generate_compare',1,'p_generate_compare','MyRlike.py',813),
  ('exp -> termino generate_exp','exp',2,'p_exp','MyRlike.py',820),
  ('exp -> termino generate_exp exp1 exp','exp',4,'p_exp','MyRlike.py',821),
  ('exp1 -> PLUS','exp1',1,'p_exp1','MyRlike.py',827),
  ('exp1 -> MINUS','exp1',1,'p_exp1','MyRlike.py',828),
  ('generate_exp -> epsilon','generate_exp',1,'p_generate_exp','MyRlike.py',836),
  ('termino -> factor generate_termino','termino',2,'p_termino','MyRlike.py',844),
  ('termino -> factor generate_termino termino1 termino','termino',4,'p_termino','MyRlike.py',845),
  ('termino1 -> MULTIPLY','termino1',1,'p_termino1','MyRlike.py',851),
  ('termino1 -> DIVIDE','termino1',1,'p_termino1','MyRlike.py',852),
  ('termino1 -> MODULO','termino1',1,'p_termino1','MyRlike.py',853),
  ('generate_termino -> epsilon','generate_termino',1,'p_generate_termino','MyRlike.py',860),
  ('factor -> factor1','factor',1,'p_factor','MyRlike.py',867),
  ('factor -> OPENPAR block expresion CLOSEPAR unblock','factor',5,'p_factor','MyRlike.py',868),
  ('factor -> funcion','factor',1,'p_factor','MyRlike.py',869),
  ('factor -> factor2 varcte','factor',2,'p_factor','MyRlike.py',870),
  ('factor1 -> ID OPENBOX block exp CLOSEBOX unblock','factor1',6,'p_factor1','MyRlike.py',876),
  ('factor1 -> ID','factor1',1,'p_factor1','MyRlike.py',877),
  ('factor2 -> PLUS','factor2',1,'p_factor2','MyRlike.py',899),
  ('factor2 -> MINUS','factor2',1,'p_factor2','MyRlike.py',900),
  ('factor2 -> epsilon','factor2',1,'p_factor2','MyRlike.py',901),
  ('block -> epsilon','block',1,'p_block','MyRlike.py',913),
  ('unblock -> epsilon','unblock',1,'p_unblock','MyRlike.py',920),
  ('varcte -> int','varcte',1,'p_varcte','MyRlike.py',927),
  ('varcte -> float','varcte',1,'p_varcte','MyRlike.py',928),
  ('varcte -> char','varcte',1,'p_varcte','MyRlike.py',929),
  ('int -> INT','int',1,'p_int','MyRlike.py',939),
  ('float -> FLOAT','float',1,'p_float','MyRlike.py',947),
  ('char -> CHAR','char',1,'p_char','MyRlike.py',955),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','MyRlike.py',963),
]
