Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
Rule 2     programa1 -> vars
Rule 3     programa1 -> epsilon
Rule 4     programa2 -> funciones
Rule 5     programa2 -> epsilon
Rule 6     programa3 -> estatutos
Rule 7     programa3 -> epsilon
Rule 8     vars -> VARS vars1
Rule 9     vars1 -> tipo COLON lista_ids SEMICOLON vars2
Rule 10    vars2 -> vars1
Rule 11    vars2 -> epsilon
Rule 12    lista_ids -> ID lista_ids1
Rule 13    lista_ids1 -> lista_ids2
Rule 14    lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2
Rule 15    lista_ids2 -> COMMA lista_ids
Rule 16    lista_ids2 -> epsilon
Rule 17    tipo -> TYPEFLOAT
Rule 18    tipo -> TYPEINT
Rule 19    tipo -> TYPECHAR
Rule 20    funciones -> FUNCTION funciones1
Rule 21    funciones -> epsilon
Rule 22    funciones1 -> tipo funciones2
Rule 23    funciones1 -> TYPEVOID funciones2
Rule 24    funciones2 -> ID OPENPAR funciones3
Rule 25    funciones3 -> funciones4
Rule 26    funciones3 -> funciones6
Rule 27    funciones4 -> tipo ID funciones5
Rule 28    funciones5 -> COMMA funciones4
Rule 29    funciones5 -> funciones6
Rule 30    funciones6 -> CLOSEPAR funciones7
Rule 31    funciones7 -> vars OPENCURLY funciones8
Rule 32    funciones7 -> OPENCURLY funciones8
Rule 33    funciones8 -> estatutos funciones8
Rule 34    funciones8 -> CLOSECURLY funciones
Rule 35    estatutos -> asignacion estatutos1
Rule 36    estatutos -> llamada estatutos1
Rule 37    estatutos -> retorno estatutos1
Rule 38    estatutos -> lectura estatutos1
Rule 39    estatutos -> escritura estatutos1
Rule 40    estatutos -> condicion estatutos1
Rule 41    estatutos -> while estatutos1
Rule 42    estatutos -> for estatutos1
Rule 43    estatutos -> expresion estatutos1
Rule 44    estatutos1 -> estatutos
Rule 45    estatutos1 -> epsilon
Rule 46    asignacion -> ID asignacion1 IS expresion SEMICOLON
Rule 47    asignacion1 -> OPENBOX exp CLOSEBOX
Rule 48    asignacion1 -> epsilon
Rule 49    llamada -> funcion SEMICOLON
Rule 50    funcion -> ID OPENPAR funcion1
Rule 51    funcion1 -> exp funcion2
Rule 52    funcion2 -> COMMA funcion1
Rule 53    funcion2 -> CLOSEPAR
Rule 54    retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON
Rule 55    lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON
Rule 56    escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
Rule 57    escritura1 -> STRING escritura2
Rule 58    escritura1 -> lista_ids escritura2
Rule 59    escritura2 -> COMMA escritura1
Rule 60    escritura2 -> epsilon
Rule 61    condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
Rule 62    condicion1 -> estatutos condicion1
Rule 63    condicion1 -> CLOSECURLY condicion2
Rule 64    condicion2 -> ELSE OPENCURLY condicion3
Rule 65    condicion2 -> epsilon
Rule 66    condicion3 -> estatutos condicion3
Rule 67    condicion3 -> CLOSECURLY
Rule 68    while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
Rule 69    while1 -> estatutos while1
Rule 70    while1 -> CLOSECURLY
Rule 71    for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
Rule 72    for1 -> OPENBOX exp CLOSEBOX
Rule 73    for1 -> epsilon
Rule 74    for2 -> estatutos for2
Rule 75    for2 -> epsilon
Rule 76    expresion -> or
Rule 77    or -> and or1
Rule 78    or1 -> OR or
Rule 79    or1 -> epsilon
Rule 80    and -> equal and1
Rule 81    and1 -> AND and
Rule 82    and1 -> epsilon
Rule 83    equal -> compare equal1
Rule 84    equal1 -> EQ equal
Rule 85    equal1 -> NE equal
Rule 86    equal1 -> epsilon
Rule 87    compare -> exp compare1
Rule 88    compare1 -> LT compare
Rule 89    compare1 -> LE compare
Rule 90    compare1 -> GT compare
Rule 91    compare1 -> GE compare
Rule 92    compare1 -> epsilon
Rule 93    exp -> termino exp1
Rule 94    exp1 -> PLUS exp
Rule 95    exp1 -> MINUS exp
Rule 96    exp1 -> epsilon
Rule 97    termino -> factor termino1
Rule 98    termino1 -> MULTIPLY termino
Rule 99    termino1 -> DIVIDE termino
Rule 100   termino1 -> MODULO termino
Rule 101   termino1 -> epsilon
Rule 102   factor -> ID factor1
Rule 103   factor -> OPENPAR expresion CLOSEPAR
Rule 104   factor -> funcion
Rule 105   factor -> factor2 varcte
Rule 106   factor1 -> OPENBOX exp CLOSEBOX
Rule 107   factor1 -> epsilon
Rule 108   factor2 -> PLUS
Rule 109   factor2 -> MINUS
Rule 110   factor2 -> epsilon
Rule 111   varcte -> ID
Rule 112   varcte -> INT
Rule 113   varcte -> FLOAT
Rule 114   varcte -> CHAR
Rule 115   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 81
CHAR                 : 114
CLOSEBOX             : 14 47 72 106
CLOSECURLY           : 1 34 63 67 70 71
CLOSEPAR             : 1 30 53 54 55 56 61 68 103
COLON                : 9
COMMA                : 15 28 52 59
DIVIDE               : 99
DO                   : 68 71
ELSE                 : 64
EQ                   : 84
FLOAT                : 113
FOR                  : 71
FUNCTION             : 20
GE                   : 91
GT                   : 90
ID                   : 1 12 24 27 46 50 71 102 111
IF                   : 61
INT                  : 112
IS                   : 46 71
LE                   : 89
LT                   : 88
MAIN                 : 1
MINUS                : 95 109
MODULO               : 100
MULTIPLY             : 98
NE                   : 85
OPENBOX              : 14 47 72 106
OPENCURLY            : 1 31 32 61 64 68 71
OPENPAR              : 1 24 50 54 55 56 61 68 103
OR                   : 78
PLUS                 : 94 108
PROGRAM              : 1
READ                 : 55
RETURN               : 54
SEMICOLON            : 1 9 46 49 54 55 56
STRING               : 57
THEN                 : 61
TO                   : 71
TYPECHAR             : 19
TYPEFLOAT            : 17
TYPEINT              : 18
TYPEVOID             : 23
VARS                 : 8
WHILE                : 68
WRITE                : 56
error                : 

Nonterminals, with rules where they appear

and                  : 77 81
and1                 : 80
asignacion           : 35
asignacion1          : 46
compare              : 83 88 89 90 91
compare1             : 87
condicion            : 40
condicion1           : 61 62
condicion2           : 63
condicion3           : 64 66
epsilon              : 3 5 7 11 16 21 45 48 60 65 73 75 79 82 86 92 96 101 107 110
equal                : 80 84 85
equal1               : 83
escritura            : 39
escritura1           : 56 59
escritura2           : 57 58
estatutos            : 6 33 44 62 66 69 74
estatutos1           : 35 36 37 38 39 40 41 42 43
exp                  : 14 47 51 54 71 71 72 87 94 95 106
exp1                 : 93
expresion            : 43 46 61 68 103
factor               : 97
factor1              : 102
factor2              : 105
for                  : 42
for1                 : 71
for2                 : 71 74
funcion              : 49 104
funcion1             : 50 52
funcion2             : 51
funciones            : 4 34
funciones1           : 20
funciones2           : 22 23
funciones3           : 24
funciones4           : 25 28
funciones5           : 27
funciones6           : 26 29
funciones7           : 30
funciones8           : 31 32 33
lectura              : 38
lista_ids            : 9 15 55 58
lista_ids1           : 12
lista_ids2           : 13 14
llamada              : 36
or                   : 76 78
or1                  : 77
programa             : 0
programa1            : 1
programa2            : 1
programa3            : 1
retorno              : 37
termino              : 93 98 99 100
termino1             : 97
tipo                 : 9 22 27
varcte               : 105
vars                 : 2 31
vars1                : 8 10
vars2                : 9
while                : 41
while1               : 68 69

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
    (2) programa1 -> . vars
    (3) programa1 -> . epsilon
    (8) vars -> . VARS vars1
    (115) epsilon -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 115 (epsilon -> .)
    MAIN            reduce using rule 115 (epsilon -> .)

    vars                           shift and go to state 5
    epsilon                        shift and go to state 7
    programa1                      shift and go to state 8

state 5

    (2) programa1 -> vars .

    FUNCTION        reduce using rule 2 (programa1 -> vars .)
    MAIN            reduce using rule 2 (programa1 -> vars .)


state 6

    (8) vars -> VARS . vars1
    (9) vars1 -> . tipo COLON lista_ids SEMICOLON vars2
    (17) tipo -> . TYPEFLOAT
    (18) tipo -> . TYPEINT
    (19) tipo -> . TYPECHAR

    TYPEFLOAT       shift and go to state 13
    TYPEINT         shift and go to state 12
    TYPECHAR        shift and go to state 10

    vars1                          shift and go to state 11
    tipo                           shift and go to state 9

state 7

    (3) programa1 -> epsilon .

    FUNCTION        reduce using rule 3 (programa1 -> epsilon .)
    MAIN            reduce using rule 3 (programa1 -> epsilon .)


state 8

    (1) programa -> PROGRAM ID SEMICOLON programa1 . programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
    (4) programa2 -> . funciones
    (5) programa2 -> . epsilon
    (20) funciones -> . FUNCTION funciones1
    (21) funciones -> . epsilon
    (115) epsilon -> .

    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 15
    programa2                      shift and go to state 16
    funciones                      shift and go to state 17

state 9

    (9) vars1 -> tipo . COLON lista_ids SEMICOLON vars2

    COLON           shift and go to state 18


state 10

    (19) tipo -> TYPECHAR .

    COLON           reduce using rule 19 (tipo -> TYPECHAR .)
    ID              reduce using rule 19 (tipo -> TYPECHAR .)


state 11

    (8) vars -> VARS vars1 .

    FUNCTION        reduce using rule 8 (vars -> VARS vars1 .)
    MAIN            reduce using rule 8 (vars -> VARS vars1 .)
    OPENCURLY       reduce using rule 8 (vars -> VARS vars1 .)


state 12

    (18) tipo -> TYPEINT .

    COLON           reduce using rule 18 (tipo -> TYPEINT .)
    ID              reduce using rule 18 (tipo -> TYPEINT .)


state 13

    (17) tipo -> TYPEFLOAT .

    COLON           reduce using rule 17 (tipo -> TYPEFLOAT .)
    ID              reduce using rule 17 (tipo -> TYPEFLOAT .)


state 14

    (20) funciones -> FUNCTION . funciones1
    (22) funciones1 -> . tipo funciones2
    (23) funciones1 -> . TYPEVOID funciones2
    (17) tipo -> . TYPEFLOAT
    (18) tipo -> . TYPEINT
    (19) tipo -> . TYPECHAR

    TYPEVOID        shift and go to state 21
    TYPEFLOAT       shift and go to state 13
    TYPEINT         shift and go to state 12
    TYPECHAR        shift and go to state 10

    tipo                           shift and go to state 19
    funciones1                     shift and go to state 20

state 15

    (5) programa2 -> epsilon .
    (21) funciones -> epsilon .

  ! reduce/reduce conflict for MAIN resolved using rule 5 (programa2 -> epsilon .)
    MAIN            reduce using rule 5 (programa2 -> epsilon .)

  ! MAIN            [ reduce using rule 21 (funciones -> epsilon .) ]


state 16

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 . MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    MAIN            shift and go to state 22


state 17

    (4) programa2 -> funciones .

    MAIN            reduce using rule 4 (programa2 -> funciones .)


state 18

    (9) vars1 -> tipo COLON . lista_ids SEMICOLON vars2
    (12) lista_ids -> . ID lista_ids1

    ID              shift and go to state 24

    lista_ids                      shift and go to state 23

state 19

    (22) funciones1 -> tipo . funciones2
    (24) funciones2 -> . ID OPENPAR funciones3

    ID              shift and go to state 26

    funciones2                     shift and go to state 25

state 20

    (20) funciones -> FUNCTION funciones1 .

    MAIN            reduce using rule 20 (funciones -> FUNCTION funciones1 .)


state 21

    (23) funciones1 -> TYPEVOID . funciones2
    (24) funciones2 -> . ID OPENPAR funciones3

    ID              shift and go to state 26

    funciones2                     shift and go to state 27

state 22

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN . OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    OPENPAR         shift and go to state 28


state 23

    (9) vars1 -> tipo COLON lista_ids . SEMICOLON vars2

    SEMICOLON       shift and go to state 29


state 24

    (12) lista_ids -> ID . lista_ids1
    (13) lista_ids1 -> . lista_ids2
    (14) lista_ids1 -> . OPENBOX exp CLOSEBOX lista_ids2
    (15) lista_ids2 -> . COMMA lista_ids
    (16) lista_ids2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for COMMA resolved as shift
    OPENBOX         shift and go to state 31
    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)

  ! COMMA           [ reduce using rule 115 (epsilon -> .) ]

    lista_ids1                     shift and go to state 32
    lista_ids2                     shift and go to state 34
    epsilon                        shift and go to state 30

state 25

    (22) funciones1 -> tipo funciones2 .

    MAIN            reduce using rule 22 (funciones1 -> tipo funciones2 .)


state 26

    (24) funciones2 -> ID . OPENPAR funciones3

    OPENPAR         shift and go to state 35


state 27

    (23) funciones1 -> TYPEVOID funciones2 .

    MAIN            reduce using rule 23 (funciones1 -> TYPEVOID funciones2 .)


state 28

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR . CLOSEPAR OPENCURLY programa3 CLOSECURLY

    CLOSEPAR        shift and go to state 36


state 29

    (9) vars1 -> tipo COLON lista_ids SEMICOLON . vars2
    (10) vars2 -> . vars1
    (11) vars2 -> . epsilon
    (9) vars1 -> . tipo COLON lista_ids SEMICOLON vars2
    (115) epsilon -> .
    (17) tipo -> . TYPEFLOAT
    (18) tipo -> . TYPEINT
    (19) tipo -> . TYPECHAR

    FUNCTION        reduce using rule 115 (epsilon -> .)
    MAIN            reduce using rule 115 (epsilon -> .)
    OPENCURLY       reduce using rule 115 (epsilon -> .)
    TYPEFLOAT       shift and go to state 13
    TYPEINT         shift and go to state 12
    TYPECHAR        shift and go to state 10

    vars2                          shift and go to state 38
    vars1                          shift and go to state 39
    tipo                           shift and go to state 9
    epsilon                        shift and go to state 37

state 30

    (16) lista_ids2 -> epsilon .

    SEMICOLON       reduce using rule 16 (lista_ids2 -> epsilon .)
    CLOSEPAR        reduce using rule 16 (lista_ids2 -> epsilon .)
    COMMA           reduce using rule 16 (lista_ids2 -> epsilon .)


state 31

    (14) lista_ids1 -> OPENBOX . exp CLOSEBOX lista_ids2
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 46
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 32

    (12) lista_ids -> ID lista_ids1 .

    COMMA           reduce using rule 12 (lista_ids -> ID lista_ids1 .)
    CLOSEPAR        reduce using rule 12 (lista_ids -> ID lista_ids1 .)
    SEMICOLON       reduce using rule 12 (lista_ids -> ID lista_ids1 .)


state 33

    (15) lista_ids2 -> COMMA . lista_ids
    (12) lista_ids -> . ID lista_ids1

    ID              shift and go to state 24

    lista_ids                      shift and go to state 50

state 34

    (13) lista_ids1 -> lista_ids2 .

    SEMICOLON       reduce using rule 13 (lista_ids1 -> lista_ids2 .)
    CLOSEPAR        reduce using rule 13 (lista_ids1 -> lista_ids2 .)
    COMMA           reduce using rule 13 (lista_ids1 -> lista_ids2 .)


state 35

    (24) funciones2 -> ID OPENPAR . funciones3
    (25) funciones3 -> . funciones4
    (26) funciones3 -> . funciones6
    (27) funciones4 -> . tipo ID funciones5
    (30) funciones6 -> . CLOSEPAR funciones7
    (17) tipo -> . TYPEFLOAT
    (18) tipo -> . TYPEINT
    (19) tipo -> . TYPECHAR

    CLOSEPAR        shift and go to state 55
    TYPEFLOAT       shift and go to state 13
    TYPEINT         shift and go to state 12
    TYPECHAR        shift and go to state 10

    funciones6                     shift and go to state 51
    funciones4                     shift and go to state 52
    funciones3                     shift and go to state 53
    tipo                           shift and go to state 54

state 36

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR . OPENCURLY programa3 CLOSECURLY

    OPENCURLY       shift and go to state 56


state 37

    (11) vars2 -> epsilon .

    FUNCTION        reduce using rule 11 (vars2 -> epsilon .)
    MAIN            reduce using rule 11 (vars2 -> epsilon .)
    OPENCURLY       reduce using rule 11 (vars2 -> epsilon .)


state 38

    (9) vars1 -> tipo COLON lista_ids SEMICOLON vars2 .

    FUNCTION        reduce using rule 9 (vars1 -> tipo COLON lista_ids SEMICOLON vars2 .)
    MAIN            reduce using rule 9 (vars1 -> tipo COLON lista_ids SEMICOLON vars2 .)
    OPENCURLY       reduce using rule 9 (vars1 -> tipo COLON lista_ids SEMICOLON vars2 .)


state 39

    (10) vars2 -> vars1 .

    FUNCTION        reduce using rule 10 (vars2 -> vars1 .)
    MAIN            reduce using rule 10 (vars2 -> vars1 .)
    OPENCURLY       reduce using rule 10 (vars2 -> vars1 .)


state 40

    (105) factor -> factor2 . varcte
    (111) varcte -> . ID
    (112) varcte -> . INT
    (113) varcte -> . FLOAT
    (114) varcte -> . CHAR

    ID              shift and go to state 61
    INT             shift and go to state 58
    FLOAT           shift and go to state 59
    CHAR            shift and go to state 60

    varcte                         shift and go to state 57

state 41

    (110) factor2 -> epsilon .

    ID              reduce using rule 110 (factor2 -> epsilon .)
    INT             reduce using rule 110 (factor2 -> epsilon .)
    FLOAT           reduce using rule 110 (factor2 -> epsilon .)
    CHAR            reduce using rule 110 (factor2 -> epsilon .)


state 42

    (97) termino -> factor . termino1
    (98) termino1 -> . MULTIPLY termino
    (99) termino1 -> . DIVIDE termino
    (100) termino1 -> . MODULO termino
    (101) termino1 -> . epsilon
    (115) epsilon -> .

    MULTIPLY        shift and go to state 66
    DIVIDE          shift and go to state 63
    MODULO          shift and go to state 62
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    CLOSEBOX        reduce using rule 115 (epsilon -> .)
    LT              reduce using rule 115 (epsilon -> .)
    LE              reduce using rule 115 (epsilon -> .)
    GT              reduce using rule 115 (epsilon -> .)
    GE              reduce using rule 115 (epsilon -> .)
    EQ              reduce using rule 115 (epsilon -> .)
    NE              reduce using rule 115 (epsilon -> .)
    AND             reduce using rule 115 (epsilon -> .)
    OR              reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    OPENPAR         reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    COMMA           reduce using rule 115 (epsilon -> .)
    SEMICOLON       reduce using rule 115 (epsilon -> .)
    TO              reduce using rule 115 (epsilon -> .)
    DO              reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 64
    termino1                       shift and go to state 65

state 43

    (103) factor -> OPENPAR . expresion CLOSEPAR
    (76) expresion -> . or
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    expresion                      shift and go to state 70
    and                            shift and go to state 67
    compare                        shift and go to state 68
    factor2                        shift and go to state 40
    funcion                        shift and go to state 49
    equal                          shift and go to state 71
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    factor                         shift and go to state 42
    or                             shift and go to state 72

state 44

    (108) factor2 -> PLUS .

    ID              reduce using rule 108 (factor2 -> PLUS .)
    INT             reduce using rule 108 (factor2 -> PLUS .)
    FLOAT           reduce using rule 108 (factor2 -> PLUS .)
    CHAR            reduce using rule 108 (factor2 -> PLUS .)


state 45

    (93) exp -> termino . exp1
    (94) exp1 -> . PLUS exp
    (95) exp1 -> . MINUS exp
    (96) exp1 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    CLOSEBOX        reduce using rule 115 (epsilon -> .)
    LT              reduce using rule 115 (epsilon -> .)
    LE              reduce using rule 115 (epsilon -> .)
    GT              reduce using rule 115 (epsilon -> .)
    GE              reduce using rule 115 (epsilon -> .)
    EQ              reduce using rule 115 (epsilon -> .)
    NE              reduce using rule 115 (epsilon -> .)
    AND             reduce using rule 115 (epsilon -> .)
    OR              reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    OPENPAR         reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    COMMA           reduce using rule 115 (epsilon -> .)
    SEMICOLON       reduce using rule 115 (epsilon -> .)
    TO              reduce using rule 115 (epsilon -> .)
    DO              reduce using rule 115 (epsilon -> .)

  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    epsilon                        shift and go to state 73
    exp1                           shift and go to state 74

state 46

    (14) lista_ids1 -> OPENBOX exp . CLOSEBOX lista_ids2

    CLOSEBOX        shift and go to state 77


state 47

    (109) factor2 -> MINUS .

    ID              reduce using rule 109 (factor2 -> MINUS .)
    INT             reduce using rule 109 (factor2 -> MINUS .)
    FLOAT           reduce using rule 109 (factor2 -> MINUS .)
    CHAR            reduce using rule 109 (factor2 -> MINUS .)


state 48

    (102) factor -> ID . factor1
    (50) funcion -> ID . OPENPAR funcion1
    (106) factor1 -> . OPENBOX exp CLOSEBOX
    (107) factor1 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for OPENPAR resolved as shift
    OPENPAR         shift and go to state 81
    OPENBOX         shift and go to state 80
    MULTIPLY        reduce using rule 115 (epsilon -> .)
    DIVIDE          reduce using rule 115 (epsilon -> .)
    MODULO          reduce using rule 115 (epsilon -> .)
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    CLOSEBOX        reduce using rule 115 (epsilon -> .)
    LT              reduce using rule 115 (epsilon -> .)
    LE              reduce using rule 115 (epsilon -> .)
    GT              reduce using rule 115 (epsilon -> .)
    GE              reduce using rule 115 (epsilon -> .)
    EQ              reduce using rule 115 (epsilon -> .)
    NE              reduce using rule 115 (epsilon -> .)
    AND             reduce using rule 115 (epsilon -> .)
    OR              reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    COMMA           reduce using rule 115 (epsilon -> .)
    SEMICOLON       reduce using rule 115 (epsilon -> .)
    TO              reduce using rule 115 (epsilon -> .)
    DO              reduce using rule 115 (epsilon -> .)

  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]

    factor1                        shift and go to state 78
    epsilon                        shift and go to state 79

state 49

    (104) factor -> funcion .

    MULTIPLY        reduce using rule 104 (factor -> funcion .)
    DIVIDE          reduce using rule 104 (factor -> funcion .)
    MODULO          reduce using rule 104 (factor -> funcion .)
    PLUS            reduce using rule 104 (factor -> funcion .)
    MINUS           reduce using rule 104 (factor -> funcion .)
    CLOSEBOX        reduce using rule 104 (factor -> funcion .)
    LT              reduce using rule 104 (factor -> funcion .)
    LE              reduce using rule 104 (factor -> funcion .)
    GT              reduce using rule 104 (factor -> funcion .)
    GE              reduce using rule 104 (factor -> funcion .)
    EQ              reduce using rule 104 (factor -> funcion .)
    NE              reduce using rule 104 (factor -> funcion .)
    AND             reduce using rule 104 (factor -> funcion .)
    OR              reduce using rule 104 (factor -> funcion .)
    CLOSEPAR        reduce using rule 104 (factor -> funcion .)
    ID              reduce using rule 104 (factor -> funcion .)
    RETURN          reduce using rule 104 (factor -> funcion .)
    READ            reduce using rule 104 (factor -> funcion .)
    WRITE           reduce using rule 104 (factor -> funcion .)
    IF              reduce using rule 104 (factor -> funcion .)
    WHILE           reduce using rule 104 (factor -> funcion .)
    FOR             reduce using rule 104 (factor -> funcion .)
    OPENPAR         reduce using rule 104 (factor -> funcion .)
    INT             reduce using rule 104 (factor -> funcion .)
    FLOAT           reduce using rule 104 (factor -> funcion .)
    CHAR            reduce using rule 104 (factor -> funcion .)
    CLOSECURLY      reduce using rule 104 (factor -> funcion .)
    SEMICOLON       reduce using rule 104 (factor -> funcion .)
    COMMA           reduce using rule 104 (factor -> funcion .)
    TO              reduce using rule 104 (factor -> funcion .)
    DO              reduce using rule 104 (factor -> funcion .)


state 50

    (15) lista_ids2 -> COMMA lista_ids .

    SEMICOLON       reduce using rule 15 (lista_ids2 -> COMMA lista_ids .)
    CLOSEPAR        reduce using rule 15 (lista_ids2 -> COMMA lista_ids .)
    COMMA           reduce using rule 15 (lista_ids2 -> COMMA lista_ids .)


state 51

    (26) funciones3 -> funciones6 .

    MAIN            reduce using rule 26 (funciones3 -> funciones6 .)


state 52

    (25) funciones3 -> funciones4 .

    MAIN            reduce using rule 25 (funciones3 -> funciones4 .)


state 53

    (24) funciones2 -> ID OPENPAR funciones3 .

    MAIN            reduce using rule 24 (funciones2 -> ID OPENPAR funciones3 .)


state 54

    (27) funciones4 -> tipo . ID funciones5

    ID              shift and go to state 82


state 55

    (30) funciones6 -> CLOSEPAR . funciones7
    (31) funciones7 -> . vars OPENCURLY funciones8
    (32) funciones7 -> . OPENCURLY funciones8
    (8) vars -> . VARS vars1

    OPENCURLY       shift and go to state 84
    VARS            shift and go to state 6

    funciones7                     shift and go to state 83
    vars                           shift and go to state 85

state 56

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY . programa3 CLOSECURLY
    (6) programa3 -> . estatutos
    (7) programa3 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    programa3                      shift and go to state 88
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 97
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 99
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 57

    (105) factor -> factor2 varcte .

    MULTIPLY        reduce using rule 105 (factor -> factor2 varcte .)
    DIVIDE          reduce using rule 105 (factor -> factor2 varcte .)
    MODULO          reduce using rule 105 (factor -> factor2 varcte .)
    PLUS            reduce using rule 105 (factor -> factor2 varcte .)
    MINUS           reduce using rule 105 (factor -> factor2 varcte .)
    CLOSEBOX        reduce using rule 105 (factor -> factor2 varcte .)
    LT              reduce using rule 105 (factor -> factor2 varcte .)
    LE              reduce using rule 105 (factor -> factor2 varcte .)
    GT              reduce using rule 105 (factor -> factor2 varcte .)
    GE              reduce using rule 105 (factor -> factor2 varcte .)
    EQ              reduce using rule 105 (factor -> factor2 varcte .)
    NE              reduce using rule 105 (factor -> factor2 varcte .)
    AND             reduce using rule 105 (factor -> factor2 varcte .)
    OR              reduce using rule 105 (factor -> factor2 varcte .)
    ID              reduce using rule 105 (factor -> factor2 varcte .)
    RETURN          reduce using rule 105 (factor -> factor2 varcte .)
    READ            reduce using rule 105 (factor -> factor2 varcte .)
    WRITE           reduce using rule 105 (factor -> factor2 varcte .)
    IF              reduce using rule 105 (factor -> factor2 varcte .)
    WHILE           reduce using rule 105 (factor -> factor2 varcte .)
    FOR             reduce using rule 105 (factor -> factor2 varcte .)
    OPENPAR         reduce using rule 105 (factor -> factor2 varcte .)
    INT             reduce using rule 105 (factor -> factor2 varcte .)
    FLOAT           reduce using rule 105 (factor -> factor2 varcte .)
    CHAR            reduce using rule 105 (factor -> factor2 varcte .)
    CLOSECURLY      reduce using rule 105 (factor -> factor2 varcte .)
    CLOSEPAR        reduce using rule 105 (factor -> factor2 varcte .)
    SEMICOLON       reduce using rule 105 (factor -> factor2 varcte .)
    COMMA           reduce using rule 105 (factor -> factor2 varcte .)
    TO              reduce using rule 105 (factor -> factor2 varcte .)
    DO              reduce using rule 105 (factor -> factor2 varcte .)


state 58

    (112) varcte -> INT .

    MULTIPLY        reduce using rule 112 (varcte -> INT .)
    DIVIDE          reduce using rule 112 (varcte -> INT .)
    MODULO          reduce using rule 112 (varcte -> INT .)
    PLUS            reduce using rule 112 (varcte -> INT .)
    MINUS           reduce using rule 112 (varcte -> INT .)
    CLOSEBOX        reduce using rule 112 (varcte -> INT .)
    LT              reduce using rule 112 (varcte -> INT .)
    LE              reduce using rule 112 (varcte -> INT .)
    GT              reduce using rule 112 (varcte -> INT .)
    GE              reduce using rule 112 (varcte -> INT .)
    EQ              reduce using rule 112 (varcte -> INT .)
    NE              reduce using rule 112 (varcte -> INT .)
    AND             reduce using rule 112 (varcte -> INT .)
    OR              reduce using rule 112 (varcte -> INT .)
    CLOSEPAR        reduce using rule 112 (varcte -> INT .)
    ID              reduce using rule 112 (varcte -> INT .)
    RETURN          reduce using rule 112 (varcte -> INT .)
    READ            reduce using rule 112 (varcte -> INT .)
    WRITE           reduce using rule 112 (varcte -> INT .)
    IF              reduce using rule 112 (varcte -> INT .)
    WHILE           reduce using rule 112 (varcte -> INT .)
    FOR             reduce using rule 112 (varcte -> INT .)
    OPENPAR         reduce using rule 112 (varcte -> INT .)
    INT             reduce using rule 112 (varcte -> INT .)
    FLOAT           reduce using rule 112 (varcte -> INT .)
    CHAR            reduce using rule 112 (varcte -> INT .)
    CLOSECURLY      reduce using rule 112 (varcte -> INT .)
    COMMA           reduce using rule 112 (varcte -> INT .)
    SEMICOLON       reduce using rule 112 (varcte -> INT .)
    TO              reduce using rule 112 (varcte -> INT .)
    DO              reduce using rule 112 (varcte -> INT .)


state 59

    (113) varcte -> FLOAT .

    MULTIPLY        reduce using rule 113 (varcte -> FLOAT .)
    DIVIDE          reduce using rule 113 (varcte -> FLOAT .)
    MODULO          reduce using rule 113 (varcte -> FLOAT .)
    PLUS            reduce using rule 113 (varcte -> FLOAT .)
    MINUS           reduce using rule 113 (varcte -> FLOAT .)
    CLOSEBOX        reduce using rule 113 (varcte -> FLOAT .)
    LT              reduce using rule 113 (varcte -> FLOAT .)
    LE              reduce using rule 113 (varcte -> FLOAT .)
    GT              reduce using rule 113 (varcte -> FLOAT .)
    GE              reduce using rule 113 (varcte -> FLOAT .)
    EQ              reduce using rule 113 (varcte -> FLOAT .)
    NE              reduce using rule 113 (varcte -> FLOAT .)
    AND             reduce using rule 113 (varcte -> FLOAT .)
    OR              reduce using rule 113 (varcte -> FLOAT .)
    CLOSEPAR        reduce using rule 113 (varcte -> FLOAT .)
    ID              reduce using rule 113 (varcte -> FLOAT .)
    RETURN          reduce using rule 113 (varcte -> FLOAT .)
    READ            reduce using rule 113 (varcte -> FLOAT .)
    WRITE           reduce using rule 113 (varcte -> FLOAT .)
    IF              reduce using rule 113 (varcte -> FLOAT .)
    WHILE           reduce using rule 113 (varcte -> FLOAT .)
    FOR             reduce using rule 113 (varcte -> FLOAT .)
    OPENPAR         reduce using rule 113 (varcte -> FLOAT .)
    INT             reduce using rule 113 (varcte -> FLOAT .)
    FLOAT           reduce using rule 113 (varcte -> FLOAT .)
    CHAR            reduce using rule 113 (varcte -> FLOAT .)
    CLOSECURLY      reduce using rule 113 (varcte -> FLOAT .)
    COMMA           reduce using rule 113 (varcte -> FLOAT .)
    SEMICOLON       reduce using rule 113 (varcte -> FLOAT .)
    TO              reduce using rule 113 (varcte -> FLOAT .)
    DO              reduce using rule 113 (varcte -> FLOAT .)


state 60

    (114) varcte -> CHAR .

    MULTIPLY        reduce using rule 114 (varcte -> CHAR .)
    DIVIDE          reduce using rule 114 (varcte -> CHAR .)
    MODULO          reduce using rule 114 (varcte -> CHAR .)
    PLUS            reduce using rule 114 (varcte -> CHAR .)
    MINUS           reduce using rule 114 (varcte -> CHAR .)
    CLOSEBOX        reduce using rule 114 (varcte -> CHAR .)
    LT              reduce using rule 114 (varcte -> CHAR .)
    LE              reduce using rule 114 (varcte -> CHAR .)
    GT              reduce using rule 114 (varcte -> CHAR .)
    GE              reduce using rule 114 (varcte -> CHAR .)
    EQ              reduce using rule 114 (varcte -> CHAR .)
    NE              reduce using rule 114 (varcte -> CHAR .)
    AND             reduce using rule 114 (varcte -> CHAR .)
    OR              reduce using rule 114 (varcte -> CHAR .)
    CLOSEPAR        reduce using rule 114 (varcte -> CHAR .)
    ID              reduce using rule 114 (varcte -> CHAR .)
    RETURN          reduce using rule 114 (varcte -> CHAR .)
    READ            reduce using rule 114 (varcte -> CHAR .)
    WRITE           reduce using rule 114 (varcte -> CHAR .)
    IF              reduce using rule 114 (varcte -> CHAR .)
    WHILE           reduce using rule 114 (varcte -> CHAR .)
    FOR             reduce using rule 114 (varcte -> CHAR .)
    OPENPAR         reduce using rule 114 (varcte -> CHAR .)
    INT             reduce using rule 114 (varcte -> CHAR .)
    FLOAT           reduce using rule 114 (varcte -> CHAR .)
    CHAR            reduce using rule 114 (varcte -> CHAR .)
    CLOSECURLY      reduce using rule 114 (varcte -> CHAR .)
    COMMA           reduce using rule 114 (varcte -> CHAR .)
    SEMICOLON       reduce using rule 114 (varcte -> CHAR .)
    TO              reduce using rule 114 (varcte -> CHAR .)
    DO              reduce using rule 114 (varcte -> CHAR .)


state 61

    (111) varcte -> ID .

    MULTIPLY        reduce using rule 111 (varcte -> ID .)
    DIVIDE          reduce using rule 111 (varcte -> ID .)
    MODULO          reduce using rule 111 (varcte -> ID .)
    PLUS            reduce using rule 111 (varcte -> ID .)
    MINUS           reduce using rule 111 (varcte -> ID .)
    CLOSEBOX        reduce using rule 111 (varcte -> ID .)
    LT              reduce using rule 111 (varcte -> ID .)
    LE              reduce using rule 111 (varcte -> ID .)
    GT              reduce using rule 111 (varcte -> ID .)
    GE              reduce using rule 111 (varcte -> ID .)
    EQ              reduce using rule 111 (varcte -> ID .)
    NE              reduce using rule 111 (varcte -> ID .)
    AND             reduce using rule 111 (varcte -> ID .)
    OR              reduce using rule 111 (varcte -> ID .)
    CLOSEPAR        reduce using rule 111 (varcte -> ID .)
    ID              reduce using rule 111 (varcte -> ID .)
    RETURN          reduce using rule 111 (varcte -> ID .)
    READ            reduce using rule 111 (varcte -> ID .)
    WRITE           reduce using rule 111 (varcte -> ID .)
    IF              reduce using rule 111 (varcte -> ID .)
    WHILE           reduce using rule 111 (varcte -> ID .)
    FOR             reduce using rule 111 (varcte -> ID .)
    OPENPAR         reduce using rule 111 (varcte -> ID .)
    INT             reduce using rule 111 (varcte -> ID .)
    FLOAT           reduce using rule 111 (varcte -> ID .)
    CHAR            reduce using rule 111 (varcte -> ID .)
    CLOSECURLY      reduce using rule 111 (varcte -> ID .)
    COMMA           reduce using rule 111 (varcte -> ID .)
    SEMICOLON       reduce using rule 111 (varcte -> ID .)
    TO              reduce using rule 111 (varcte -> ID .)
    DO              reduce using rule 111 (varcte -> ID .)


state 62

    (100) termino1 -> MODULO . termino
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 106
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 63

    (99) termino1 -> DIVIDE . termino
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 107
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 64

    (101) termino1 -> epsilon .

    PLUS            reduce using rule 101 (termino1 -> epsilon .)
    MINUS           reduce using rule 101 (termino1 -> epsilon .)
    CLOSEBOX        reduce using rule 101 (termino1 -> epsilon .)
    LT              reduce using rule 101 (termino1 -> epsilon .)
    LE              reduce using rule 101 (termino1 -> epsilon .)
    GT              reduce using rule 101 (termino1 -> epsilon .)
    GE              reduce using rule 101 (termino1 -> epsilon .)
    EQ              reduce using rule 101 (termino1 -> epsilon .)
    NE              reduce using rule 101 (termino1 -> epsilon .)
    AND             reduce using rule 101 (termino1 -> epsilon .)
    OR              reduce using rule 101 (termino1 -> epsilon .)
    CLOSEPAR        reduce using rule 101 (termino1 -> epsilon .)
    ID              reduce using rule 101 (termino1 -> epsilon .)
    RETURN          reduce using rule 101 (termino1 -> epsilon .)
    READ            reduce using rule 101 (termino1 -> epsilon .)
    WRITE           reduce using rule 101 (termino1 -> epsilon .)
    IF              reduce using rule 101 (termino1 -> epsilon .)
    WHILE           reduce using rule 101 (termino1 -> epsilon .)
    FOR             reduce using rule 101 (termino1 -> epsilon .)
    OPENPAR         reduce using rule 101 (termino1 -> epsilon .)
    INT             reduce using rule 101 (termino1 -> epsilon .)
    FLOAT           reduce using rule 101 (termino1 -> epsilon .)
    CHAR            reduce using rule 101 (termino1 -> epsilon .)
    CLOSECURLY      reduce using rule 101 (termino1 -> epsilon .)
    COMMA           reduce using rule 101 (termino1 -> epsilon .)
    SEMICOLON       reduce using rule 101 (termino1 -> epsilon .)
    TO              reduce using rule 101 (termino1 -> epsilon .)
    DO              reduce using rule 101 (termino1 -> epsilon .)


state 65

    (97) termino -> factor termino1 .

    PLUS            reduce using rule 97 (termino -> factor termino1 .)
    MINUS           reduce using rule 97 (termino -> factor termino1 .)
    CLOSEBOX        reduce using rule 97 (termino -> factor termino1 .)
    LT              reduce using rule 97 (termino -> factor termino1 .)
    LE              reduce using rule 97 (termino -> factor termino1 .)
    GT              reduce using rule 97 (termino -> factor termino1 .)
    GE              reduce using rule 97 (termino -> factor termino1 .)
    EQ              reduce using rule 97 (termino -> factor termino1 .)
    NE              reduce using rule 97 (termino -> factor termino1 .)
    AND             reduce using rule 97 (termino -> factor termino1 .)
    OR              reduce using rule 97 (termino -> factor termino1 .)
    ID              reduce using rule 97 (termino -> factor termino1 .)
    RETURN          reduce using rule 97 (termino -> factor termino1 .)
    READ            reduce using rule 97 (termino -> factor termino1 .)
    WRITE           reduce using rule 97 (termino -> factor termino1 .)
    IF              reduce using rule 97 (termino -> factor termino1 .)
    WHILE           reduce using rule 97 (termino -> factor termino1 .)
    FOR             reduce using rule 97 (termino -> factor termino1 .)
    OPENPAR         reduce using rule 97 (termino -> factor termino1 .)
    INT             reduce using rule 97 (termino -> factor termino1 .)
    FLOAT           reduce using rule 97 (termino -> factor termino1 .)
    CHAR            reduce using rule 97 (termino -> factor termino1 .)
    CLOSECURLY      reduce using rule 97 (termino -> factor termino1 .)
    CLOSEPAR        reduce using rule 97 (termino -> factor termino1 .)
    SEMICOLON       reduce using rule 97 (termino -> factor termino1 .)
    TO              reduce using rule 97 (termino -> factor termino1 .)
    COMMA           reduce using rule 97 (termino -> factor termino1 .)
    DO              reduce using rule 97 (termino -> factor termino1 .)


state 66

    (98) termino1 -> MULTIPLY . termino
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 108
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 67

    (77) or -> and . or1
    (78) or1 -> . OR or
    (79) or1 -> . epsilon
    (115) epsilon -> .

    OR              shift and go to state 110
    CLOSEPAR        reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    OPENPAR         reduce using rule 115 (epsilon -> .)
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    SEMICOLON       reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 109
    or1                            shift and go to state 111

state 68

    (83) equal -> compare . equal1
    (84) equal1 -> . EQ equal
    (85) equal1 -> . NE equal
    (86) equal1 -> . epsilon
    (115) epsilon -> .

    EQ              shift and go to state 115
    NE              shift and go to state 113
    AND             reduce using rule 115 (epsilon -> .)
    OR              reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    OPENPAR         reduce using rule 115 (epsilon -> .)
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    SEMICOLON       reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 112
    equal1                         shift and go to state 114

state 69

    (87) compare -> exp . compare1
    (88) compare1 -> . LT compare
    (89) compare1 -> . LE compare
    (90) compare1 -> . GT compare
    (91) compare1 -> . GE compare
    (92) compare1 -> . epsilon
    (115) epsilon -> .

    LT              shift and go to state 119
    LE              shift and go to state 120
    GT              shift and go to state 116
    GE              shift and go to state 118
    EQ              reduce using rule 115 (epsilon -> .)
    NE              reduce using rule 115 (epsilon -> .)
    AND             reduce using rule 115 (epsilon -> .)
    OR              reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    OPENPAR         reduce using rule 115 (epsilon -> .)
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    SEMICOLON       reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 117
    compare1                       shift and go to state 121

state 70

    (103) factor -> OPENPAR expresion . CLOSEPAR

    CLOSEPAR        shift and go to state 122


state 71

    (80) and -> equal . and1
    (81) and1 -> . AND and
    (82) and1 -> . epsilon
    (115) epsilon -> .

    AND             shift and go to state 123
    OR              reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    OPENPAR         reduce using rule 115 (epsilon -> .)
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    SEMICOLON       reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 125
    and1                           shift and go to state 124

state 72

    (76) expresion -> or .

    CLOSEPAR        reduce using rule 76 (expresion -> or .)
    ID              reduce using rule 76 (expresion -> or .)
    RETURN          reduce using rule 76 (expresion -> or .)
    READ            reduce using rule 76 (expresion -> or .)
    WRITE           reduce using rule 76 (expresion -> or .)
    IF              reduce using rule 76 (expresion -> or .)
    WHILE           reduce using rule 76 (expresion -> or .)
    FOR             reduce using rule 76 (expresion -> or .)
    OPENPAR         reduce using rule 76 (expresion -> or .)
    PLUS            reduce using rule 76 (expresion -> or .)
    MINUS           reduce using rule 76 (expresion -> or .)
    INT             reduce using rule 76 (expresion -> or .)
    FLOAT           reduce using rule 76 (expresion -> or .)
    CHAR            reduce using rule 76 (expresion -> or .)
    CLOSECURLY      reduce using rule 76 (expresion -> or .)
    SEMICOLON       reduce using rule 76 (expresion -> or .)


state 73

    (96) exp1 -> epsilon .

    CLOSEBOX        reduce using rule 96 (exp1 -> epsilon .)
    LT              reduce using rule 96 (exp1 -> epsilon .)
    LE              reduce using rule 96 (exp1 -> epsilon .)
    GT              reduce using rule 96 (exp1 -> epsilon .)
    GE              reduce using rule 96 (exp1 -> epsilon .)
    EQ              reduce using rule 96 (exp1 -> epsilon .)
    NE              reduce using rule 96 (exp1 -> epsilon .)
    AND             reduce using rule 96 (exp1 -> epsilon .)
    OR              reduce using rule 96 (exp1 -> epsilon .)
    CLOSEPAR        reduce using rule 96 (exp1 -> epsilon .)
    ID              reduce using rule 96 (exp1 -> epsilon .)
    RETURN          reduce using rule 96 (exp1 -> epsilon .)
    READ            reduce using rule 96 (exp1 -> epsilon .)
    WRITE           reduce using rule 96 (exp1 -> epsilon .)
    IF              reduce using rule 96 (exp1 -> epsilon .)
    WHILE           reduce using rule 96 (exp1 -> epsilon .)
    FOR             reduce using rule 96 (exp1 -> epsilon .)
    OPENPAR         reduce using rule 96 (exp1 -> epsilon .)
    PLUS            reduce using rule 96 (exp1 -> epsilon .)
    MINUS           reduce using rule 96 (exp1 -> epsilon .)
    INT             reduce using rule 96 (exp1 -> epsilon .)
    FLOAT           reduce using rule 96 (exp1 -> epsilon .)
    CHAR            reduce using rule 96 (exp1 -> epsilon .)
    CLOSECURLY      reduce using rule 96 (exp1 -> epsilon .)
    COMMA           reduce using rule 96 (exp1 -> epsilon .)
    SEMICOLON       reduce using rule 96 (exp1 -> epsilon .)
    TO              reduce using rule 96 (exp1 -> epsilon .)
    DO              reduce using rule 96 (exp1 -> epsilon .)


state 74

    (93) exp -> termino exp1 .

    LT              reduce using rule 93 (exp -> termino exp1 .)
    LE              reduce using rule 93 (exp -> termino exp1 .)
    GT              reduce using rule 93 (exp -> termino exp1 .)
    GE              reduce using rule 93 (exp -> termino exp1 .)
    EQ              reduce using rule 93 (exp -> termino exp1 .)
    NE              reduce using rule 93 (exp -> termino exp1 .)
    AND             reduce using rule 93 (exp -> termino exp1 .)
    OR              reduce using rule 93 (exp -> termino exp1 .)
    ID              reduce using rule 93 (exp -> termino exp1 .)
    RETURN          reduce using rule 93 (exp -> termino exp1 .)
    READ            reduce using rule 93 (exp -> termino exp1 .)
    WRITE           reduce using rule 93 (exp -> termino exp1 .)
    IF              reduce using rule 93 (exp -> termino exp1 .)
    WHILE           reduce using rule 93 (exp -> termino exp1 .)
    FOR             reduce using rule 93 (exp -> termino exp1 .)
    OPENPAR         reduce using rule 93 (exp -> termino exp1 .)
    PLUS            reduce using rule 93 (exp -> termino exp1 .)
    MINUS           reduce using rule 93 (exp -> termino exp1 .)
    INT             reduce using rule 93 (exp -> termino exp1 .)
    FLOAT           reduce using rule 93 (exp -> termino exp1 .)
    CHAR            reduce using rule 93 (exp -> termino exp1 .)
    CLOSECURLY      reduce using rule 93 (exp -> termino exp1 .)
    CLOSEPAR        reduce using rule 93 (exp -> termino exp1 .)
    SEMICOLON       reduce using rule 93 (exp -> termino exp1 .)
    DO              reduce using rule 93 (exp -> termino exp1 .)
    COMMA           reduce using rule 93 (exp -> termino exp1 .)
    CLOSEBOX        reduce using rule 93 (exp -> termino exp1 .)
    TO              reduce using rule 93 (exp -> termino exp1 .)


state 75

    (94) exp1 -> PLUS . exp
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 126
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 76

    (95) exp1 -> MINUS . exp
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 127
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 77

    (14) lista_ids1 -> OPENBOX exp CLOSEBOX . lista_ids2
    (15) lista_ids2 -> . COMMA lista_ids
    (16) lista_ids2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 115 (epsilon -> .)
    CLOSEPAR        reduce using rule 115 (epsilon -> .)

  ! COMMA           [ reduce using rule 115 (epsilon -> .) ]

    epsilon                        shift and go to state 30
    lista_ids2                     shift and go to state 128

state 78

    (102) factor -> ID factor1 .

    MULTIPLY        reduce using rule 102 (factor -> ID factor1 .)
    DIVIDE          reduce using rule 102 (factor -> ID factor1 .)
    MODULO          reduce using rule 102 (factor -> ID factor1 .)
    PLUS            reduce using rule 102 (factor -> ID factor1 .)
    MINUS           reduce using rule 102 (factor -> ID factor1 .)
    CLOSEBOX        reduce using rule 102 (factor -> ID factor1 .)
    LT              reduce using rule 102 (factor -> ID factor1 .)
    LE              reduce using rule 102 (factor -> ID factor1 .)
    GT              reduce using rule 102 (factor -> ID factor1 .)
    GE              reduce using rule 102 (factor -> ID factor1 .)
    EQ              reduce using rule 102 (factor -> ID factor1 .)
    NE              reduce using rule 102 (factor -> ID factor1 .)
    AND             reduce using rule 102 (factor -> ID factor1 .)
    OR              reduce using rule 102 (factor -> ID factor1 .)
    ID              reduce using rule 102 (factor -> ID factor1 .)
    RETURN          reduce using rule 102 (factor -> ID factor1 .)
    READ            reduce using rule 102 (factor -> ID factor1 .)
    WRITE           reduce using rule 102 (factor -> ID factor1 .)
    IF              reduce using rule 102 (factor -> ID factor1 .)
    WHILE           reduce using rule 102 (factor -> ID factor1 .)
    FOR             reduce using rule 102 (factor -> ID factor1 .)
    OPENPAR         reduce using rule 102 (factor -> ID factor1 .)
    INT             reduce using rule 102 (factor -> ID factor1 .)
    FLOAT           reduce using rule 102 (factor -> ID factor1 .)
    CHAR            reduce using rule 102 (factor -> ID factor1 .)
    CLOSECURLY      reduce using rule 102 (factor -> ID factor1 .)
    CLOSEPAR        reduce using rule 102 (factor -> ID factor1 .)
    SEMICOLON       reduce using rule 102 (factor -> ID factor1 .)
    COMMA           reduce using rule 102 (factor -> ID factor1 .)
    TO              reduce using rule 102 (factor -> ID factor1 .)
    DO              reduce using rule 102 (factor -> ID factor1 .)


state 79

    (107) factor1 -> epsilon .

    MULTIPLY        reduce using rule 107 (factor1 -> epsilon .)
    DIVIDE          reduce using rule 107 (factor1 -> epsilon .)
    MODULO          reduce using rule 107 (factor1 -> epsilon .)
    PLUS            reduce using rule 107 (factor1 -> epsilon .)
    MINUS           reduce using rule 107 (factor1 -> epsilon .)
    CLOSEBOX        reduce using rule 107 (factor1 -> epsilon .)
    LT              reduce using rule 107 (factor1 -> epsilon .)
    LE              reduce using rule 107 (factor1 -> epsilon .)
    GT              reduce using rule 107 (factor1 -> epsilon .)
    GE              reduce using rule 107 (factor1 -> epsilon .)
    EQ              reduce using rule 107 (factor1 -> epsilon .)
    NE              reduce using rule 107 (factor1 -> epsilon .)
    AND             reduce using rule 107 (factor1 -> epsilon .)
    OR              reduce using rule 107 (factor1 -> epsilon .)
    CLOSEPAR        reduce using rule 107 (factor1 -> epsilon .)
    ID              reduce using rule 107 (factor1 -> epsilon .)
    RETURN          reduce using rule 107 (factor1 -> epsilon .)
    READ            reduce using rule 107 (factor1 -> epsilon .)
    WRITE           reduce using rule 107 (factor1 -> epsilon .)
    IF              reduce using rule 107 (factor1 -> epsilon .)
    WHILE           reduce using rule 107 (factor1 -> epsilon .)
    FOR             reduce using rule 107 (factor1 -> epsilon .)
    OPENPAR         reduce using rule 107 (factor1 -> epsilon .)
    INT             reduce using rule 107 (factor1 -> epsilon .)
    FLOAT           reduce using rule 107 (factor1 -> epsilon .)
    CHAR            reduce using rule 107 (factor1 -> epsilon .)
    CLOSECURLY      reduce using rule 107 (factor1 -> epsilon .)
    COMMA           reduce using rule 107 (factor1 -> epsilon .)
    SEMICOLON       reduce using rule 107 (factor1 -> epsilon .)
    TO              reduce using rule 107 (factor1 -> epsilon .)
    DO              reduce using rule 107 (factor1 -> epsilon .)


state 80

    (106) factor1 -> OPENBOX . exp CLOSEBOX
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 129
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 81

    (50) funcion -> ID OPENPAR . funcion1
    (51) funcion1 -> . exp funcion2
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    funcion1                       shift and go to state 130
    termino                        shift and go to state 45
    exp                            shift and go to state 131
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 82

    (27) funciones4 -> tipo ID . funciones5
    (28) funciones5 -> . COMMA funciones4
    (29) funciones5 -> . funciones6
    (30) funciones6 -> . CLOSEPAR funciones7

    COMMA           shift and go to state 134
    CLOSEPAR        shift and go to state 55

    funciones6                     shift and go to state 132
    funciones5                     shift and go to state 133

state 83

    (30) funciones6 -> CLOSEPAR funciones7 .

    MAIN            reduce using rule 30 (funciones6 -> CLOSEPAR funciones7 .)


state 84

    (32) funciones7 -> OPENCURLY . funciones8
    (33) funciones8 -> . estatutos funciones8
    (34) funciones8 -> . CLOSECURLY funciones
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 135
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    funciones8                     shift and go to state 136
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 137
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 85

    (31) funciones7 -> vars . OPENCURLY funciones8

    OPENCURLY       shift and go to state 138


state 86

    (54) retorno -> RETURN . OPENPAR exp CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 139


state 87

    (55) lectura -> READ . OPENPAR lista_ids CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 140


state 88

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 . CLOSECURLY

    CLOSECURLY      shift and go to state 141


state 89

    (68) while -> WHILE . OPENPAR expresion CLOSEPAR DO OPENCURLY while1

    OPENPAR         shift and go to state 142


state 90

    (46) asignacion -> ID . asignacion1 IS expresion SEMICOLON
    (50) funcion -> ID . OPENPAR funcion1
    (102) factor -> ID . factor1
    (47) asignacion1 -> . OPENBOX exp CLOSEBOX
    (48) asignacion1 -> . epsilon
    (106) factor1 -> . OPENBOX exp CLOSEBOX
    (107) factor1 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for OPENPAR resolved as shift
    OPENPAR         shift and go to state 81
    OPENBOX         shift and go to state 144
    IS              reduce using rule 115 (epsilon -> .)
    MULTIPLY        reduce using rule 115 (epsilon -> .)
    DIVIDE          reduce using rule 115 (epsilon -> .)
    MODULO          reduce using rule 115 (epsilon -> .)
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    LT              reduce using rule 115 (epsilon -> .)
    LE              reduce using rule 115 (epsilon -> .)
    GT              reduce using rule 115 (epsilon -> .)
    GE              reduce using rule 115 (epsilon -> .)
    EQ              reduce using rule 115 (epsilon -> .)
    NE              reduce using rule 115 (epsilon -> .)
    AND             reduce using rule 115 (epsilon -> .)
    OR              reduce using rule 115 (epsilon -> .)
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)

  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]

    factor1                        shift and go to state 78
    epsilon                        shift and go to state 143
    asignacion1                    shift and go to state 145

state 91

    (36) estatutos -> llamada . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 146
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 92

    (40) estatutos -> condicion . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 149
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 93

    (37) estatutos -> retorno . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 150
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 94

    (38) estatutos -> lectura . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 151
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 95

    (49) llamada -> funcion . SEMICOLON
    (104) factor -> funcion .

    SEMICOLON       shift and go to state 152
    MULTIPLY        reduce using rule 104 (factor -> funcion .)
    DIVIDE          reduce using rule 104 (factor -> funcion .)
    MODULO          reduce using rule 104 (factor -> funcion .)
    PLUS            reduce using rule 104 (factor -> funcion .)
    MINUS           reduce using rule 104 (factor -> funcion .)
    LT              reduce using rule 104 (factor -> funcion .)
    LE              reduce using rule 104 (factor -> funcion .)
    GT              reduce using rule 104 (factor -> funcion .)
    GE              reduce using rule 104 (factor -> funcion .)
    EQ              reduce using rule 104 (factor -> funcion .)
    NE              reduce using rule 104 (factor -> funcion .)
    AND             reduce using rule 104 (factor -> funcion .)
    OR              reduce using rule 104 (factor -> funcion .)
    ID              reduce using rule 104 (factor -> funcion .)
    RETURN          reduce using rule 104 (factor -> funcion .)
    READ            reduce using rule 104 (factor -> funcion .)
    WRITE           reduce using rule 104 (factor -> funcion .)
    IF              reduce using rule 104 (factor -> funcion .)
    WHILE           reduce using rule 104 (factor -> funcion .)
    FOR             reduce using rule 104 (factor -> funcion .)
    OPENPAR         reduce using rule 104 (factor -> funcion .)
    INT             reduce using rule 104 (factor -> funcion .)
    FLOAT           reduce using rule 104 (factor -> funcion .)
    CHAR            reduce using rule 104 (factor -> funcion .)
    CLOSECURLY      reduce using rule 104 (factor -> funcion .)


state 96

    (71) for -> FOR . ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY

    ID              shift and go to state 153


state 97

    (7) programa3 -> epsilon .
    (110) factor2 -> epsilon .

    CLOSECURLY      reduce using rule 7 (programa3 -> epsilon .)
    ID              reduce using rule 110 (factor2 -> epsilon .)
    INT             reduce using rule 110 (factor2 -> epsilon .)
    FLOAT           reduce using rule 110 (factor2 -> epsilon .)
    CHAR            reduce using rule 110 (factor2 -> epsilon .)


state 98

    (56) escritura -> WRITE . OPENPAR escritura1 CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 154


state 99

    (6) programa3 -> estatutos .

    CLOSECURLY      reduce using rule 6 (programa3 -> estatutos .)


state 100

    (61) condicion -> IF . OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1

    OPENPAR         shift and go to state 155


state 101

    (43) estatutos -> expresion . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 156
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 102

    (42) estatutos -> for . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 157
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 103

    (35) estatutos -> asignacion . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 158
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 104

    (41) estatutos -> while . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 159
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 105

    (39) estatutos -> escritura . estatutos1
    (44) estatutos1 -> . estatutos
    (45) estatutos1 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 115 (epsilon -> .) ]
  ! READ            [ reduce using rule 115 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 115 (epsilon -> .) ]
  ! IF              [ reduce using rule 115 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 115 (epsilon -> .) ]
  ! FOR             [ reduce using rule 115 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 115 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 115 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    estatutos1                     shift and go to state 160
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 147
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 148
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 106

    (100) termino1 -> MODULO termino .

    PLUS            reduce using rule 100 (termino1 -> MODULO termino .)
    MINUS           reduce using rule 100 (termino1 -> MODULO termino .)
    CLOSEBOX        reduce using rule 100 (termino1 -> MODULO termino .)
    LT              reduce using rule 100 (termino1 -> MODULO termino .)
    LE              reduce using rule 100 (termino1 -> MODULO termino .)
    GT              reduce using rule 100 (termino1 -> MODULO termino .)
    GE              reduce using rule 100 (termino1 -> MODULO termino .)
    EQ              reduce using rule 100 (termino1 -> MODULO termino .)
    NE              reduce using rule 100 (termino1 -> MODULO termino .)
    AND             reduce using rule 100 (termino1 -> MODULO termino .)
    OR              reduce using rule 100 (termino1 -> MODULO termino .)
    CLOSEPAR        reduce using rule 100 (termino1 -> MODULO termino .)
    ID              reduce using rule 100 (termino1 -> MODULO termino .)
    RETURN          reduce using rule 100 (termino1 -> MODULO termino .)
    READ            reduce using rule 100 (termino1 -> MODULO termino .)
    WRITE           reduce using rule 100 (termino1 -> MODULO termino .)
    IF              reduce using rule 100 (termino1 -> MODULO termino .)
    WHILE           reduce using rule 100 (termino1 -> MODULO termino .)
    FOR             reduce using rule 100 (termino1 -> MODULO termino .)
    OPENPAR         reduce using rule 100 (termino1 -> MODULO termino .)
    INT             reduce using rule 100 (termino1 -> MODULO termino .)
    FLOAT           reduce using rule 100 (termino1 -> MODULO termino .)
    CHAR            reduce using rule 100 (termino1 -> MODULO termino .)
    CLOSECURLY      reduce using rule 100 (termino1 -> MODULO termino .)
    COMMA           reduce using rule 100 (termino1 -> MODULO termino .)
    SEMICOLON       reduce using rule 100 (termino1 -> MODULO termino .)
    TO              reduce using rule 100 (termino1 -> MODULO termino .)
    DO              reduce using rule 100 (termino1 -> MODULO termino .)


state 107

    (99) termino1 -> DIVIDE termino .

    PLUS            reduce using rule 99 (termino1 -> DIVIDE termino .)
    MINUS           reduce using rule 99 (termino1 -> DIVIDE termino .)
    CLOSEBOX        reduce using rule 99 (termino1 -> DIVIDE termino .)
    LT              reduce using rule 99 (termino1 -> DIVIDE termino .)
    LE              reduce using rule 99 (termino1 -> DIVIDE termino .)
    GT              reduce using rule 99 (termino1 -> DIVIDE termino .)
    GE              reduce using rule 99 (termino1 -> DIVIDE termino .)
    EQ              reduce using rule 99 (termino1 -> DIVIDE termino .)
    NE              reduce using rule 99 (termino1 -> DIVIDE termino .)
    AND             reduce using rule 99 (termino1 -> DIVIDE termino .)
    OR              reduce using rule 99 (termino1 -> DIVIDE termino .)
    CLOSEPAR        reduce using rule 99 (termino1 -> DIVIDE termino .)
    ID              reduce using rule 99 (termino1 -> DIVIDE termino .)
    RETURN          reduce using rule 99 (termino1 -> DIVIDE termino .)
    READ            reduce using rule 99 (termino1 -> DIVIDE termino .)
    WRITE           reduce using rule 99 (termino1 -> DIVIDE termino .)
    IF              reduce using rule 99 (termino1 -> DIVIDE termino .)
    WHILE           reduce using rule 99 (termino1 -> DIVIDE termino .)
    FOR             reduce using rule 99 (termino1 -> DIVIDE termino .)
    OPENPAR         reduce using rule 99 (termino1 -> DIVIDE termino .)
    INT             reduce using rule 99 (termino1 -> DIVIDE termino .)
    FLOAT           reduce using rule 99 (termino1 -> DIVIDE termino .)
    CHAR            reduce using rule 99 (termino1 -> DIVIDE termino .)
    CLOSECURLY      reduce using rule 99 (termino1 -> DIVIDE termino .)
    COMMA           reduce using rule 99 (termino1 -> DIVIDE termino .)
    SEMICOLON       reduce using rule 99 (termino1 -> DIVIDE termino .)
    TO              reduce using rule 99 (termino1 -> DIVIDE termino .)
    DO              reduce using rule 99 (termino1 -> DIVIDE termino .)


state 108

    (98) termino1 -> MULTIPLY termino .

    PLUS            reduce using rule 98 (termino1 -> MULTIPLY termino .)
    MINUS           reduce using rule 98 (termino1 -> MULTIPLY termino .)
    CLOSEBOX        reduce using rule 98 (termino1 -> MULTIPLY termino .)
    LT              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    LE              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    GT              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    GE              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    EQ              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    NE              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    AND             reduce using rule 98 (termino1 -> MULTIPLY termino .)
    OR              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    CLOSEPAR        reduce using rule 98 (termino1 -> MULTIPLY termino .)
    ID              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    RETURN          reduce using rule 98 (termino1 -> MULTIPLY termino .)
    READ            reduce using rule 98 (termino1 -> MULTIPLY termino .)
    WRITE           reduce using rule 98 (termino1 -> MULTIPLY termino .)
    IF              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    WHILE           reduce using rule 98 (termino1 -> MULTIPLY termino .)
    FOR             reduce using rule 98 (termino1 -> MULTIPLY termino .)
    OPENPAR         reduce using rule 98 (termino1 -> MULTIPLY termino .)
    INT             reduce using rule 98 (termino1 -> MULTIPLY termino .)
    FLOAT           reduce using rule 98 (termino1 -> MULTIPLY termino .)
    CHAR            reduce using rule 98 (termino1 -> MULTIPLY termino .)
    CLOSECURLY      reduce using rule 98 (termino1 -> MULTIPLY termino .)
    COMMA           reduce using rule 98 (termino1 -> MULTIPLY termino .)
    SEMICOLON       reduce using rule 98 (termino1 -> MULTIPLY termino .)
    TO              reduce using rule 98 (termino1 -> MULTIPLY termino .)
    DO              reduce using rule 98 (termino1 -> MULTIPLY termino .)


state 109

    (79) or1 -> epsilon .

    CLOSEPAR        reduce using rule 79 (or1 -> epsilon .)
    ID              reduce using rule 79 (or1 -> epsilon .)
    RETURN          reduce using rule 79 (or1 -> epsilon .)
    READ            reduce using rule 79 (or1 -> epsilon .)
    WRITE           reduce using rule 79 (or1 -> epsilon .)
    IF              reduce using rule 79 (or1 -> epsilon .)
    WHILE           reduce using rule 79 (or1 -> epsilon .)
    FOR             reduce using rule 79 (or1 -> epsilon .)
    OPENPAR         reduce using rule 79 (or1 -> epsilon .)
    PLUS            reduce using rule 79 (or1 -> epsilon .)
    MINUS           reduce using rule 79 (or1 -> epsilon .)
    INT             reduce using rule 79 (or1 -> epsilon .)
    FLOAT           reduce using rule 79 (or1 -> epsilon .)
    CHAR            reduce using rule 79 (or1 -> epsilon .)
    CLOSECURLY      reduce using rule 79 (or1 -> epsilon .)
    SEMICOLON       reduce using rule 79 (or1 -> epsilon .)


state 110

    (78) or1 -> OR . or
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    factor2                        shift and go to state 40
    funcion                        shift and go to state 49
    equal                          shift and go to state 71
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    factor                         shift and go to state 42
    or                             shift and go to state 161

state 111

    (77) or -> and or1 .

    SEMICOLON       reduce using rule 77 (or -> and or1 .)
    CLOSEPAR        reduce using rule 77 (or -> and or1 .)
    ID              reduce using rule 77 (or -> and or1 .)
    RETURN          reduce using rule 77 (or -> and or1 .)
    READ            reduce using rule 77 (or -> and or1 .)
    WRITE           reduce using rule 77 (or -> and or1 .)
    IF              reduce using rule 77 (or -> and or1 .)
    WHILE           reduce using rule 77 (or -> and or1 .)
    FOR             reduce using rule 77 (or -> and or1 .)
    OPENPAR         reduce using rule 77 (or -> and or1 .)
    PLUS            reduce using rule 77 (or -> and or1 .)
    MINUS           reduce using rule 77 (or -> and or1 .)
    INT             reduce using rule 77 (or -> and or1 .)
    FLOAT           reduce using rule 77 (or -> and or1 .)
    CHAR            reduce using rule 77 (or -> and or1 .)
    CLOSECURLY      reduce using rule 77 (or -> and or1 .)


state 112

    (86) equal1 -> epsilon .

    AND             reduce using rule 86 (equal1 -> epsilon .)
    OR              reduce using rule 86 (equal1 -> epsilon .)
    CLOSEPAR        reduce using rule 86 (equal1 -> epsilon .)
    ID              reduce using rule 86 (equal1 -> epsilon .)
    RETURN          reduce using rule 86 (equal1 -> epsilon .)
    READ            reduce using rule 86 (equal1 -> epsilon .)
    WRITE           reduce using rule 86 (equal1 -> epsilon .)
    IF              reduce using rule 86 (equal1 -> epsilon .)
    WHILE           reduce using rule 86 (equal1 -> epsilon .)
    FOR             reduce using rule 86 (equal1 -> epsilon .)
    OPENPAR         reduce using rule 86 (equal1 -> epsilon .)
    PLUS            reduce using rule 86 (equal1 -> epsilon .)
    MINUS           reduce using rule 86 (equal1 -> epsilon .)
    INT             reduce using rule 86 (equal1 -> epsilon .)
    FLOAT           reduce using rule 86 (equal1 -> epsilon .)
    CHAR            reduce using rule 86 (equal1 -> epsilon .)
    CLOSECURLY      reduce using rule 86 (equal1 -> epsilon .)
    SEMICOLON       reduce using rule 86 (equal1 -> epsilon .)


state 113

    (85) equal1 -> NE . equal
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    compare                        shift and go to state 68
    exp                            shift and go to state 69
    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    equal                          shift and go to state 162
    termino                        shift and go to state 45
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 114

    (83) equal -> compare equal1 .

    AND             reduce using rule 83 (equal -> compare equal1 .)
    OR              reduce using rule 83 (equal -> compare equal1 .)
    ID              reduce using rule 83 (equal -> compare equal1 .)
    RETURN          reduce using rule 83 (equal -> compare equal1 .)
    READ            reduce using rule 83 (equal -> compare equal1 .)
    WRITE           reduce using rule 83 (equal -> compare equal1 .)
    IF              reduce using rule 83 (equal -> compare equal1 .)
    WHILE           reduce using rule 83 (equal -> compare equal1 .)
    FOR             reduce using rule 83 (equal -> compare equal1 .)
    OPENPAR         reduce using rule 83 (equal -> compare equal1 .)
    PLUS            reduce using rule 83 (equal -> compare equal1 .)
    MINUS           reduce using rule 83 (equal -> compare equal1 .)
    INT             reduce using rule 83 (equal -> compare equal1 .)
    FLOAT           reduce using rule 83 (equal -> compare equal1 .)
    CHAR            reduce using rule 83 (equal -> compare equal1 .)
    CLOSECURLY      reduce using rule 83 (equal -> compare equal1 .)
    SEMICOLON       reduce using rule 83 (equal -> compare equal1 .)
    CLOSEPAR        reduce using rule 83 (equal -> compare equal1 .)


state 115

    (84) equal1 -> EQ . equal
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    compare                        shift and go to state 68
    exp                            shift and go to state 69
    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    equal                          shift and go to state 163
    termino                        shift and go to state 45
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 116

    (90) compare1 -> GT . compare
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    compare                        shift and go to state 164
    exp                            shift and go to state 69
    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 117

    (92) compare1 -> epsilon .

    EQ              reduce using rule 92 (compare1 -> epsilon .)
    NE              reduce using rule 92 (compare1 -> epsilon .)
    AND             reduce using rule 92 (compare1 -> epsilon .)
    OR              reduce using rule 92 (compare1 -> epsilon .)
    CLOSEPAR        reduce using rule 92 (compare1 -> epsilon .)
    ID              reduce using rule 92 (compare1 -> epsilon .)
    RETURN          reduce using rule 92 (compare1 -> epsilon .)
    READ            reduce using rule 92 (compare1 -> epsilon .)
    WRITE           reduce using rule 92 (compare1 -> epsilon .)
    IF              reduce using rule 92 (compare1 -> epsilon .)
    WHILE           reduce using rule 92 (compare1 -> epsilon .)
    FOR             reduce using rule 92 (compare1 -> epsilon .)
    OPENPAR         reduce using rule 92 (compare1 -> epsilon .)
    PLUS            reduce using rule 92 (compare1 -> epsilon .)
    MINUS           reduce using rule 92 (compare1 -> epsilon .)
    INT             reduce using rule 92 (compare1 -> epsilon .)
    FLOAT           reduce using rule 92 (compare1 -> epsilon .)
    CHAR            reduce using rule 92 (compare1 -> epsilon .)
    CLOSECURLY      reduce using rule 92 (compare1 -> epsilon .)
    SEMICOLON       reduce using rule 92 (compare1 -> epsilon .)


state 118

    (91) compare1 -> GE . compare
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    compare                        shift and go to state 165
    exp                            shift and go to state 69
    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 119

    (88) compare1 -> LT . compare
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    compare                        shift and go to state 166
    exp                            shift and go to state 69
    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 120

    (89) compare1 -> LE . compare
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    compare                        shift and go to state 167
    exp                            shift and go to state 69
    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 121

    (87) compare -> exp compare1 .

    EQ              reduce using rule 87 (compare -> exp compare1 .)
    NE              reduce using rule 87 (compare -> exp compare1 .)
    AND             reduce using rule 87 (compare -> exp compare1 .)
    OR              reduce using rule 87 (compare -> exp compare1 .)
    ID              reduce using rule 87 (compare -> exp compare1 .)
    RETURN          reduce using rule 87 (compare -> exp compare1 .)
    READ            reduce using rule 87 (compare -> exp compare1 .)
    WRITE           reduce using rule 87 (compare -> exp compare1 .)
    IF              reduce using rule 87 (compare -> exp compare1 .)
    WHILE           reduce using rule 87 (compare -> exp compare1 .)
    FOR             reduce using rule 87 (compare -> exp compare1 .)
    OPENPAR         reduce using rule 87 (compare -> exp compare1 .)
    PLUS            reduce using rule 87 (compare -> exp compare1 .)
    MINUS           reduce using rule 87 (compare -> exp compare1 .)
    INT             reduce using rule 87 (compare -> exp compare1 .)
    FLOAT           reduce using rule 87 (compare -> exp compare1 .)
    CHAR            reduce using rule 87 (compare -> exp compare1 .)
    CLOSECURLY      reduce using rule 87 (compare -> exp compare1 .)
    CLOSEPAR        reduce using rule 87 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 87 (compare -> exp compare1 .)


state 122

    (103) factor -> OPENPAR expresion CLOSEPAR .

    MULTIPLY        reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    DIVIDE          reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    MODULO          reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    PLUS            reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    MINUS           reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    CLOSEBOX        reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    LT              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    LE              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    GT              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    GE              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    EQ              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    NE              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    AND             reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    OR              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    ID              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    RETURN          reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    READ            reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    WRITE           reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    IF              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    WHILE           reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    FOR             reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    OPENPAR         reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    INT             reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    FLOAT           reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    CHAR            reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    CLOSECURLY      reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    CLOSEPAR        reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    SEMICOLON       reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    COMMA           reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    TO              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)
    DO              reduce using rule 103 (factor -> OPENPAR expresion CLOSEPAR .)


state 123

    (81) and1 -> AND . and
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 168
    compare                        shift and go to state 68
    factor2                        shift and go to state 40
    funcion                        shift and go to state 49
    equal                          shift and go to state 71
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    factor                         shift and go to state 42

state 124

    (80) and -> equal and1 .

    OR              reduce using rule 80 (and -> equal and1 .)
    ID              reduce using rule 80 (and -> equal and1 .)
    RETURN          reduce using rule 80 (and -> equal and1 .)
    READ            reduce using rule 80 (and -> equal and1 .)
    WRITE           reduce using rule 80 (and -> equal and1 .)
    IF              reduce using rule 80 (and -> equal and1 .)
    WHILE           reduce using rule 80 (and -> equal and1 .)
    FOR             reduce using rule 80 (and -> equal and1 .)
    OPENPAR         reduce using rule 80 (and -> equal and1 .)
    PLUS            reduce using rule 80 (and -> equal and1 .)
    MINUS           reduce using rule 80 (and -> equal and1 .)
    INT             reduce using rule 80 (and -> equal and1 .)
    FLOAT           reduce using rule 80 (and -> equal and1 .)
    CHAR            reduce using rule 80 (and -> equal and1 .)
    CLOSECURLY      reduce using rule 80 (and -> equal and1 .)
    CLOSEPAR        reduce using rule 80 (and -> equal and1 .)
    SEMICOLON       reduce using rule 80 (and -> equal and1 .)


state 125

    (82) and1 -> epsilon .

    OR              reduce using rule 82 (and1 -> epsilon .)
    CLOSEPAR        reduce using rule 82 (and1 -> epsilon .)
    ID              reduce using rule 82 (and1 -> epsilon .)
    RETURN          reduce using rule 82 (and1 -> epsilon .)
    READ            reduce using rule 82 (and1 -> epsilon .)
    WRITE           reduce using rule 82 (and1 -> epsilon .)
    IF              reduce using rule 82 (and1 -> epsilon .)
    WHILE           reduce using rule 82 (and1 -> epsilon .)
    FOR             reduce using rule 82 (and1 -> epsilon .)
    OPENPAR         reduce using rule 82 (and1 -> epsilon .)
    PLUS            reduce using rule 82 (and1 -> epsilon .)
    MINUS           reduce using rule 82 (and1 -> epsilon .)
    INT             reduce using rule 82 (and1 -> epsilon .)
    FLOAT           reduce using rule 82 (and1 -> epsilon .)
    CHAR            reduce using rule 82 (and1 -> epsilon .)
    CLOSECURLY      reduce using rule 82 (and1 -> epsilon .)
    SEMICOLON       reduce using rule 82 (and1 -> epsilon .)


state 126

    (94) exp1 -> PLUS exp .

    CLOSEBOX        reduce using rule 94 (exp1 -> PLUS exp .)
    LT              reduce using rule 94 (exp1 -> PLUS exp .)
    LE              reduce using rule 94 (exp1 -> PLUS exp .)
    GT              reduce using rule 94 (exp1 -> PLUS exp .)
    GE              reduce using rule 94 (exp1 -> PLUS exp .)
    EQ              reduce using rule 94 (exp1 -> PLUS exp .)
    NE              reduce using rule 94 (exp1 -> PLUS exp .)
    AND             reduce using rule 94 (exp1 -> PLUS exp .)
    OR              reduce using rule 94 (exp1 -> PLUS exp .)
    CLOSEPAR        reduce using rule 94 (exp1 -> PLUS exp .)
    ID              reduce using rule 94 (exp1 -> PLUS exp .)
    RETURN          reduce using rule 94 (exp1 -> PLUS exp .)
    READ            reduce using rule 94 (exp1 -> PLUS exp .)
    WRITE           reduce using rule 94 (exp1 -> PLUS exp .)
    IF              reduce using rule 94 (exp1 -> PLUS exp .)
    WHILE           reduce using rule 94 (exp1 -> PLUS exp .)
    FOR             reduce using rule 94 (exp1 -> PLUS exp .)
    OPENPAR         reduce using rule 94 (exp1 -> PLUS exp .)
    PLUS            reduce using rule 94 (exp1 -> PLUS exp .)
    MINUS           reduce using rule 94 (exp1 -> PLUS exp .)
    INT             reduce using rule 94 (exp1 -> PLUS exp .)
    FLOAT           reduce using rule 94 (exp1 -> PLUS exp .)
    CHAR            reduce using rule 94 (exp1 -> PLUS exp .)
    CLOSECURLY      reduce using rule 94 (exp1 -> PLUS exp .)
    COMMA           reduce using rule 94 (exp1 -> PLUS exp .)
    SEMICOLON       reduce using rule 94 (exp1 -> PLUS exp .)
    TO              reduce using rule 94 (exp1 -> PLUS exp .)
    DO              reduce using rule 94 (exp1 -> PLUS exp .)


state 127

    (95) exp1 -> MINUS exp .

    CLOSEBOX        reduce using rule 95 (exp1 -> MINUS exp .)
    LT              reduce using rule 95 (exp1 -> MINUS exp .)
    LE              reduce using rule 95 (exp1 -> MINUS exp .)
    GT              reduce using rule 95 (exp1 -> MINUS exp .)
    GE              reduce using rule 95 (exp1 -> MINUS exp .)
    EQ              reduce using rule 95 (exp1 -> MINUS exp .)
    NE              reduce using rule 95 (exp1 -> MINUS exp .)
    AND             reduce using rule 95 (exp1 -> MINUS exp .)
    OR              reduce using rule 95 (exp1 -> MINUS exp .)
    CLOSEPAR        reduce using rule 95 (exp1 -> MINUS exp .)
    ID              reduce using rule 95 (exp1 -> MINUS exp .)
    RETURN          reduce using rule 95 (exp1 -> MINUS exp .)
    READ            reduce using rule 95 (exp1 -> MINUS exp .)
    WRITE           reduce using rule 95 (exp1 -> MINUS exp .)
    IF              reduce using rule 95 (exp1 -> MINUS exp .)
    WHILE           reduce using rule 95 (exp1 -> MINUS exp .)
    FOR             reduce using rule 95 (exp1 -> MINUS exp .)
    OPENPAR         reduce using rule 95 (exp1 -> MINUS exp .)
    PLUS            reduce using rule 95 (exp1 -> MINUS exp .)
    MINUS           reduce using rule 95 (exp1 -> MINUS exp .)
    INT             reduce using rule 95 (exp1 -> MINUS exp .)
    FLOAT           reduce using rule 95 (exp1 -> MINUS exp .)
    CHAR            reduce using rule 95 (exp1 -> MINUS exp .)
    CLOSECURLY      reduce using rule 95 (exp1 -> MINUS exp .)
    COMMA           reduce using rule 95 (exp1 -> MINUS exp .)
    SEMICOLON       reduce using rule 95 (exp1 -> MINUS exp .)
    TO              reduce using rule 95 (exp1 -> MINUS exp .)
    DO              reduce using rule 95 (exp1 -> MINUS exp .)


state 128

    (14) lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2 .

    SEMICOLON       reduce using rule 14 (lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2 .)
    CLOSEPAR        reduce using rule 14 (lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2 .)
    COMMA           reduce using rule 14 (lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2 .)


state 129

    (106) factor1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 169


state 130

    (50) funcion -> ID OPENPAR funcion1 .

    MULTIPLY        reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    DIVIDE          reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    MODULO          reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    PLUS            reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    MINUS           reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    CLOSEBOX        reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    LT              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    LE              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    GT              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    GE              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    EQ              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    NE              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    AND             reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    OR              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    CLOSEPAR        reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    ID              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    RETURN          reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    READ            reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    WRITE           reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    IF              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    WHILE           reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    FOR             reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    OPENPAR         reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    INT             reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    FLOAT           reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    CHAR            reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    CLOSECURLY      reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    COMMA           reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    SEMICOLON       reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    TO              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)
    DO              reduce using rule 50 (funcion -> ID OPENPAR funcion1 .)


state 131

    (51) funcion1 -> exp . funcion2
    (52) funcion2 -> . COMMA funcion1
    (53) funcion2 -> . CLOSEPAR

    COMMA           shift and go to state 171
    CLOSEPAR        shift and go to state 172

    funcion2                       shift and go to state 170

state 132

    (29) funciones5 -> funciones6 .

    MAIN            reduce using rule 29 (funciones5 -> funciones6 .)


state 133

    (27) funciones4 -> tipo ID funciones5 .

    MAIN            reduce using rule 27 (funciones4 -> tipo ID funciones5 .)


state 134

    (28) funciones5 -> COMMA . funciones4
    (27) funciones4 -> . tipo ID funciones5
    (17) tipo -> . TYPEFLOAT
    (18) tipo -> . TYPEINT
    (19) tipo -> . TYPECHAR

    TYPEFLOAT       shift and go to state 13
    TYPEINT         shift and go to state 12
    TYPECHAR        shift and go to state 10

    funciones4                     shift and go to state 173
    tipo                           shift and go to state 54

state 135

    (34) funciones8 -> CLOSECURLY . funciones
    (20) funciones -> . FUNCTION funciones1
    (21) funciones -> . epsilon
    (115) epsilon -> .

    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 174
    funciones                      shift and go to state 175

state 136

    (32) funciones7 -> OPENCURLY funciones8 .

    MAIN            reduce using rule 32 (funciones7 -> OPENCURLY funciones8 .)


state 137

    (33) funciones8 -> estatutos . funciones8
    (33) funciones8 -> . estatutos funciones8
    (34) funciones8 -> . CLOSECURLY funciones
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 135
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    funciones8                     shift and go to state 176
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 137
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 138

    (31) funciones7 -> vars OPENCURLY . funciones8
    (33) funciones8 -> . estatutos funciones8
    (34) funciones8 -> . CLOSECURLY funciones
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 135
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    funciones8                     shift and go to state 177
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 137
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 139

    (54) retorno -> RETURN OPENPAR . exp CLOSEPAR SEMICOLON
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 178
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 140

    (55) lectura -> READ OPENPAR . lista_ids CLOSEPAR SEMICOLON
    (12) lista_ids -> . ID lista_ids1

    ID              shift and go to state 24

    lista_ids                      shift and go to state 179

state 141

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY .)


state 142

    (68) while -> WHILE OPENPAR . expresion CLOSEPAR DO OPENCURLY while1
    (76) expresion -> . or
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    expresion                      shift and go to state 180
    and                            shift and go to state 67
    compare                        shift and go to state 68
    factor2                        shift and go to state 40
    funcion                        shift and go to state 49
    equal                          shift and go to state 71
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    factor                         shift and go to state 42
    or                             shift and go to state 72

state 143

    (48) asignacion1 -> epsilon .
    (107) factor1 -> epsilon .

    IS              reduce using rule 48 (asignacion1 -> epsilon .)
    MULTIPLY        reduce using rule 107 (factor1 -> epsilon .)
    DIVIDE          reduce using rule 107 (factor1 -> epsilon .)
    MODULO          reduce using rule 107 (factor1 -> epsilon .)
    PLUS            reduce using rule 107 (factor1 -> epsilon .)
    MINUS           reduce using rule 107 (factor1 -> epsilon .)
    LT              reduce using rule 107 (factor1 -> epsilon .)
    LE              reduce using rule 107 (factor1 -> epsilon .)
    GT              reduce using rule 107 (factor1 -> epsilon .)
    GE              reduce using rule 107 (factor1 -> epsilon .)
    EQ              reduce using rule 107 (factor1 -> epsilon .)
    NE              reduce using rule 107 (factor1 -> epsilon .)
    AND             reduce using rule 107 (factor1 -> epsilon .)
    OR              reduce using rule 107 (factor1 -> epsilon .)
    ID              reduce using rule 107 (factor1 -> epsilon .)
    RETURN          reduce using rule 107 (factor1 -> epsilon .)
    READ            reduce using rule 107 (factor1 -> epsilon .)
    WRITE           reduce using rule 107 (factor1 -> epsilon .)
    IF              reduce using rule 107 (factor1 -> epsilon .)
    WHILE           reduce using rule 107 (factor1 -> epsilon .)
    FOR             reduce using rule 107 (factor1 -> epsilon .)
    OPENPAR         reduce using rule 107 (factor1 -> epsilon .)
    INT             reduce using rule 107 (factor1 -> epsilon .)
    FLOAT           reduce using rule 107 (factor1 -> epsilon .)
    CHAR            reduce using rule 107 (factor1 -> epsilon .)
    CLOSECURLY      reduce using rule 107 (factor1 -> epsilon .)


state 144

    (47) asignacion1 -> OPENBOX . exp CLOSEBOX
    (106) factor1 -> OPENBOX . exp CLOSEBOX
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 181
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 145

    (46) asignacion -> ID asignacion1 . IS expresion SEMICOLON

    IS              shift and go to state 182


state 146

    (36) estatutos -> llamada estatutos1 .

    CLOSECURLY      reduce using rule 36 (estatutos -> llamada estatutos1 .)
    ID              reduce using rule 36 (estatutos -> llamada estatutos1 .)
    RETURN          reduce using rule 36 (estatutos -> llamada estatutos1 .)
    READ            reduce using rule 36 (estatutos -> llamada estatutos1 .)
    WRITE           reduce using rule 36 (estatutos -> llamada estatutos1 .)
    IF              reduce using rule 36 (estatutos -> llamada estatutos1 .)
    WHILE           reduce using rule 36 (estatutos -> llamada estatutos1 .)
    FOR             reduce using rule 36 (estatutos -> llamada estatutos1 .)
    OPENPAR         reduce using rule 36 (estatutos -> llamada estatutos1 .)
    PLUS            reduce using rule 36 (estatutos -> llamada estatutos1 .)
    MINUS           reduce using rule 36 (estatutos -> llamada estatutos1 .)
    INT             reduce using rule 36 (estatutos -> llamada estatutos1 .)
    FLOAT           reduce using rule 36 (estatutos -> llamada estatutos1 .)
    CHAR            reduce using rule 36 (estatutos -> llamada estatutos1 .)


state 147

    (45) estatutos1 -> epsilon .
    (110) factor2 -> epsilon .

  ! reduce/reduce conflict for ID resolved using rule 45 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for INT resolved using rule 45 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for FLOAT resolved using rule 45 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for CHAR resolved using rule 45 (estatutos1 -> epsilon .)
    CLOSECURLY      reduce using rule 45 (estatutos1 -> epsilon .)
    ID              reduce using rule 45 (estatutos1 -> epsilon .)
    RETURN          reduce using rule 45 (estatutos1 -> epsilon .)
    READ            reduce using rule 45 (estatutos1 -> epsilon .)
    WRITE           reduce using rule 45 (estatutos1 -> epsilon .)
    IF              reduce using rule 45 (estatutos1 -> epsilon .)
    WHILE           reduce using rule 45 (estatutos1 -> epsilon .)
    FOR             reduce using rule 45 (estatutos1 -> epsilon .)
    OPENPAR         reduce using rule 45 (estatutos1 -> epsilon .)
    PLUS            reduce using rule 45 (estatutos1 -> epsilon .)
    MINUS           reduce using rule 45 (estatutos1 -> epsilon .)
    INT             reduce using rule 45 (estatutos1 -> epsilon .)
    FLOAT           reduce using rule 45 (estatutos1 -> epsilon .)
    CHAR            reduce using rule 45 (estatutos1 -> epsilon .)

  ! ID              [ reduce using rule 110 (factor2 -> epsilon .) ]
  ! INT             [ reduce using rule 110 (factor2 -> epsilon .) ]
  ! FLOAT           [ reduce using rule 110 (factor2 -> epsilon .) ]
  ! CHAR            [ reduce using rule 110 (factor2 -> epsilon .) ]


state 148

    (44) estatutos1 -> estatutos .

    CLOSECURLY      reduce using rule 44 (estatutos1 -> estatutos .)
    ID              reduce using rule 44 (estatutos1 -> estatutos .)
    RETURN          reduce using rule 44 (estatutos1 -> estatutos .)
    READ            reduce using rule 44 (estatutos1 -> estatutos .)
    WRITE           reduce using rule 44 (estatutos1 -> estatutos .)
    IF              reduce using rule 44 (estatutos1 -> estatutos .)
    WHILE           reduce using rule 44 (estatutos1 -> estatutos .)
    FOR             reduce using rule 44 (estatutos1 -> estatutos .)
    OPENPAR         reduce using rule 44 (estatutos1 -> estatutos .)
    PLUS            reduce using rule 44 (estatutos1 -> estatutos .)
    MINUS           reduce using rule 44 (estatutos1 -> estatutos .)
    INT             reduce using rule 44 (estatutos1 -> estatutos .)
    FLOAT           reduce using rule 44 (estatutos1 -> estatutos .)
    CHAR            reduce using rule 44 (estatutos1 -> estatutos .)


state 149

    (40) estatutos -> condicion estatutos1 .

    CLOSECURLY      reduce using rule 40 (estatutos -> condicion estatutos1 .)
    ID              reduce using rule 40 (estatutos -> condicion estatutos1 .)
    RETURN          reduce using rule 40 (estatutos -> condicion estatutos1 .)
    READ            reduce using rule 40 (estatutos -> condicion estatutos1 .)
    WRITE           reduce using rule 40 (estatutos -> condicion estatutos1 .)
    IF              reduce using rule 40 (estatutos -> condicion estatutos1 .)
    WHILE           reduce using rule 40 (estatutos -> condicion estatutos1 .)
    FOR             reduce using rule 40 (estatutos -> condicion estatutos1 .)
    OPENPAR         reduce using rule 40 (estatutos -> condicion estatutos1 .)
    PLUS            reduce using rule 40 (estatutos -> condicion estatutos1 .)
    MINUS           reduce using rule 40 (estatutos -> condicion estatutos1 .)
    INT             reduce using rule 40 (estatutos -> condicion estatutos1 .)
    FLOAT           reduce using rule 40 (estatutos -> condicion estatutos1 .)
    CHAR            reduce using rule 40 (estatutos -> condicion estatutos1 .)


state 150

    (37) estatutos -> retorno estatutos1 .

    CLOSECURLY      reduce using rule 37 (estatutos -> retorno estatutos1 .)
    ID              reduce using rule 37 (estatutos -> retorno estatutos1 .)
    RETURN          reduce using rule 37 (estatutos -> retorno estatutos1 .)
    READ            reduce using rule 37 (estatutos -> retorno estatutos1 .)
    WRITE           reduce using rule 37 (estatutos -> retorno estatutos1 .)
    IF              reduce using rule 37 (estatutos -> retorno estatutos1 .)
    WHILE           reduce using rule 37 (estatutos -> retorno estatutos1 .)
    FOR             reduce using rule 37 (estatutos -> retorno estatutos1 .)
    OPENPAR         reduce using rule 37 (estatutos -> retorno estatutos1 .)
    PLUS            reduce using rule 37 (estatutos -> retorno estatutos1 .)
    MINUS           reduce using rule 37 (estatutos -> retorno estatutos1 .)
    INT             reduce using rule 37 (estatutos -> retorno estatutos1 .)
    FLOAT           reduce using rule 37 (estatutos -> retorno estatutos1 .)
    CHAR            reduce using rule 37 (estatutos -> retorno estatutos1 .)


state 151

    (38) estatutos -> lectura estatutos1 .

    CLOSECURLY      reduce using rule 38 (estatutos -> lectura estatutos1 .)
    ID              reduce using rule 38 (estatutos -> lectura estatutos1 .)
    RETURN          reduce using rule 38 (estatutos -> lectura estatutos1 .)
    READ            reduce using rule 38 (estatutos -> lectura estatutos1 .)
    WRITE           reduce using rule 38 (estatutos -> lectura estatutos1 .)
    IF              reduce using rule 38 (estatutos -> lectura estatutos1 .)
    WHILE           reduce using rule 38 (estatutos -> lectura estatutos1 .)
    FOR             reduce using rule 38 (estatutos -> lectura estatutos1 .)
    OPENPAR         reduce using rule 38 (estatutos -> lectura estatutos1 .)
    PLUS            reduce using rule 38 (estatutos -> lectura estatutos1 .)
    MINUS           reduce using rule 38 (estatutos -> lectura estatutos1 .)
    INT             reduce using rule 38 (estatutos -> lectura estatutos1 .)
    FLOAT           reduce using rule 38 (estatutos -> lectura estatutos1 .)
    CHAR            reduce using rule 38 (estatutos -> lectura estatutos1 .)


state 152

    (49) llamada -> funcion SEMICOLON .

    ID              reduce using rule 49 (llamada -> funcion SEMICOLON .)
    RETURN          reduce using rule 49 (llamada -> funcion SEMICOLON .)
    READ            reduce using rule 49 (llamada -> funcion SEMICOLON .)
    WRITE           reduce using rule 49 (llamada -> funcion SEMICOLON .)
    IF              reduce using rule 49 (llamada -> funcion SEMICOLON .)
    WHILE           reduce using rule 49 (llamada -> funcion SEMICOLON .)
    FOR             reduce using rule 49 (llamada -> funcion SEMICOLON .)
    OPENPAR         reduce using rule 49 (llamada -> funcion SEMICOLON .)
    PLUS            reduce using rule 49 (llamada -> funcion SEMICOLON .)
    MINUS           reduce using rule 49 (llamada -> funcion SEMICOLON .)
    INT             reduce using rule 49 (llamada -> funcion SEMICOLON .)
    FLOAT           reduce using rule 49 (llamada -> funcion SEMICOLON .)
    CHAR            reduce using rule 49 (llamada -> funcion SEMICOLON .)
    CLOSECURLY      reduce using rule 49 (llamada -> funcion SEMICOLON .)


state 153

    (71) for -> FOR ID . for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (72) for1 -> . OPENBOX exp CLOSEBOX
    (73) for1 -> . epsilon
    (115) epsilon -> .

    OPENBOX         shift and go to state 184
    IS              reduce using rule 115 (epsilon -> .)

    for1                           shift and go to state 185
    epsilon                        shift and go to state 183

state 154

    (56) escritura -> WRITE OPENPAR . escritura1 CLOSEPAR SEMICOLON
    (57) escritura1 -> . STRING escritura2
    (58) escritura1 -> . lista_ids escritura2
    (12) lista_ids -> . ID lista_ids1

    STRING          shift and go to state 186
    ID              shift and go to state 24

    escritura1                     shift and go to state 188
    lista_ids                      shift and go to state 187

state 155

    (61) condicion -> IF OPENPAR . expresion CLOSEPAR THEN OPENCURLY condicion1
    (76) expresion -> . or
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    expresion                      shift and go to state 189
    and                            shift and go to state 67
    compare                        shift and go to state 68
    factor2                        shift and go to state 40
    funcion                        shift and go to state 49
    equal                          shift and go to state 71
    epsilon                        shift and go to state 41
    exp                            shift and go to state 69
    factor                         shift and go to state 42
    or                             shift and go to state 72
    termino                        shift and go to state 45

state 156

    (43) estatutos -> expresion estatutos1 .

    CLOSECURLY      reduce using rule 43 (estatutos -> expresion estatutos1 .)
    ID              reduce using rule 43 (estatutos -> expresion estatutos1 .)
    RETURN          reduce using rule 43 (estatutos -> expresion estatutos1 .)
    READ            reduce using rule 43 (estatutos -> expresion estatutos1 .)
    WRITE           reduce using rule 43 (estatutos -> expresion estatutos1 .)
    IF              reduce using rule 43 (estatutos -> expresion estatutos1 .)
    WHILE           reduce using rule 43 (estatutos -> expresion estatutos1 .)
    FOR             reduce using rule 43 (estatutos -> expresion estatutos1 .)
    OPENPAR         reduce using rule 43 (estatutos -> expresion estatutos1 .)
    PLUS            reduce using rule 43 (estatutos -> expresion estatutos1 .)
    MINUS           reduce using rule 43 (estatutos -> expresion estatutos1 .)
    INT             reduce using rule 43 (estatutos -> expresion estatutos1 .)
    FLOAT           reduce using rule 43 (estatutos -> expresion estatutos1 .)
    CHAR            reduce using rule 43 (estatutos -> expresion estatutos1 .)


state 157

    (42) estatutos -> for estatutos1 .

    CLOSECURLY      reduce using rule 42 (estatutos -> for estatutos1 .)
    ID              reduce using rule 42 (estatutos -> for estatutos1 .)
    RETURN          reduce using rule 42 (estatutos -> for estatutos1 .)
    READ            reduce using rule 42 (estatutos -> for estatutos1 .)
    WRITE           reduce using rule 42 (estatutos -> for estatutos1 .)
    IF              reduce using rule 42 (estatutos -> for estatutos1 .)
    WHILE           reduce using rule 42 (estatutos -> for estatutos1 .)
    FOR             reduce using rule 42 (estatutos -> for estatutos1 .)
    OPENPAR         reduce using rule 42 (estatutos -> for estatutos1 .)
    PLUS            reduce using rule 42 (estatutos -> for estatutos1 .)
    MINUS           reduce using rule 42 (estatutos -> for estatutos1 .)
    INT             reduce using rule 42 (estatutos -> for estatutos1 .)
    FLOAT           reduce using rule 42 (estatutos -> for estatutos1 .)
    CHAR            reduce using rule 42 (estatutos -> for estatutos1 .)


state 158

    (35) estatutos -> asignacion estatutos1 .

    CLOSECURLY      reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    ID              reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    RETURN          reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    READ            reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    WRITE           reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    IF              reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    WHILE           reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    FOR             reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    OPENPAR         reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    PLUS            reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    MINUS           reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    INT             reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    FLOAT           reduce using rule 35 (estatutos -> asignacion estatutos1 .)
    CHAR            reduce using rule 35 (estatutos -> asignacion estatutos1 .)


state 159

    (41) estatutos -> while estatutos1 .

    CLOSECURLY      reduce using rule 41 (estatutos -> while estatutos1 .)
    ID              reduce using rule 41 (estatutos -> while estatutos1 .)
    RETURN          reduce using rule 41 (estatutos -> while estatutos1 .)
    READ            reduce using rule 41 (estatutos -> while estatutos1 .)
    WRITE           reduce using rule 41 (estatutos -> while estatutos1 .)
    IF              reduce using rule 41 (estatutos -> while estatutos1 .)
    WHILE           reduce using rule 41 (estatutos -> while estatutos1 .)
    FOR             reduce using rule 41 (estatutos -> while estatutos1 .)
    OPENPAR         reduce using rule 41 (estatutos -> while estatutos1 .)
    PLUS            reduce using rule 41 (estatutos -> while estatutos1 .)
    MINUS           reduce using rule 41 (estatutos -> while estatutos1 .)
    INT             reduce using rule 41 (estatutos -> while estatutos1 .)
    FLOAT           reduce using rule 41 (estatutos -> while estatutos1 .)
    CHAR            reduce using rule 41 (estatutos -> while estatutos1 .)


state 160

    (39) estatutos -> escritura estatutos1 .

    CLOSECURLY      reduce using rule 39 (estatutos -> escritura estatutos1 .)
    ID              reduce using rule 39 (estatutos -> escritura estatutos1 .)
    RETURN          reduce using rule 39 (estatutos -> escritura estatutos1 .)
    READ            reduce using rule 39 (estatutos -> escritura estatutos1 .)
    WRITE           reduce using rule 39 (estatutos -> escritura estatutos1 .)
    IF              reduce using rule 39 (estatutos -> escritura estatutos1 .)
    WHILE           reduce using rule 39 (estatutos -> escritura estatutos1 .)
    FOR             reduce using rule 39 (estatutos -> escritura estatutos1 .)
    OPENPAR         reduce using rule 39 (estatutos -> escritura estatutos1 .)
    PLUS            reduce using rule 39 (estatutos -> escritura estatutos1 .)
    MINUS           reduce using rule 39 (estatutos -> escritura estatutos1 .)
    INT             reduce using rule 39 (estatutos -> escritura estatutos1 .)
    FLOAT           reduce using rule 39 (estatutos -> escritura estatutos1 .)
    CHAR            reduce using rule 39 (estatutos -> escritura estatutos1 .)


state 161

    (78) or1 -> OR or .

    CLOSEPAR        reduce using rule 78 (or1 -> OR or .)
    ID              reduce using rule 78 (or1 -> OR or .)
    RETURN          reduce using rule 78 (or1 -> OR or .)
    READ            reduce using rule 78 (or1 -> OR or .)
    WRITE           reduce using rule 78 (or1 -> OR or .)
    IF              reduce using rule 78 (or1 -> OR or .)
    WHILE           reduce using rule 78 (or1 -> OR or .)
    FOR             reduce using rule 78 (or1 -> OR or .)
    OPENPAR         reduce using rule 78 (or1 -> OR or .)
    PLUS            reduce using rule 78 (or1 -> OR or .)
    MINUS           reduce using rule 78 (or1 -> OR or .)
    INT             reduce using rule 78 (or1 -> OR or .)
    FLOAT           reduce using rule 78 (or1 -> OR or .)
    CHAR            reduce using rule 78 (or1 -> OR or .)
    CLOSECURLY      reduce using rule 78 (or1 -> OR or .)
    SEMICOLON       reduce using rule 78 (or1 -> OR or .)


state 162

    (85) equal1 -> NE equal .

    AND             reduce using rule 85 (equal1 -> NE equal .)
    OR              reduce using rule 85 (equal1 -> NE equal .)
    CLOSEPAR        reduce using rule 85 (equal1 -> NE equal .)
    ID              reduce using rule 85 (equal1 -> NE equal .)
    RETURN          reduce using rule 85 (equal1 -> NE equal .)
    READ            reduce using rule 85 (equal1 -> NE equal .)
    WRITE           reduce using rule 85 (equal1 -> NE equal .)
    IF              reduce using rule 85 (equal1 -> NE equal .)
    WHILE           reduce using rule 85 (equal1 -> NE equal .)
    FOR             reduce using rule 85 (equal1 -> NE equal .)
    OPENPAR         reduce using rule 85 (equal1 -> NE equal .)
    PLUS            reduce using rule 85 (equal1 -> NE equal .)
    MINUS           reduce using rule 85 (equal1 -> NE equal .)
    INT             reduce using rule 85 (equal1 -> NE equal .)
    FLOAT           reduce using rule 85 (equal1 -> NE equal .)
    CHAR            reduce using rule 85 (equal1 -> NE equal .)
    CLOSECURLY      reduce using rule 85 (equal1 -> NE equal .)
    SEMICOLON       reduce using rule 85 (equal1 -> NE equal .)


state 163

    (84) equal1 -> EQ equal .

    AND             reduce using rule 84 (equal1 -> EQ equal .)
    OR              reduce using rule 84 (equal1 -> EQ equal .)
    CLOSEPAR        reduce using rule 84 (equal1 -> EQ equal .)
    ID              reduce using rule 84 (equal1 -> EQ equal .)
    RETURN          reduce using rule 84 (equal1 -> EQ equal .)
    READ            reduce using rule 84 (equal1 -> EQ equal .)
    WRITE           reduce using rule 84 (equal1 -> EQ equal .)
    IF              reduce using rule 84 (equal1 -> EQ equal .)
    WHILE           reduce using rule 84 (equal1 -> EQ equal .)
    FOR             reduce using rule 84 (equal1 -> EQ equal .)
    OPENPAR         reduce using rule 84 (equal1 -> EQ equal .)
    PLUS            reduce using rule 84 (equal1 -> EQ equal .)
    MINUS           reduce using rule 84 (equal1 -> EQ equal .)
    INT             reduce using rule 84 (equal1 -> EQ equal .)
    FLOAT           reduce using rule 84 (equal1 -> EQ equal .)
    CHAR            reduce using rule 84 (equal1 -> EQ equal .)
    CLOSECURLY      reduce using rule 84 (equal1 -> EQ equal .)
    SEMICOLON       reduce using rule 84 (equal1 -> EQ equal .)


state 164

    (90) compare1 -> GT compare .

    EQ              reduce using rule 90 (compare1 -> GT compare .)
    NE              reduce using rule 90 (compare1 -> GT compare .)
    AND             reduce using rule 90 (compare1 -> GT compare .)
    OR              reduce using rule 90 (compare1 -> GT compare .)
    CLOSEPAR        reduce using rule 90 (compare1 -> GT compare .)
    ID              reduce using rule 90 (compare1 -> GT compare .)
    RETURN          reduce using rule 90 (compare1 -> GT compare .)
    READ            reduce using rule 90 (compare1 -> GT compare .)
    WRITE           reduce using rule 90 (compare1 -> GT compare .)
    IF              reduce using rule 90 (compare1 -> GT compare .)
    WHILE           reduce using rule 90 (compare1 -> GT compare .)
    FOR             reduce using rule 90 (compare1 -> GT compare .)
    OPENPAR         reduce using rule 90 (compare1 -> GT compare .)
    PLUS            reduce using rule 90 (compare1 -> GT compare .)
    MINUS           reduce using rule 90 (compare1 -> GT compare .)
    INT             reduce using rule 90 (compare1 -> GT compare .)
    FLOAT           reduce using rule 90 (compare1 -> GT compare .)
    CHAR            reduce using rule 90 (compare1 -> GT compare .)
    CLOSECURLY      reduce using rule 90 (compare1 -> GT compare .)
    SEMICOLON       reduce using rule 90 (compare1 -> GT compare .)


state 165

    (91) compare1 -> GE compare .

    EQ              reduce using rule 91 (compare1 -> GE compare .)
    NE              reduce using rule 91 (compare1 -> GE compare .)
    AND             reduce using rule 91 (compare1 -> GE compare .)
    OR              reduce using rule 91 (compare1 -> GE compare .)
    CLOSEPAR        reduce using rule 91 (compare1 -> GE compare .)
    ID              reduce using rule 91 (compare1 -> GE compare .)
    RETURN          reduce using rule 91 (compare1 -> GE compare .)
    READ            reduce using rule 91 (compare1 -> GE compare .)
    WRITE           reduce using rule 91 (compare1 -> GE compare .)
    IF              reduce using rule 91 (compare1 -> GE compare .)
    WHILE           reduce using rule 91 (compare1 -> GE compare .)
    FOR             reduce using rule 91 (compare1 -> GE compare .)
    OPENPAR         reduce using rule 91 (compare1 -> GE compare .)
    PLUS            reduce using rule 91 (compare1 -> GE compare .)
    MINUS           reduce using rule 91 (compare1 -> GE compare .)
    INT             reduce using rule 91 (compare1 -> GE compare .)
    FLOAT           reduce using rule 91 (compare1 -> GE compare .)
    CHAR            reduce using rule 91 (compare1 -> GE compare .)
    CLOSECURLY      reduce using rule 91 (compare1 -> GE compare .)
    SEMICOLON       reduce using rule 91 (compare1 -> GE compare .)


state 166

    (88) compare1 -> LT compare .

    EQ              reduce using rule 88 (compare1 -> LT compare .)
    NE              reduce using rule 88 (compare1 -> LT compare .)
    AND             reduce using rule 88 (compare1 -> LT compare .)
    OR              reduce using rule 88 (compare1 -> LT compare .)
    CLOSEPAR        reduce using rule 88 (compare1 -> LT compare .)
    ID              reduce using rule 88 (compare1 -> LT compare .)
    RETURN          reduce using rule 88 (compare1 -> LT compare .)
    READ            reduce using rule 88 (compare1 -> LT compare .)
    WRITE           reduce using rule 88 (compare1 -> LT compare .)
    IF              reduce using rule 88 (compare1 -> LT compare .)
    WHILE           reduce using rule 88 (compare1 -> LT compare .)
    FOR             reduce using rule 88 (compare1 -> LT compare .)
    OPENPAR         reduce using rule 88 (compare1 -> LT compare .)
    PLUS            reduce using rule 88 (compare1 -> LT compare .)
    MINUS           reduce using rule 88 (compare1 -> LT compare .)
    INT             reduce using rule 88 (compare1 -> LT compare .)
    FLOAT           reduce using rule 88 (compare1 -> LT compare .)
    CHAR            reduce using rule 88 (compare1 -> LT compare .)
    CLOSECURLY      reduce using rule 88 (compare1 -> LT compare .)
    SEMICOLON       reduce using rule 88 (compare1 -> LT compare .)


state 167

    (89) compare1 -> LE compare .

    EQ              reduce using rule 89 (compare1 -> LE compare .)
    NE              reduce using rule 89 (compare1 -> LE compare .)
    AND             reduce using rule 89 (compare1 -> LE compare .)
    OR              reduce using rule 89 (compare1 -> LE compare .)
    CLOSEPAR        reduce using rule 89 (compare1 -> LE compare .)
    ID              reduce using rule 89 (compare1 -> LE compare .)
    RETURN          reduce using rule 89 (compare1 -> LE compare .)
    READ            reduce using rule 89 (compare1 -> LE compare .)
    WRITE           reduce using rule 89 (compare1 -> LE compare .)
    IF              reduce using rule 89 (compare1 -> LE compare .)
    WHILE           reduce using rule 89 (compare1 -> LE compare .)
    FOR             reduce using rule 89 (compare1 -> LE compare .)
    OPENPAR         reduce using rule 89 (compare1 -> LE compare .)
    PLUS            reduce using rule 89 (compare1 -> LE compare .)
    MINUS           reduce using rule 89 (compare1 -> LE compare .)
    INT             reduce using rule 89 (compare1 -> LE compare .)
    FLOAT           reduce using rule 89 (compare1 -> LE compare .)
    CHAR            reduce using rule 89 (compare1 -> LE compare .)
    CLOSECURLY      reduce using rule 89 (compare1 -> LE compare .)
    SEMICOLON       reduce using rule 89 (compare1 -> LE compare .)


state 168

    (81) and1 -> AND and .

    OR              reduce using rule 81 (and1 -> AND and .)
    CLOSEPAR        reduce using rule 81 (and1 -> AND and .)
    ID              reduce using rule 81 (and1 -> AND and .)
    RETURN          reduce using rule 81 (and1 -> AND and .)
    READ            reduce using rule 81 (and1 -> AND and .)
    WRITE           reduce using rule 81 (and1 -> AND and .)
    IF              reduce using rule 81 (and1 -> AND and .)
    WHILE           reduce using rule 81 (and1 -> AND and .)
    FOR             reduce using rule 81 (and1 -> AND and .)
    OPENPAR         reduce using rule 81 (and1 -> AND and .)
    PLUS            reduce using rule 81 (and1 -> AND and .)
    MINUS           reduce using rule 81 (and1 -> AND and .)
    INT             reduce using rule 81 (and1 -> AND and .)
    FLOAT           reduce using rule 81 (and1 -> AND and .)
    CHAR            reduce using rule 81 (and1 -> AND and .)
    CLOSECURLY      reduce using rule 81 (and1 -> AND and .)
    SEMICOLON       reduce using rule 81 (and1 -> AND and .)


state 169

    (106) factor1 -> OPENBOX exp CLOSEBOX .

    MULTIPLY        reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    DIVIDE          reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    MODULO          reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    PLUS            reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    MINUS           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSEBOX        reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    LT              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    LE              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    GT              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    GE              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    EQ              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    NE              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    AND             reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    OR              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSEPAR        reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    ID              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    RETURN          reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    READ            reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    WRITE           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    IF              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    WHILE           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    FOR             reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    OPENPAR         reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    INT             reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    FLOAT           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    CHAR            reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSECURLY      reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    COMMA           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    SEMICOLON       reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    TO              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    DO              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)


state 170

    (51) funcion1 -> exp funcion2 .

    MULTIPLY        reduce using rule 51 (funcion1 -> exp funcion2 .)
    DIVIDE          reduce using rule 51 (funcion1 -> exp funcion2 .)
    MODULO          reduce using rule 51 (funcion1 -> exp funcion2 .)
    PLUS            reduce using rule 51 (funcion1 -> exp funcion2 .)
    MINUS           reduce using rule 51 (funcion1 -> exp funcion2 .)
    CLOSEBOX        reduce using rule 51 (funcion1 -> exp funcion2 .)
    LT              reduce using rule 51 (funcion1 -> exp funcion2 .)
    LE              reduce using rule 51 (funcion1 -> exp funcion2 .)
    GT              reduce using rule 51 (funcion1 -> exp funcion2 .)
    GE              reduce using rule 51 (funcion1 -> exp funcion2 .)
    EQ              reduce using rule 51 (funcion1 -> exp funcion2 .)
    NE              reduce using rule 51 (funcion1 -> exp funcion2 .)
    AND             reduce using rule 51 (funcion1 -> exp funcion2 .)
    OR              reduce using rule 51 (funcion1 -> exp funcion2 .)
    CLOSEPAR        reduce using rule 51 (funcion1 -> exp funcion2 .)
    SEMICOLON       reduce using rule 51 (funcion1 -> exp funcion2 .)
    ID              reduce using rule 51 (funcion1 -> exp funcion2 .)
    RETURN          reduce using rule 51 (funcion1 -> exp funcion2 .)
    READ            reduce using rule 51 (funcion1 -> exp funcion2 .)
    WRITE           reduce using rule 51 (funcion1 -> exp funcion2 .)
    IF              reduce using rule 51 (funcion1 -> exp funcion2 .)
    WHILE           reduce using rule 51 (funcion1 -> exp funcion2 .)
    FOR             reduce using rule 51 (funcion1 -> exp funcion2 .)
    OPENPAR         reduce using rule 51 (funcion1 -> exp funcion2 .)
    INT             reduce using rule 51 (funcion1 -> exp funcion2 .)
    FLOAT           reduce using rule 51 (funcion1 -> exp funcion2 .)
    CHAR            reduce using rule 51 (funcion1 -> exp funcion2 .)
    CLOSECURLY      reduce using rule 51 (funcion1 -> exp funcion2 .)
    COMMA           reduce using rule 51 (funcion1 -> exp funcion2 .)
    TO              reduce using rule 51 (funcion1 -> exp funcion2 .)
    DO              reduce using rule 51 (funcion1 -> exp funcion2 .)


state 171

    (52) funcion2 -> COMMA . funcion1
    (51) funcion1 -> . exp funcion2
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    funcion1                       shift and go to state 190
    termino                        shift and go to state 45
    exp                            shift and go to state 131
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 172

    (53) funcion2 -> CLOSEPAR .

    MULTIPLY        reduce using rule 53 (funcion2 -> CLOSEPAR .)
    DIVIDE          reduce using rule 53 (funcion2 -> CLOSEPAR .)
    MODULO          reduce using rule 53 (funcion2 -> CLOSEPAR .)
    PLUS            reduce using rule 53 (funcion2 -> CLOSEPAR .)
    MINUS           reduce using rule 53 (funcion2 -> CLOSEPAR .)
    CLOSEBOX        reduce using rule 53 (funcion2 -> CLOSEPAR .)
    LT              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    LE              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    GT              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    GE              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    EQ              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    NE              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    AND             reduce using rule 53 (funcion2 -> CLOSEPAR .)
    OR              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    CLOSEPAR        reduce using rule 53 (funcion2 -> CLOSEPAR .)
    SEMICOLON       reduce using rule 53 (funcion2 -> CLOSEPAR .)
    ID              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    RETURN          reduce using rule 53 (funcion2 -> CLOSEPAR .)
    READ            reduce using rule 53 (funcion2 -> CLOSEPAR .)
    WRITE           reduce using rule 53 (funcion2 -> CLOSEPAR .)
    IF              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    WHILE           reduce using rule 53 (funcion2 -> CLOSEPAR .)
    FOR             reduce using rule 53 (funcion2 -> CLOSEPAR .)
    OPENPAR         reduce using rule 53 (funcion2 -> CLOSEPAR .)
    INT             reduce using rule 53 (funcion2 -> CLOSEPAR .)
    FLOAT           reduce using rule 53 (funcion2 -> CLOSEPAR .)
    CHAR            reduce using rule 53 (funcion2 -> CLOSEPAR .)
    CLOSECURLY      reduce using rule 53 (funcion2 -> CLOSEPAR .)
    COMMA           reduce using rule 53 (funcion2 -> CLOSEPAR .)
    TO              reduce using rule 53 (funcion2 -> CLOSEPAR .)
    DO              reduce using rule 53 (funcion2 -> CLOSEPAR .)


state 173

    (28) funciones5 -> COMMA funciones4 .

    MAIN            reduce using rule 28 (funciones5 -> COMMA funciones4 .)


state 174

    (21) funciones -> epsilon .

    MAIN            reduce using rule 21 (funciones -> epsilon .)


state 175

    (34) funciones8 -> CLOSECURLY funciones .

    MAIN            reduce using rule 34 (funciones8 -> CLOSECURLY funciones .)


state 176

    (33) funciones8 -> estatutos funciones8 .

    MAIN            reduce using rule 33 (funciones8 -> estatutos funciones8 .)


state 177

    (31) funciones7 -> vars OPENCURLY funciones8 .

    MAIN            reduce using rule 31 (funciones7 -> vars OPENCURLY funciones8 .)


state 178

    (54) retorno -> RETURN OPENPAR exp . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 191


state 179

    (55) lectura -> READ OPENPAR lista_ids . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 192


state 180

    (68) while -> WHILE OPENPAR expresion . CLOSEPAR DO OPENCURLY while1

    CLOSEPAR        shift and go to state 193


state 181

    (47) asignacion1 -> OPENBOX exp . CLOSEBOX
    (106) factor1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 194


state 182

    (46) asignacion -> ID asignacion1 IS . expresion SEMICOLON
    (76) expresion -> . or
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    expresion                      shift and go to state 195
    and                            shift and go to state 67
    compare                        shift and go to state 68
    factor2                        shift and go to state 40
    funcion                        shift and go to state 49
    equal                          shift and go to state 71
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    factor                         shift and go to state 42
    or                             shift and go to state 72

state 183

    (73) for1 -> epsilon .

    IS              reduce using rule 73 (for1 -> epsilon .)


state 184

    (72) for1 -> OPENBOX . exp CLOSEBOX
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 196
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 185

    (71) for -> FOR ID for1 . IS exp TO exp DO OPENCURLY for2 CLOSECURLY

    IS              shift and go to state 197


state 186

    (57) escritura1 -> STRING . escritura2
    (59) escritura2 -> . COMMA escritura1
    (60) escritura2 -> . epsilon
    (115) epsilon -> .

    COMMA           shift and go to state 199
    CLOSEPAR        reduce using rule 115 (epsilon -> .)

    escritura2                     shift and go to state 198
    epsilon                        shift and go to state 200

state 187

    (58) escritura1 -> lista_ids . escritura2
    (59) escritura2 -> . COMMA escritura1
    (60) escritura2 -> . epsilon
    (115) epsilon -> .

    COMMA           shift and go to state 199
    CLOSEPAR        reduce using rule 115 (epsilon -> .)

    escritura2                     shift and go to state 201
    epsilon                        shift and go to state 200

state 188

    (56) escritura -> WRITE OPENPAR escritura1 . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 202


state 189

    (61) condicion -> IF OPENPAR expresion . CLOSEPAR THEN OPENCURLY condicion1

    CLOSEPAR        shift and go to state 203


state 190

    (52) funcion2 -> COMMA funcion1 .

    MULTIPLY        reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    DIVIDE          reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    MODULO          reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    PLUS            reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    MINUS           reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    CLOSEBOX        reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    LT              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    LE              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    GT              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    GE              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    EQ              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    NE              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    AND             reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    OR              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    CLOSEPAR        reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    SEMICOLON       reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    ID              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    RETURN          reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    READ            reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    WRITE           reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    IF              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    WHILE           reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    FOR             reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    OPENPAR         reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    INT             reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    FLOAT           reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    CHAR            reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    CLOSECURLY      reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    COMMA           reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    TO              reduce using rule 52 (funcion2 -> COMMA funcion1 .)
    DO              reduce using rule 52 (funcion2 -> COMMA funcion1 .)


state 191

    (54) retorno -> RETURN OPENPAR exp CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 204


state 192

    (55) lectura -> READ OPENPAR lista_ids CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 205


state 193

    (68) while -> WHILE OPENPAR expresion CLOSEPAR . DO OPENCURLY while1

    DO              shift and go to state 206


state 194

    (47) asignacion1 -> OPENBOX exp CLOSEBOX .
    (106) factor1 -> OPENBOX exp CLOSEBOX .

    IS              reduce using rule 47 (asignacion1 -> OPENBOX exp CLOSEBOX .)
    MULTIPLY        reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    DIVIDE          reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    MODULO          reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    PLUS            reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    MINUS           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    LT              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    LE              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    GT              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    GE              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    EQ              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    NE              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    AND             reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    OR              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    ID              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    RETURN          reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    READ            reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    WRITE           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    IF              reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    WHILE           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    FOR             reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    OPENPAR         reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    INT             reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    FLOAT           reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    CHAR            reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSECURLY      reduce using rule 106 (factor1 -> OPENBOX exp CLOSEBOX .)


state 195

    (46) asignacion -> ID asignacion1 IS expresion . SEMICOLON

    SEMICOLON       shift and go to state 207


state 196

    (72) for1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 208


state 197

    (71) for -> FOR ID for1 IS . exp TO exp DO OPENCURLY for2 CLOSECURLY
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 209
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 198

    (57) escritura1 -> STRING escritura2 .

    CLOSEPAR        reduce using rule 57 (escritura1 -> STRING escritura2 .)


state 199

    (59) escritura2 -> COMMA . escritura1
    (57) escritura1 -> . STRING escritura2
    (58) escritura1 -> . lista_ids escritura2
    (12) lista_ids -> . ID lista_ids1

    STRING          shift and go to state 186
    ID              shift and go to state 24

    escritura1                     shift and go to state 210
    lista_ids                      shift and go to state 187

state 200

    (60) escritura2 -> epsilon .

    CLOSEPAR        reduce using rule 60 (escritura2 -> epsilon .)


state 201

    (58) escritura1 -> lista_ids escritura2 .

    CLOSEPAR        reduce using rule 58 (escritura1 -> lista_ids escritura2 .)


state 202

    (56) escritura -> WRITE OPENPAR escritura1 CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 211


state 203

    (61) condicion -> IF OPENPAR expresion CLOSEPAR . THEN OPENCURLY condicion1

    THEN            shift and go to state 212


state 204

    (54) retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .

    ID              reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    RETURN          reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    READ            reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    IF              reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    INT             reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 54 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)


state 205

    (55) lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .

    ID              reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    RETURN          reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    READ            reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    IF              reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    INT             reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 55 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)


state 206

    (68) while -> WHILE OPENPAR expresion CLOSEPAR DO . OPENCURLY while1

    OPENCURLY       shift and go to state 213


state 207

    (46) asignacion -> ID asignacion1 IS expresion SEMICOLON .

    ID              reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    RETURN          reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    READ            reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    WRITE           reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    IF              reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    WHILE           reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    FOR             reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    OPENPAR         reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    PLUS            reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    MINUS           reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    INT             reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    FLOAT           reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    CHAR            reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    CLOSECURLY      reduce using rule 46 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)


state 208

    (72) for1 -> OPENBOX exp CLOSEBOX .

    IS              reduce using rule 72 (for1 -> OPENBOX exp CLOSEBOX .)


state 209

    (71) for -> FOR ID for1 IS exp . TO exp DO OPENCURLY for2 CLOSECURLY

    TO              shift and go to state 214


state 210

    (59) escritura2 -> COMMA escritura1 .

    CLOSEPAR        reduce using rule 59 (escritura2 -> COMMA escritura1 .)


state 211

    (56) escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .

    ID              reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    RETURN          reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    READ            reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    IF              reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    INT             reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 56 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)


state 212

    (61) condicion -> IF OPENPAR expresion CLOSEPAR THEN . OPENCURLY condicion1

    OPENCURLY       shift and go to state 215


state 213

    (68) while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY . while1
    (69) while1 -> . estatutos while1
    (70) while1 -> . CLOSECURLY
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 216
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    while1                         shift and go to state 217
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 218
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 214

    (71) for -> FOR ID for1 IS exp TO . exp DO OPENCURLY for2 CLOSECURLY
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (50) funcion -> . ID OPENPAR funcion1
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 48
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    factor2                        shift and go to state 40
    epsilon                        shift and go to state 41
    termino                        shift and go to state 45
    exp                            shift and go to state 219
    factor                         shift and go to state 42
    funcion                        shift and go to state 49

state 215

    (61) condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY . condicion1
    (62) condicion1 -> . estatutos condicion1
    (63) condicion1 -> . CLOSECURLY condicion2
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 220
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    condicion1                     shift and go to state 221
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 222
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 216

    (70) while1 -> CLOSECURLY .

    ID              reduce using rule 70 (while1 -> CLOSECURLY .)
    RETURN          reduce using rule 70 (while1 -> CLOSECURLY .)
    READ            reduce using rule 70 (while1 -> CLOSECURLY .)
    WRITE           reduce using rule 70 (while1 -> CLOSECURLY .)
    IF              reduce using rule 70 (while1 -> CLOSECURLY .)
    WHILE           reduce using rule 70 (while1 -> CLOSECURLY .)
    FOR             reduce using rule 70 (while1 -> CLOSECURLY .)
    OPENPAR         reduce using rule 70 (while1 -> CLOSECURLY .)
    PLUS            reduce using rule 70 (while1 -> CLOSECURLY .)
    MINUS           reduce using rule 70 (while1 -> CLOSECURLY .)
    INT             reduce using rule 70 (while1 -> CLOSECURLY .)
    FLOAT           reduce using rule 70 (while1 -> CLOSECURLY .)
    CHAR            reduce using rule 70 (while1 -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 70 (while1 -> CLOSECURLY .)


state 217

    (68) while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .

    ID              reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    RETURN          reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    READ            reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    WRITE           reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    IF              reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    WHILE           reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    FOR             reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    OPENPAR         reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    PLUS            reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    MINUS           reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    INT             reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    FLOAT           reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    CHAR            reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    CLOSECURLY      reduce using rule 68 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)


state 218

    (69) while1 -> estatutos . while1
    (69) while1 -> . estatutos while1
    (70) while1 -> . CLOSECURLY
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 216
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    while1                         shift and go to state 223
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 218
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 219

    (71) for -> FOR ID for1 IS exp TO exp . DO OPENCURLY for2 CLOSECURLY

    DO              shift and go to state 224


state 220

    (63) condicion1 -> CLOSECURLY . condicion2
    (64) condicion2 -> . ELSE OPENCURLY condicion3
    (65) condicion2 -> . epsilon
    (115) epsilon -> .

    ELSE            shift and go to state 226
    ID              reduce using rule 115 (epsilon -> .)
    RETURN          reduce using rule 115 (epsilon -> .)
    READ            reduce using rule 115 (epsilon -> .)
    WRITE           reduce using rule 115 (epsilon -> .)
    IF              reduce using rule 115 (epsilon -> .)
    WHILE           reduce using rule 115 (epsilon -> .)
    FOR             reduce using rule 115 (epsilon -> .)
    OPENPAR         reduce using rule 115 (epsilon -> .)
    PLUS            reduce using rule 115 (epsilon -> .)
    MINUS           reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    CLOSECURLY      reduce using rule 115 (epsilon -> .)

    epsilon                        shift and go to state 225
    condicion2                     shift and go to state 227

state 221

    (61) condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .

    ID              reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    RETURN          reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    READ            reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    WRITE           reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    IF              reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    WHILE           reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    FOR             reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    OPENPAR         reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    PLUS            reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    MINUS           reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    INT             reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    FLOAT           reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    CHAR            reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    CLOSECURLY      reduce using rule 61 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)


state 222

    (62) condicion1 -> estatutos . condicion1
    (62) condicion1 -> . estatutos condicion1
    (63) condicion1 -> . CLOSECURLY condicion2
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 220
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    condicion1                     shift and go to state 228
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 222
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 223

    (69) while1 -> estatutos while1 .

    ID              reduce using rule 69 (while1 -> estatutos while1 .)
    RETURN          reduce using rule 69 (while1 -> estatutos while1 .)
    READ            reduce using rule 69 (while1 -> estatutos while1 .)
    WRITE           reduce using rule 69 (while1 -> estatutos while1 .)
    IF              reduce using rule 69 (while1 -> estatutos while1 .)
    WHILE           reduce using rule 69 (while1 -> estatutos while1 .)
    FOR             reduce using rule 69 (while1 -> estatutos while1 .)
    OPENPAR         reduce using rule 69 (while1 -> estatutos while1 .)
    PLUS            reduce using rule 69 (while1 -> estatutos while1 .)
    MINUS           reduce using rule 69 (while1 -> estatutos while1 .)
    INT             reduce using rule 69 (while1 -> estatutos while1 .)
    FLOAT           reduce using rule 69 (while1 -> estatutos while1 .)
    CHAR            reduce using rule 69 (while1 -> estatutos while1 .)
    CLOSECURLY      reduce using rule 69 (while1 -> estatutos while1 .)


state 224

    (71) for -> FOR ID for1 IS exp TO exp DO . OPENCURLY for2 CLOSECURLY

    OPENCURLY       shift and go to state 229


state 225

    (65) condicion2 -> epsilon .

    ID              reduce using rule 65 (condicion2 -> epsilon .)
    RETURN          reduce using rule 65 (condicion2 -> epsilon .)
    READ            reduce using rule 65 (condicion2 -> epsilon .)
    WRITE           reduce using rule 65 (condicion2 -> epsilon .)
    IF              reduce using rule 65 (condicion2 -> epsilon .)
    WHILE           reduce using rule 65 (condicion2 -> epsilon .)
    FOR             reduce using rule 65 (condicion2 -> epsilon .)
    OPENPAR         reduce using rule 65 (condicion2 -> epsilon .)
    PLUS            reduce using rule 65 (condicion2 -> epsilon .)
    MINUS           reduce using rule 65 (condicion2 -> epsilon .)
    INT             reduce using rule 65 (condicion2 -> epsilon .)
    FLOAT           reduce using rule 65 (condicion2 -> epsilon .)
    CHAR            reduce using rule 65 (condicion2 -> epsilon .)
    CLOSECURLY      reduce using rule 65 (condicion2 -> epsilon .)


state 226

    (64) condicion2 -> ELSE . OPENCURLY condicion3

    OPENCURLY       shift and go to state 230


state 227

    (63) condicion1 -> CLOSECURLY condicion2 .

    ID              reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    RETURN          reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    READ            reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    WRITE           reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    IF              reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    WHILE           reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    FOR             reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    OPENPAR         reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    PLUS            reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    MINUS           reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    INT             reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    FLOAT           reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    CHAR            reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)
    CLOSECURLY      reduce using rule 63 (condicion1 -> CLOSECURLY condicion2 .)


state 228

    (62) condicion1 -> estatutos condicion1 .

    ID              reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    RETURN          reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    READ            reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    WRITE           reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    IF              reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    WHILE           reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    FOR             reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    OPENPAR         reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    PLUS            reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    MINUS           reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    INT             reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    FLOAT           reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    CHAR            reduce using rule 62 (condicion1 -> estatutos condicion1 .)
    CLOSECURLY      reduce using rule 62 (condicion1 -> estatutos condicion1 .)


state 229

    (71) for -> FOR ID for1 IS exp TO exp DO OPENCURLY . for2 CLOSECURLY
    (74) for2 -> . estatutos for2
    (75) for2 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for2                           shift and go to state 231
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 232
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 233
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 230

    (64) condicion2 -> ELSE OPENCURLY . condicion3
    (66) condicion3 -> . estatutos condicion3
    (67) condicion3 -> . CLOSECURLY
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 234
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    condicion3                     shift and go to state 235
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 236
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 231

    (71) for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 . CLOSECURLY

    CLOSECURLY      shift and go to state 237


state 232

    (75) for2 -> epsilon .
    (110) factor2 -> epsilon .

    CLOSECURLY      reduce using rule 75 (for2 -> epsilon .)
    ID              reduce using rule 110 (factor2 -> epsilon .)
    INT             reduce using rule 110 (factor2 -> epsilon .)
    FLOAT           reduce using rule 110 (factor2 -> epsilon .)
    CHAR            reduce using rule 110 (factor2 -> epsilon .)


state 233

    (74) for2 -> estatutos . for2
    (74) for2 -> . estatutos for2
    (75) for2 -> . epsilon
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (115) epsilon -> .
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 115 (epsilon -> .)
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    for2                           shift and go to state 238
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 232
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 233
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 234

    (67) condicion3 -> CLOSECURLY .

    ID              reduce using rule 67 (condicion3 -> CLOSECURLY .)
    RETURN          reduce using rule 67 (condicion3 -> CLOSECURLY .)
    READ            reduce using rule 67 (condicion3 -> CLOSECURLY .)
    WRITE           reduce using rule 67 (condicion3 -> CLOSECURLY .)
    IF              reduce using rule 67 (condicion3 -> CLOSECURLY .)
    WHILE           reduce using rule 67 (condicion3 -> CLOSECURLY .)
    FOR             reduce using rule 67 (condicion3 -> CLOSECURLY .)
    OPENPAR         reduce using rule 67 (condicion3 -> CLOSECURLY .)
    PLUS            reduce using rule 67 (condicion3 -> CLOSECURLY .)
    MINUS           reduce using rule 67 (condicion3 -> CLOSECURLY .)
    INT             reduce using rule 67 (condicion3 -> CLOSECURLY .)
    FLOAT           reduce using rule 67 (condicion3 -> CLOSECURLY .)
    CHAR            reduce using rule 67 (condicion3 -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 67 (condicion3 -> CLOSECURLY .)


state 235

    (64) condicion2 -> ELSE OPENCURLY condicion3 .

    ID              reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    RETURN          reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    READ            reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    WRITE           reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    IF              reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    WHILE           reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    FOR             reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    OPENPAR         reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    PLUS            reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    MINUS           reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    INT             reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    FLOAT           reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    CHAR            reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)
    CLOSECURLY      reduce using rule 64 (condicion2 -> ELSE OPENCURLY condicion3 .)


state 236

    (66) condicion3 -> estatutos . condicion3
    (66) condicion3 -> . estatutos condicion3
    (67) condicion3 -> . CLOSECURLY
    (35) estatutos -> . asignacion estatutos1
    (36) estatutos -> . llamada estatutos1
    (37) estatutos -> . retorno estatutos1
    (38) estatutos -> . lectura estatutos1
    (39) estatutos -> . escritura estatutos1
    (40) estatutos -> . condicion estatutos1
    (41) estatutos -> . while estatutos1
    (42) estatutos -> . for estatutos1
    (43) estatutos -> . expresion estatutos1
    (46) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (49) llamada -> . funcion SEMICOLON
    (54) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (55) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (56) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (61) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (68) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (71) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (76) expresion -> . or
    (50) funcion -> . ID OPENPAR funcion1
    (77) or -> . and or1
    (80) and -> . equal and1
    (83) equal -> . compare equal1
    (87) compare -> . exp compare1
    (93) exp -> . termino exp1
    (97) termino -> . factor termino1
    (102) factor -> . ID factor1
    (103) factor -> . OPENPAR expresion CLOSEPAR
    (104) factor -> . funcion
    (105) factor -> . factor2 varcte
    (108) factor2 -> . PLUS
    (109) factor2 -> . MINUS
    (110) factor2 -> . epsilon
    (115) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 234
    ID              shift and go to state 90
    RETURN          shift and go to state 86
    READ            shift and go to state 87
    WRITE           shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 89
    FOR             shift and go to state 96
    OPENPAR         shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 47
    INT             reduce using rule 115 (epsilon -> .)
    FLOAT           reduce using rule 115 (epsilon -> .)
    CHAR            reduce using rule 115 (epsilon -> .)

  ! ID              [ reduce using rule 115 (epsilon -> .) ]

    and                            shift and go to state 67
    compare                        shift and go to state 68
    condicion3                     shift and go to state 239
    for                            shift and go to state 102
    llamada                        shift and go to state 91
    condicion                      shift and go to state 92
    factor                         shift and go to state 42
    retorno                        shift and go to state 93
    lectura                        shift and go to state 94
    funcion                        shift and go to state 95
    epsilon                        shift and go to state 41
    factor2                        shift and go to state 40
    estatutos                      shift and go to state 236
    expresion                      shift and go to state 101
    asignacion                     shift and go to state 103
    equal                          shift and go to state 71
    while                          shift and go to state 104
    termino                        shift and go to state 45
    exp                            shift and go to state 69
    or                             shift and go to state 72
    escritura                      shift and go to state 105

state 237

    (71) for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .

    ID              reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    RETURN          reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    READ            reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    WRITE           reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    IF              reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    WHILE           reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    FOR             reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    OPENPAR         reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    PLUS            reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    MINUS           reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    INT             reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    FLOAT           reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    CHAR            reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    CLOSECURLY      reduce using rule 71 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)


state 238

    (74) for2 -> estatutos for2 .

    CLOSECURLY      reduce using rule 74 (for2 -> estatutos for2 .)


state 239

    (66) condicion3 -> estatutos condicion3 .

    ID              reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    RETURN          reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    READ            reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    WRITE           reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    IF              reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    WHILE           reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    FOR             reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    OPENPAR         reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    PLUS            reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    MINUS           reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    INT             reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    FLOAT           reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    CHAR            reduce using rule 66 (condicion3 -> estatutos condicion3 .)
    CLOSECURLY      reduce using rule 66 (condicion3 -> estatutos condicion3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 48 resolved as shift
WARNING: shift/reduce conflict for ID in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 91 resolved as shift
WARNING: shift/reduce conflict for READ in state 91 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 91 resolved as shift
WARNING: shift/reduce conflict for FOR in state 91 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 92 resolved as shift
WARNING: shift/reduce conflict for READ in state 92 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 92 resolved as shift
WARNING: shift/reduce conflict for IF in state 92 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 92 resolved as shift
WARNING: shift/reduce conflict for FOR in state 92 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 93 resolved as shift
WARNING: shift/reduce conflict for READ in state 93 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 93 resolved as shift
WARNING: shift/reduce conflict for IF in state 93 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 93 resolved as shift
WARNING: shift/reduce conflict for FOR in state 93 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 94 resolved as shift
WARNING: shift/reduce conflict for READ in state 94 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 94 resolved as shift
WARNING: shift/reduce conflict for FOR in state 94 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 101 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 101 resolved as shift
WARNING: shift/reduce conflict for READ in state 101 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 101 resolved as shift
WARNING: shift/reduce conflict for IF in state 101 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 101 resolved as shift
WARNING: shift/reduce conflict for FOR in state 101 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for ID in state 102 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 102 resolved as shift
WARNING: shift/reduce conflict for READ in state 102 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 102 resolved as shift
WARNING: shift/reduce conflict for IF in state 102 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 102 resolved as shift
WARNING: shift/reduce conflict for FOR in state 102 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 103 resolved as shift
WARNING: shift/reduce conflict for READ in state 103 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 104 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 104 resolved as shift
WARNING: shift/reduce conflict for READ in state 104 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 104 resolved as shift
WARNING: shift/reduce conflict for IF in state 104 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 104 resolved as shift
WARNING: shift/reduce conflict for FOR in state 104 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for ID in state 105 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 105 resolved as shift
WARNING: shift/reduce conflict for READ in state 105 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 105 resolved as shift
WARNING: shift/reduce conflict for IF in state 105 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 105 resolved as shift
WARNING: shift/reduce conflict for FOR in state 105 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for ID in state 110 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for ID in state 115 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 118 resolved as shift
WARNING: shift/reduce conflict for ID in state 119 resolved as shift
WARNING: shift/reduce conflict for ID in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 123 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for ID in state 215 resolved as shift
WARNING: shift/reduce conflict for ID in state 218 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 230 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for ID in state 236 resolved as shift
WARNING: reduce/reduce conflict in state 15 resolved using rule (programa2 -> epsilon)
WARNING: rejected rule (funciones -> epsilon) in state 15
WARNING: reduce/reduce conflict in state 147 resolved using rule (estatutos1 -> epsilon)
WARNING: rejected rule (factor2 -> epsilon) in state 147
