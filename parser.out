Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
Rule 2     programa1 -> vars
Rule 3     programa1 -> epsilon
Rule 4     programa2 -> funciones
Rule 5     programa2 -> epsilon
Rule 6     programa3 -> estatutos
Rule 7     programa3 -> epsilon
Rule 8     vars -> VARS vars1
Rule 9     vars1 -> tipo COLON vars2
Rule 10    vars2 -> ID vars3
Rule 11    vars3 -> OPENBOX exp CLOSEBOX vars4
Rule 12    vars3 -> vars4
Rule 13    vars4 -> SEMICOLON vars5
Rule 14    vars4 -> COMMA vars2
Rule 15    vars5 -> vars1
Rule 16    vars5 -> epsilon
Rule 17    lista_ids -> ID lista_ids1
Rule 18    lista_ids1 -> lista_ids2
Rule 19    lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2
Rule 20    lista_ids2 -> COMMA lista_ids
Rule 21    lista_ids2 -> epsilon
Rule 22    tipo -> TYPEFLOAT
Rule 23    tipo -> TYPEINT
Rule 24    tipo -> TYPECHAR
Rule 25    funciones -> FUNCTION funciones1
Rule 26    funciones -> epsilon
Rule 27    funciones1 -> tipo funciones2
Rule 28    funciones1 -> TYPEVOID funciones2
Rule 29    funciones2 -> ID OPENPAR funciones3
Rule 30    funciones3 -> parameters funciones4
Rule 31    funciones3 -> funciones4
Rule 32    funciones4 -> CLOSEPAR funciones5
Rule 33    funciones5 -> vars OPENCURLY funciones6
Rule 34    funciones5 -> OPENCURLY funciones6
Rule 35    funciones6 -> estatutos funciones6
Rule 36    funciones6 -> CLOSECURLY funciones
Rule 37    parameters -> tipo ID parameters1
Rule 38    parameters1 -> COMMA parameters
Rule 39    parameters1 -> epsilon
Rule 40    estatutos -> asignacion estatutos1
Rule 41    estatutos -> llamada estatutos1
Rule 42    estatutos -> retorno estatutos1
Rule 43    estatutos -> lectura estatutos1
Rule 44    estatutos -> escritura estatutos1
Rule 45    estatutos -> condicion estatutos1
Rule 46    estatutos -> while estatutos1
Rule 47    estatutos -> for estatutos1
Rule 48    estatutos -> expresion estatutos1
Rule 49    estatutos1 -> estatutos
Rule 50    estatutos1 -> epsilon
Rule 51    asignacion -> ID asignacion1 IS expresion SEMICOLON
Rule 52    asignacion1 -> OPENBOX exp CLOSEBOX
Rule 53    asignacion1 -> epsilon
Rule 54    llamada -> funcion SEMICOLON
Rule 55    funcion -> ID OPENPAR funcion1
Rule 56    funcion1 -> exp funcion2
Rule 57    funcion2 -> COMMA funcion1
Rule 58    funcion2 -> CLOSEPAR
Rule 59    retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON
Rule 60    lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON
Rule 61    escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
Rule 62    escritura1 -> STRING escritura2
Rule 63    escritura1 -> lista_ids escritura2
Rule 64    escritura2 -> COMMA escritura1
Rule 65    escritura2 -> epsilon
Rule 66    condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
Rule 67    condicion1 -> estatutos condicion1
Rule 68    condicion1 -> CLOSECURLY condicion2
Rule 69    condicion2 -> ELSE OPENCURLY condicion3
Rule 70    condicion2 -> epsilon
Rule 71    condicion3 -> estatutos condicion3
Rule 72    condicion3 -> CLOSECURLY
Rule 73    while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
Rule 74    while1 -> estatutos while1
Rule 75    while1 -> CLOSECURLY
Rule 76    for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
Rule 77    for1 -> OPENBOX exp CLOSEBOX
Rule 78    for1 -> epsilon
Rule 79    for2 -> estatutos for2
Rule 80    for2 -> epsilon
Rule 81    expresion -> or
Rule 82    or -> and or1
Rule 83    or1 -> OR or
Rule 84    or1 -> epsilon
Rule 85    and -> equal and1
Rule 86    and1 -> AND and
Rule 87    and1 -> epsilon
Rule 88    equal -> compare equal1
Rule 89    equal1 -> EQ equal
Rule 90    equal1 -> NE equal
Rule 91    equal1 -> epsilon
Rule 92    compare -> exp compare1
Rule 93    compare1 -> LT compare
Rule 94    compare1 -> LE compare
Rule 95    compare1 -> GT compare
Rule 96    compare1 -> GE compare
Rule 97    compare1 -> epsilon
Rule 98    exp -> termino exp1
Rule 99    exp1 -> PLUS exp
Rule 100   exp1 -> MINUS exp
Rule 101   exp1 -> epsilon
Rule 102   termino -> factor termino1
Rule 103   termino1 -> MULTIPLY termino
Rule 104   termino1 -> DIVIDE termino
Rule 105   termino1 -> MODULO termino
Rule 106   termino1 -> epsilon
Rule 107   factor -> ID factor1
Rule 108   factor -> OPENPAR expresion CLOSEPAR
Rule 109   factor -> funcion
Rule 110   factor -> factor2 varcte
Rule 111   factor1 -> OPENBOX exp CLOSEBOX
Rule 112   factor1 -> epsilon
Rule 113   factor2 -> PLUS
Rule 114   factor2 -> MINUS
Rule 115   factor2 -> epsilon
Rule 116   varcte -> ID
Rule 117   varcte -> INT
Rule 118   varcte -> FLOAT
Rule 119   varcte -> CHAR
Rule 120   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 86
CHAR                 : 119
CLOSEBOX             : 11 19 52 77 111
CLOSECURLY           : 1 36 68 72 75 76
CLOSEPAR             : 1 32 58 59 60 61 66 73 108
COLON                : 9
COMMA                : 14 20 38 57 64
DIVIDE               : 104
DO                   : 73 76
ELSE                 : 69
EQ                   : 89
FLOAT                : 118
FOR                  : 76
FUNCTION             : 25
GE                   : 96
GT                   : 95
ID                   : 1 10 17 29 37 51 55 76 107 116
IF                   : 66
INT                  : 117
IS                   : 51 76
LE                   : 94
LT                   : 93
MAIN                 : 1
MINUS                : 100 114
MODULO               : 105
MULTIPLY             : 103
NE                   : 90
OPENBOX              : 11 19 52 77 111
OPENCURLY            : 1 33 34 66 69 73 76
OPENPAR              : 1 29 55 59 60 61 66 73 108
OR                   : 83
PLUS                 : 99 113
PROGRAM              : 1
READ                 : 60
RETURN               : 59
SEMICOLON            : 1 13 51 54 59 60 61
STRING               : 62
THEN                 : 66
TO                   : 76
TYPECHAR             : 24
TYPEFLOAT            : 22
TYPEINT              : 23
TYPEVOID             : 28
VARS                 : 8
WHILE                : 73
WRITE                : 61
error                : 

Nonterminals, with rules where they appear

and                  : 82 86
and1                 : 85
asignacion           : 40
asignacion1          : 51
compare              : 88 93 94 95 96
compare1             : 92
condicion            : 45
condicion1           : 66 67
condicion2           : 68
condicion3           : 69 71
epsilon              : 3 5 7 16 21 26 39 50 53 65 70 78 80 84 87 91 97 101 106 112 115
equal                : 85 89 90
equal1               : 88
escritura            : 44
escritura1           : 61 64
escritura2           : 62 63
estatutos            : 6 35 49 67 71 74 79
estatutos1           : 40 41 42 43 44 45 46 47 48
exp                  : 11 19 52 56 59 76 76 77 92 99 100 111
exp1                 : 98
expresion            : 48 51 66 73 108
factor               : 102
factor1              : 107
factor2              : 110
for                  : 47
for1                 : 76
for2                 : 76 79
funcion              : 54 109
funcion1             : 55 57
funcion2             : 56
funciones            : 4 36
funciones1           : 25
funciones2           : 27 28
funciones3           : 29
funciones4           : 30 31
funciones5           : 32
funciones6           : 33 34 35
lectura              : 43
lista_ids            : 20 60 63
lista_ids1           : 17
lista_ids2           : 18 19
llamada              : 41
or                   : 81 83
or1                  : 82
parameters           : 30 38
parameters1          : 37
programa             : 0
programa1            : 1
programa2            : 1
programa3            : 1
retorno              : 42
termino              : 98 103 104 105
termino1             : 102
tipo                 : 9 27 37
varcte               : 110
vars                 : 2 33
vars1                : 8 15
vars2                : 9 14
vars3                : 10
vars4                : 11 12
vars5                : 13
while                : 46
while1               : 73 74

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
    (2) programa1 -> . vars
    (3) programa1 -> . epsilon
    (8) vars -> . VARS vars1
    (120) epsilon -> .

    VARS            shift and go to state 8
    FUNCTION        reduce using rule 120 (epsilon -> .)
    MAIN            reduce using rule 120 (epsilon -> .)

    programa1                      shift and go to state 5
    vars                           shift and go to state 6
    epsilon                        shift and go to state 7

state 5

    (1) programa -> PROGRAM ID SEMICOLON programa1 . programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
    (4) programa2 -> . funciones
    (5) programa2 -> . epsilon
    (25) funciones -> . FUNCTION funciones1
    (26) funciones -> . epsilon
    (120) epsilon -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 120 (epsilon -> .)

    programa2                      shift and go to state 9
    funciones                      shift and go to state 10
    epsilon                        shift and go to state 11

state 6

    (2) programa1 -> vars .

    FUNCTION        reduce using rule 2 (programa1 -> vars .)
    MAIN            reduce using rule 2 (programa1 -> vars .)


state 7

    (3) programa1 -> epsilon .

    FUNCTION        reduce using rule 3 (programa1 -> epsilon .)
    MAIN            reduce using rule 3 (programa1 -> epsilon .)


state 8

    (8) vars -> VARS . vars1
    (9) vars1 -> . tipo COLON vars2
    (22) tipo -> . TYPEFLOAT
    (23) tipo -> . TYPEINT
    (24) tipo -> . TYPECHAR

    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    vars1                          shift and go to state 13
    tipo                           shift and go to state 14

state 9

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 . MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    MAIN            shift and go to state 18


state 10

    (4) programa2 -> funciones .

    MAIN            reduce using rule 4 (programa2 -> funciones .)


state 11

    (5) programa2 -> epsilon .
    (26) funciones -> epsilon .

  ! reduce/reduce conflict for MAIN resolved using rule 5 (programa2 -> epsilon .)
    MAIN            reduce using rule 5 (programa2 -> epsilon .)

  ! MAIN            [ reduce using rule 26 (funciones -> epsilon .) ]


state 12

    (25) funciones -> FUNCTION . funciones1
    (27) funciones1 -> . tipo funciones2
    (28) funciones1 -> . TYPEVOID funciones2
    (22) tipo -> . TYPEFLOAT
    (23) tipo -> . TYPEINT
    (24) tipo -> . TYPECHAR

    TYPEVOID        shift and go to state 21
    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    funciones1                     shift and go to state 19
    tipo                           shift and go to state 20

state 13

    (8) vars -> VARS vars1 .

    FUNCTION        reduce using rule 8 (vars -> VARS vars1 .)
    MAIN            reduce using rule 8 (vars -> VARS vars1 .)
    OPENCURLY       reduce using rule 8 (vars -> VARS vars1 .)


state 14

    (9) vars1 -> tipo . COLON vars2

    COLON           shift and go to state 22


state 15

    (22) tipo -> TYPEFLOAT .

    COLON           reduce using rule 22 (tipo -> TYPEFLOAT .)
    ID              reduce using rule 22 (tipo -> TYPEFLOAT .)


state 16

    (23) tipo -> TYPEINT .

    COLON           reduce using rule 23 (tipo -> TYPEINT .)
    ID              reduce using rule 23 (tipo -> TYPEINT .)


state 17

    (24) tipo -> TYPECHAR .

    COLON           reduce using rule 24 (tipo -> TYPECHAR .)
    ID              reduce using rule 24 (tipo -> TYPECHAR .)


state 18

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN . OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    OPENPAR         shift and go to state 23


state 19

    (25) funciones -> FUNCTION funciones1 .

    MAIN            reduce using rule 25 (funciones -> FUNCTION funciones1 .)


state 20

    (27) funciones1 -> tipo . funciones2
    (29) funciones2 -> . ID OPENPAR funciones3

    ID              shift and go to state 25

    funciones2                     shift and go to state 24

state 21

    (28) funciones1 -> TYPEVOID . funciones2
    (29) funciones2 -> . ID OPENPAR funciones3

    ID              shift and go to state 25

    funciones2                     shift and go to state 26

state 22

    (9) vars1 -> tipo COLON . vars2
    (10) vars2 -> . ID vars3

    ID              shift and go to state 28

    vars2                          shift and go to state 27

state 23

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR . CLOSEPAR OPENCURLY programa3 CLOSECURLY

    CLOSEPAR        shift and go to state 29


state 24

    (27) funciones1 -> tipo funciones2 .

    MAIN            reduce using rule 27 (funciones1 -> tipo funciones2 .)


state 25

    (29) funciones2 -> ID . OPENPAR funciones3

    OPENPAR         shift and go to state 30


state 26

    (28) funciones1 -> TYPEVOID funciones2 .

    MAIN            reduce using rule 28 (funciones1 -> TYPEVOID funciones2 .)


state 27

    (9) vars1 -> tipo COLON vars2 .

    FUNCTION        reduce using rule 9 (vars1 -> tipo COLON vars2 .)
    MAIN            reduce using rule 9 (vars1 -> tipo COLON vars2 .)
    OPENCURLY       reduce using rule 9 (vars1 -> tipo COLON vars2 .)


state 28

    (10) vars2 -> ID . vars3
    (11) vars3 -> . OPENBOX exp CLOSEBOX vars4
    (12) vars3 -> . vars4
    (13) vars4 -> . SEMICOLON vars5
    (14) vars4 -> . COMMA vars2

    OPENBOX         shift and go to state 32
    SEMICOLON       shift and go to state 34
    COMMA           shift and go to state 35

    vars3                          shift and go to state 31
    vars4                          shift and go to state 33

state 29

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR . OPENCURLY programa3 CLOSECURLY

    OPENCURLY       shift and go to state 36


state 30

    (29) funciones2 -> ID OPENPAR . funciones3
    (30) funciones3 -> . parameters funciones4
    (31) funciones3 -> . funciones4
    (37) parameters -> . tipo ID parameters1
    (32) funciones4 -> . CLOSEPAR funciones5
    (22) tipo -> . TYPEFLOAT
    (23) tipo -> . TYPEINT
    (24) tipo -> . TYPECHAR

    CLOSEPAR        shift and go to state 41
    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    funciones3                     shift and go to state 37
    parameters                     shift and go to state 38
    funciones4                     shift and go to state 39
    tipo                           shift and go to state 40

state 31

    (10) vars2 -> ID vars3 .

    FUNCTION        reduce using rule 10 (vars2 -> ID vars3 .)
    MAIN            reduce using rule 10 (vars2 -> ID vars3 .)
    OPENCURLY       reduce using rule 10 (vars2 -> ID vars3 .)


state 32

    (11) vars3 -> OPENBOX . exp CLOSEBOX vars4
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 42
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 33

    (12) vars3 -> vars4 .

    FUNCTION        reduce using rule 12 (vars3 -> vars4 .)
    MAIN            reduce using rule 12 (vars3 -> vars4 .)
    OPENCURLY       reduce using rule 12 (vars3 -> vars4 .)


state 34

    (13) vars4 -> SEMICOLON . vars5
    (15) vars5 -> . vars1
    (16) vars5 -> . epsilon
    (9) vars1 -> . tipo COLON vars2
    (120) epsilon -> .
    (22) tipo -> . TYPEFLOAT
    (23) tipo -> . TYPEINT
    (24) tipo -> . TYPECHAR

    FUNCTION        reduce using rule 120 (epsilon -> .)
    MAIN            reduce using rule 120 (epsilon -> .)
    OPENCURLY       reduce using rule 120 (epsilon -> .)
    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    vars5                          shift and go to state 52
    vars1                          shift and go to state 53
    epsilon                        shift and go to state 54
    tipo                           shift and go to state 14

state 35

    (14) vars4 -> COMMA . vars2
    (10) vars2 -> . ID vars3

    ID              shift and go to state 28

    vars2                          shift and go to state 55

state 36

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY . programa3 CLOSECURLY
    (6) programa3 -> . estatutos
    (7) programa3 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    programa3                      shift and go to state 57
    estatutos                      shift and go to state 58
    epsilon                        shift and go to state 59
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 37

    (29) funciones2 -> ID OPENPAR funciones3 .

    MAIN            reduce using rule 29 (funciones2 -> ID OPENPAR funciones3 .)


state 38

    (30) funciones3 -> parameters . funciones4
    (32) funciones4 -> . CLOSEPAR funciones5

    CLOSEPAR        shift and go to state 41

    funciones4                     shift and go to state 81

state 39

    (31) funciones3 -> funciones4 .

    MAIN            reduce using rule 31 (funciones3 -> funciones4 .)


state 40

    (37) parameters -> tipo . ID parameters1

    ID              shift and go to state 82


state 41

    (32) funciones4 -> CLOSEPAR . funciones5
    (33) funciones5 -> . vars OPENCURLY funciones6
    (34) funciones5 -> . OPENCURLY funciones6
    (8) vars -> . VARS vars1

    OPENCURLY       shift and go to state 85
    VARS            shift and go to state 8

    funciones5                     shift and go to state 83
    vars                           shift and go to state 84

state 42

    (11) vars3 -> OPENBOX exp . CLOSEBOX vars4

    CLOSEBOX        shift and go to state 86


state 43

    (98) exp -> termino . exp1
    (99) exp1 -> . PLUS exp
    (100) exp1 -> . MINUS exp
    (101) exp1 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89
    CLOSEBOX        reduce using rule 120 (epsilon -> .)
    LT              reduce using rule 120 (epsilon -> .)
    LE              reduce using rule 120 (epsilon -> .)
    GT              reduce using rule 120 (epsilon -> .)
    GE              reduce using rule 120 (epsilon -> .)
    EQ              reduce using rule 120 (epsilon -> .)
    NE              reduce using rule 120 (epsilon -> .)
    AND             reduce using rule 120 (epsilon -> .)
    OR              reduce using rule 120 (epsilon -> .)
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    OPENPAR         reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    CLOSEPAR        reduce using rule 120 (epsilon -> .)
    COMMA           reduce using rule 120 (epsilon -> .)
    SEMICOLON       reduce using rule 120 (epsilon -> .)
    TO              reduce using rule 120 (epsilon -> .)
    DO              reduce using rule 120 (epsilon -> .)

  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    exp1                           shift and go to state 87
    epsilon                        shift and go to state 90

state 44

    (102) termino -> factor . termino1
    (103) termino1 -> . MULTIPLY termino
    (104) termino1 -> . DIVIDE termino
    (105) termino1 -> . MODULO termino
    (106) termino1 -> . epsilon
    (120) epsilon -> .

    MULTIPLY        shift and go to state 92
    DIVIDE          shift and go to state 93
    MODULO          shift and go to state 94
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    CLOSEBOX        reduce using rule 120 (epsilon -> .)
    LT              reduce using rule 120 (epsilon -> .)
    LE              reduce using rule 120 (epsilon -> .)
    GT              reduce using rule 120 (epsilon -> .)
    GE              reduce using rule 120 (epsilon -> .)
    EQ              reduce using rule 120 (epsilon -> .)
    NE              reduce using rule 120 (epsilon -> .)
    AND             reduce using rule 120 (epsilon -> .)
    OR              reduce using rule 120 (epsilon -> .)
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    OPENPAR         reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    CLOSEPAR        reduce using rule 120 (epsilon -> .)
    COMMA           reduce using rule 120 (epsilon -> .)
    SEMICOLON       reduce using rule 120 (epsilon -> .)
    TO              reduce using rule 120 (epsilon -> .)
    DO              reduce using rule 120 (epsilon -> .)

    termino1                       shift and go to state 91
    epsilon                        shift and go to state 95

state 45

    (107) factor -> ID . factor1
    (55) funcion -> ID . OPENPAR funcion1
    (111) factor1 -> . OPENBOX exp CLOSEBOX
    (112) factor1 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for OPENPAR resolved as shift
    OPENPAR         shift and go to state 97
    OPENBOX         shift and go to state 98
    MULTIPLY        reduce using rule 120 (epsilon -> .)
    DIVIDE          reduce using rule 120 (epsilon -> .)
    MODULO          reduce using rule 120 (epsilon -> .)
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    CLOSEBOX        reduce using rule 120 (epsilon -> .)
    LT              reduce using rule 120 (epsilon -> .)
    LE              reduce using rule 120 (epsilon -> .)
    GT              reduce using rule 120 (epsilon -> .)
    GE              reduce using rule 120 (epsilon -> .)
    EQ              reduce using rule 120 (epsilon -> .)
    NE              reduce using rule 120 (epsilon -> .)
    AND             reduce using rule 120 (epsilon -> .)
    OR              reduce using rule 120 (epsilon -> .)
    CLOSEPAR        reduce using rule 120 (epsilon -> .)
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    COMMA           reduce using rule 120 (epsilon -> .)
    SEMICOLON       reduce using rule 120 (epsilon -> .)
    TO              reduce using rule 120 (epsilon -> .)
    DO              reduce using rule 120 (epsilon -> .)

  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]

    factor1                        shift and go to state 96
    epsilon                        shift and go to state 99

state 46

    (108) factor -> OPENPAR . expresion CLOSEPAR
    (81) expresion -> . or
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    expresion                      shift and go to state 100
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 47

    (109) factor -> funcion .

    MULTIPLY        reduce using rule 109 (factor -> funcion .)
    DIVIDE          reduce using rule 109 (factor -> funcion .)
    MODULO          reduce using rule 109 (factor -> funcion .)
    PLUS            reduce using rule 109 (factor -> funcion .)
    MINUS           reduce using rule 109 (factor -> funcion .)
    CLOSEBOX        reduce using rule 109 (factor -> funcion .)
    LT              reduce using rule 109 (factor -> funcion .)
    LE              reduce using rule 109 (factor -> funcion .)
    GT              reduce using rule 109 (factor -> funcion .)
    GE              reduce using rule 109 (factor -> funcion .)
    EQ              reduce using rule 109 (factor -> funcion .)
    NE              reduce using rule 109 (factor -> funcion .)
    AND             reduce using rule 109 (factor -> funcion .)
    OR              reduce using rule 109 (factor -> funcion .)
    CLOSEPAR        reduce using rule 109 (factor -> funcion .)
    ID              reduce using rule 109 (factor -> funcion .)
    RETURN          reduce using rule 109 (factor -> funcion .)
    READ            reduce using rule 109 (factor -> funcion .)
    WRITE           reduce using rule 109 (factor -> funcion .)
    IF              reduce using rule 109 (factor -> funcion .)
    WHILE           reduce using rule 109 (factor -> funcion .)
    FOR             reduce using rule 109 (factor -> funcion .)
    OPENPAR         reduce using rule 109 (factor -> funcion .)
    INT             reduce using rule 109 (factor -> funcion .)
    FLOAT           reduce using rule 109 (factor -> funcion .)
    CHAR            reduce using rule 109 (factor -> funcion .)
    CLOSECURLY      reduce using rule 109 (factor -> funcion .)
    COMMA           reduce using rule 109 (factor -> funcion .)
    SEMICOLON       reduce using rule 109 (factor -> funcion .)
    TO              reduce using rule 109 (factor -> funcion .)
    DO              reduce using rule 109 (factor -> funcion .)


state 48

    (110) factor -> factor2 . varcte
    (116) varcte -> . ID
    (117) varcte -> . INT
    (118) varcte -> . FLOAT
    (119) varcte -> . CHAR

    ID              shift and go to state 102
    INT             shift and go to state 103
    FLOAT           shift and go to state 104
    CHAR            shift and go to state 105

    varcte                         shift and go to state 101

state 49

    (113) factor2 -> PLUS .

    ID              reduce using rule 113 (factor2 -> PLUS .)
    INT             reduce using rule 113 (factor2 -> PLUS .)
    FLOAT           reduce using rule 113 (factor2 -> PLUS .)
    CHAR            reduce using rule 113 (factor2 -> PLUS .)


state 50

    (114) factor2 -> MINUS .

    ID              reduce using rule 114 (factor2 -> MINUS .)
    INT             reduce using rule 114 (factor2 -> MINUS .)
    FLOAT           reduce using rule 114 (factor2 -> MINUS .)
    CHAR            reduce using rule 114 (factor2 -> MINUS .)


state 51

    (115) factor2 -> epsilon .

    ID              reduce using rule 115 (factor2 -> epsilon .)
    INT             reduce using rule 115 (factor2 -> epsilon .)
    FLOAT           reduce using rule 115 (factor2 -> epsilon .)
    CHAR            reduce using rule 115 (factor2 -> epsilon .)


state 52

    (13) vars4 -> SEMICOLON vars5 .

    FUNCTION        reduce using rule 13 (vars4 -> SEMICOLON vars5 .)
    MAIN            reduce using rule 13 (vars4 -> SEMICOLON vars5 .)
    OPENCURLY       reduce using rule 13 (vars4 -> SEMICOLON vars5 .)


state 53

    (15) vars5 -> vars1 .

    FUNCTION        reduce using rule 15 (vars5 -> vars1 .)
    MAIN            reduce using rule 15 (vars5 -> vars1 .)
    OPENCURLY       reduce using rule 15 (vars5 -> vars1 .)


state 54

    (16) vars5 -> epsilon .

    FUNCTION        reduce using rule 16 (vars5 -> epsilon .)
    MAIN            reduce using rule 16 (vars5 -> epsilon .)
    OPENCURLY       reduce using rule 16 (vars5 -> epsilon .)


state 55

    (14) vars4 -> COMMA vars2 .

    FUNCTION        reduce using rule 14 (vars4 -> COMMA vars2 .)
    MAIN            reduce using rule 14 (vars4 -> COMMA vars2 .)
    OPENCURLY       reduce using rule 14 (vars4 -> COMMA vars2 .)


state 56

    (51) asignacion -> ID . asignacion1 IS expresion SEMICOLON
    (55) funcion -> ID . OPENPAR funcion1
    (107) factor -> ID . factor1
    (52) asignacion1 -> . OPENBOX exp CLOSEBOX
    (53) asignacion1 -> . epsilon
    (111) factor1 -> . OPENBOX exp CLOSEBOX
    (112) factor1 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for OPENPAR resolved as shift
    OPENPAR         shift and go to state 97
    OPENBOX         shift and go to state 107
    IS              reduce using rule 120 (epsilon -> .)
    MULTIPLY        reduce using rule 120 (epsilon -> .)
    DIVIDE          reduce using rule 120 (epsilon -> .)
    MODULO          reduce using rule 120 (epsilon -> .)
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    LT              reduce using rule 120 (epsilon -> .)
    LE              reduce using rule 120 (epsilon -> .)
    GT              reduce using rule 120 (epsilon -> .)
    GE              reduce using rule 120 (epsilon -> .)
    EQ              reduce using rule 120 (epsilon -> .)
    NE              reduce using rule 120 (epsilon -> .)
    AND             reduce using rule 120 (epsilon -> .)
    OR              reduce using rule 120 (epsilon -> .)
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)

  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]

    asignacion1                    shift and go to state 106
    factor1                        shift and go to state 96
    epsilon                        shift and go to state 108

state 57

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 . CLOSECURLY

    CLOSECURLY      shift and go to state 109


state 58

    (6) programa3 -> estatutos .

    CLOSECURLY      reduce using rule 6 (programa3 -> estatutos .)


state 59

    (7) programa3 -> epsilon .
    (115) factor2 -> epsilon .

    CLOSECURLY      reduce using rule 7 (programa3 -> epsilon .)
    ID              reduce using rule 115 (factor2 -> epsilon .)
    INT             reduce using rule 115 (factor2 -> epsilon .)
    FLOAT           reduce using rule 115 (factor2 -> epsilon .)
    CHAR            reduce using rule 115 (factor2 -> epsilon .)


state 60

    (40) estatutos -> asignacion . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    asignacion                     shift and go to state 60
    estatutos1                     shift and go to state 110
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 61

    (41) estatutos -> llamada . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    llamada                        shift and go to state 61
    estatutos1                     shift and go to state 113
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 62

    (42) estatutos -> retorno . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    retorno                        shift and go to state 62
    estatutos1                     shift and go to state 114
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 63

    (43) estatutos -> lectura . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    lectura                        shift and go to state 63
    estatutos1                     shift and go to state 115
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 64

    (44) estatutos -> escritura . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    escritura                      shift and go to state 64
    estatutos1                     shift and go to state 116
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 65

    (45) estatutos -> condicion . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    condicion                      shift and go to state 65
    estatutos1                     shift and go to state 117
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 66

    (46) estatutos -> while . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    while                          shift and go to state 66
    estatutos1                     shift and go to state 118
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 67

    (47) estatutos -> for . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    for                            shift and go to state 67
    estatutos1                     shift and go to state 119
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 68

    (48) estatutos -> expresion . estatutos1
    (49) estatutos1 -> . estatutos
    (50) estatutos1 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 120 (epsilon -> .) ]
  ! READ            [ reduce using rule 120 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 120 (epsilon -> .) ]
  ! IF              [ reduce using rule 120 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 120 (epsilon -> .) ]
  ! FOR             [ reduce using rule 120 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 120 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 120 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 120 (epsilon -> .) ]

    expresion                      shift and go to state 68
    estatutos1                     shift and go to state 120
    estatutos                      shift and go to state 111
    epsilon                        shift and go to state 112
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 69

    (54) llamada -> funcion . SEMICOLON
    (109) factor -> funcion .

    SEMICOLON       shift and go to state 121
    MULTIPLY        reduce using rule 109 (factor -> funcion .)
    DIVIDE          reduce using rule 109 (factor -> funcion .)
    MODULO          reduce using rule 109 (factor -> funcion .)
    PLUS            reduce using rule 109 (factor -> funcion .)
    MINUS           reduce using rule 109 (factor -> funcion .)
    LT              reduce using rule 109 (factor -> funcion .)
    LE              reduce using rule 109 (factor -> funcion .)
    GT              reduce using rule 109 (factor -> funcion .)
    GE              reduce using rule 109 (factor -> funcion .)
    EQ              reduce using rule 109 (factor -> funcion .)
    NE              reduce using rule 109 (factor -> funcion .)
    AND             reduce using rule 109 (factor -> funcion .)
    OR              reduce using rule 109 (factor -> funcion .)
    ID              reduce using rule 109 (factor -> funcion .)
    RETURN          reduce using rule 109 (factor -> funcion .)
    READ            reduce using rule 109 (factor -> funcion .)
    WRITE           reduce using rule 109 (factor -> funcion .)
    IF              reduce using rule 109 (factor -> funcion .)
    WHILE           reduce using rule 109 (factor -> funcion .)
    FOR             reduce using rule 109 (factor -> funcion .)
    OPENPAR         reduce using rule 109 (factor -> funcion .)
    INT             reduce using rule 109 (factor -> funcion .)
    FLOAT           reduce using rule 109 (factor -> funcion .)
    CHAR            reduce using rule 109 (factor -> funcion .)
    CLOSECURLY      reduce using rule 109 (factor -> funcion .)


state 70

    (59) retorno -> RETURN . OPENPAR exp CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 122


state 71

    (92) compare -> exp . compare1
    (93) compare1 -> . LT compare
    (94) compare1 -> . LE compare
    (95) compare1 -> . GT compare
    (96) compare1 -> . GE compare
    (97) compare1 -> . epsilon
    (120) epsilon -> .

    LT              shift and go to state 124
    LE              shift and go to state 125
    GT              shift and go to state 126
    GE              shift and go to state 127
    EQ              reduce using rule 120 (epsilon -> .)
    NE              reduce using rule 120 (epsilon -> .)
    AND             reduce using rule 120 (epsilon -> .)
    OR              reduce using rule 120 (epsilon -> .)
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    OPENPAR         reduce using rule 120 (epsilon -> .)
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    CLOSEPAR        reduce using rule 120 (epsilon -> .)
    SEMICOLON       reduce using rule 120 (epsilon -> .)

    compare1                       shift and go to state 123
    epsilon                        shift and go to state 128

state 72

    (60) lectura -> READ . OPENPAR lista_ids CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 129


state 73

    (61) escritura -> WRITE . OPENPAR escritura1 CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 130


state 74

    (66) condicion -> IF . OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1

    OPENPAR         shift and go to state 131


state 75

    (73) while -> WHILE . OPENPAR expresion CLOSEPAR DO OPENCURLY while1

    OPENPAR         shift and go to state 132


state 76

    (76) for -> FOR . ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY

    ID              shift and go to state 133


state 77

    (81) expresion -> or .

    ID              reduce using rule 81 (expresion -> or .)
    RETURN          reduce using rule 81 (expresion -> or .)
    READ            reduce using rule 81 (expresion -> or .)
    WRITE           reduce using rule 81 (expresion -> or .)
    IF              reduce using rule 81 (expresion -> or .)
    WHILE           reduce using rule 81 (expresion -> or .)
    FOR             reduce using rule 81 (expresion -> or .)
    OPENPAR         reduce using rule 81 (expresion -> or .)
    PLUS            reduce using rule 81 (expresion -> or .)
    MINUS           reduce using rule 81 (expresion -> or .)
    INT             reduce using rule 81 (expresion -> or .)
    FLOAT           reduce using rule 81 (expresion -> or .)
    CHAR            reduce using rule 81 (expresion -> or .)
    CLOSECURLY      reduce using rule 81 (expresion -> or .)
    CLOSEPAR        reduce using rule 81 (expresion -> or .)
    SEMICOLON       reduce using rule 81 (expresion -> or .)


state 78

    (82) or -> and . or1
    (83) or1 -> . OR or
    (84) or1 -> . epsilon
    (120) epsilon -> .

    OR              shift and go to state 135
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    OPENPAR         reduce using rule 120 (epsilon -> .)
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    CLOSEPAR        reduce using rule 120 (epsilon -> .)
    SEMICOLON       reduce using rule 120 (epsilon -> .)

    or1                            shift and go to state 134
    epsilon                        shift and go to state 136

state 79

    (85) and -> equal . and1
    (86) and1 -> . AND and
    (87) and1 -> . epsilon
    (120) epsilon -> .

    AND             shift and go to state 138
    OR              reduce using rule 120 (epsilon -> .)
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    OPENPAR         reduce using rule 120 (epsilon -> .)
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    CLOSEPAR        reduce using rule 120 (epsilon -> .)
    SEMICOLON       reduce using rule 120 (epsilon -> .)

    and1                           shift and go to state 137
    epsilon                        shift and go to state 139

state 80

    (88) equal -> compare . equal1
    (89) equal1 -> . EQ equal
    (90) equal1 -> . NE equal
    (91) equal1 -> . epsilon
    (120) epsilon -> .

    EQ              shift and go to state 141
    NE              shift and go to state 142
    AND             reduce using rule 120 (epsilon -> .)
    OR              reduce using rule 120 (epsilon -> .)
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    OPENPAR         reduce using rule 120 (epsilon -> .)
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    CLOSEPAR        reduce using rule 120 (epsilon -> .)
    SEMICOLON       reduce using rule 120 (epsilon -> .)

    equal1                         shift and go to state 140
    epsilon                        shift and go to state 143

state 81

    (30) funciones3 -> parameters funciones4 .

    MAIN            reduce using rule 30 (funciones3 -> parameters funciones4 .)


state 82

    (37) parameters -> tipo ID . parameters1
    (38) parameters1 -> . COMMA parameters
    (39) parameters1 -> . epsilon
    (120) epsilon -> .

    COMMA           shift and go to state 145
    CLOSEPAR        reduce using rule 120 (epsilon -> .)

    parameters1                    shift and go to state 144
    epsilon                        shift and go to state 146

state 83

    (32) funciones4 -> CLOSEPAR funciones5 .

    MAIN            reduce using rule 32 (funciones4 -> CLOSEPAR funciones5 .)


state 84

    (33) funciones5 -> vars . OPENCURLY funciones6

    OPENCURLY       shift and go to state 147


state 85

    (34) funciones5 -> OPENCURLY . funciones6
    (35) funciones6 -> . estatutos funciones6
    (36) funciones6 -> . CLOSECURLY funciones
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 150
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    funciones6                     shift and go to state 148
    estatutos                      shift and go to state 149
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 86

    (11) vars3 -> OPENBOX exp CLOSEBOX . vars4
    (13) vars4 -> . SEMICOLON vars5
    (14) vars4 -> . COMMA vars2

    SEMICOLON       shift and go to state 34
    COMMA           shift and go to state 35

    vars4                          shift and go to state 151

state 87

    (98) exp -> termino exp1 .

    CLOSEBOX        reduce using rule 98 (exp -> termino exp1 .)
    LT              reduce using rule 98 (exp -> termino exp1 .)
    LE              reduce using rule 98 (exp -> termino exp1 .)
    GT              reduce using rule 98 (exp -> termino exp1 .)
    GE              reduce using rule 98 (exp -> termino exp1 .)
    EQ              reduce using rule 98 (exp -> termino exp1 .)
    NE              reduce using rule 98 (exp -> termino exp1 .)
    AND             reduce using rule 98 (exp -> termino exp1 .)
    OR              reduce using rule 98 (exp -> termino exp1 .)
    ID              reduce using rule 98 (exp -> termino exp1 .)
    RETURN          reduce using rule 98 (exp -> termino exp1 .)
    READ            reduce using rule 98 (exp -> termino exp1 .)
    WRITE           reduce using rule 98 (exp -> termino exp1 .)
    IF              reduce using rule 98 (exp -> termino exp1 .)
    WHILE           reduce using rule 98 (exp -> termino exp1 .)
    FOR             reduce using rule 98 (exp -> termino exp1 .)
    OPENPAR         reduce using rule 98 (exp -> termino exp1 .)
    PLUS            reduce using rule 98 (exp -> termino exp1 .)
    MINUS           reduce using rule 98 (exp -> termino exp1 .)
    INT             reduce using rule 98 (exp -> termino exp1 .)
    FLOAT           reduce using rule 98 (exp -> termino exp1 .)
    CHAR            reduce using rule 98 (exp -> termino exp1 .)
    CLOSECURLY      reduce using rule 98 (exp -> termino exp1 .)
    CLOSEPAR        reduce using rule 98 (exp -> termino exp1 .)
    COMMA           reduce using rule 98 (exp -> termino exp1 .)
    SEMICOLON       reduce using rule 98 (exp -> termino exp1 .)
    TO              reduce using rule 98 (exp -> termino exp1 .)
    DO              reduce using rule 98 (exp -> termino exp1 .)


state 88

    (99) exp1 -> PLUS . exp
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 152
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 89

    (100) exp1 -> MINUS . exp
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 153
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 90

    (101) exp1 -> epsilon .

    CLOSEBOX        reduce using rule 101 (exp1 -> epsilon .)
    LT              reduce using rule 101 (exp1 -> epsilon .)
    LE              reduce using rule 101 (exp1 -> epsilon .)
    GT              reduce using rule 101 (exp1 -> epsilon .)
    GE              reduce using rule 101 (exp1 -> epsilon .)
    EQ              reduce using rule 101 (exp1 -> epsilon .)
    NE              reduce using rule 101 (exp1 -> epsilon .)
    AND             reduce using rule 101 (exp1 -> epsilon .)
    OR              reduce using rule 101 (exp1 -> epsilon .)
    ID              reduce using rule 101 (exp1 -> epsilon .)
    RETURN          reduce using rule 101 (exp1 -> epsilon .)
    READ            reduce using rule 101 (exp1 -> epsilon .)
    WRITE           reduce using rule 101 (exp1 -> epsilon .)
    IF              reduce using rule 101 (exp1 -> epsilon .)
    WHILE           reduce using rule 101 (exp1 -> epsilon .)
    FOR             reduce using rule 101 (exp1 -> epsilon .)
    OPENPAR         reduce using rule 101 (exp1 -> epsilon .)
    PLUS            reduce using rule 101 (exp1 -> epsilon .)
    MINUS           reduce using rule 101 (exp1 -> epsilon .)
    INT             reduce using rule 101 (exp1 -> epsilon .)
    FLOAT           reduce using rule 101 (exp1 -> epsilon .)
    CHAR            reduce using rule 101 (exp1 -> epsilon .)
    CLOSECURLY      reduce using rule 101 (exp1 -> epsilon .)
    CLOSEPAR        reduce using rule 101 (exp1 -> epsilon .)
    COMMA           reduce using rule 101 (exp1 -> epsilon .)
    SEMICOLON       reduce using rule 101 (exp1 -> epsilon .)
    TO              reduce using rule 101 (exp1 -> epsilon .)
    DO              reduce using rule 101 (exp1 -> epsilon .)


state 91

    (102) termino -> factor termino1 .

    PLUS            reduce using rule 102 (termino -> factor termino1 .)
    MINUS           reduce using rule 102 (termino -> factor termino1 .)
    CLOSEBOX        reduce using rule 102 (termino -> factor termino1 .)
    LT              reduce using rule 102 (termino -> factor termino1 .)
    LE              reduce using rule 102 (termino -> factor termino1 .)
    GT              reduce using rule 102 (termino -> factor termino1 .)
    GE              reduce using rule 102 (termino -> factor termino1 .)
    EQ              reduce using rule 102 (termino -> factor termino1 .)
    NE              reduce using rule 102 (termino -> factor termino1 .)
    AND             reduce using rule 102 (termino -> factor termino1 .)
    OR              reduce using rule 102 (termino -> factor termino1 .)
    ID              reduce using rule 102 (termino -> factor termino1 .)
    RETURN          reduce using rule 102 (termino -> factor termino1 .)
    READ            reduce using rule 102 (termino -> factor termino1 .)
    WRITE           reduce using rule 102 (termino -> factor termino1 .)
    IF              reduce using rule 102 (termino -> factor termino1 .)
    WHILE           reduce using rule 102 (termino -> factor termino1 .)
    FOR             reduce using rule 102 (termino -> factor termino1 .)
    OPENPAR         reduce using rule 102 (termino -> factor termino1 .)
    INT             reduce using rule 102 (termino -> factor termino1 .)
    FLOAT           reduce using rule 102 (termino -> factor termino1 .)
    CHAR            reduce using rule 102 (termino -> factor termino1 .)
    CLOSECURLY      reduce using rule 102 (termino -> factor termino1 .)
    CLOSEPAR        reduce using rule 102 (termino -> factor termino1 .)
    COMMA           reduce using rule 102 (termino -> factor termino1 .)
    SEMICOLON       reduce using rule 102 (termino -> factor termino1 .)
    TO              reduce using rule 102 (termino -> factor termino1 .)
    DO              reduce using rule 102 (termino -> factor termino1 .)


state 92

    (103) termino1 -> MULTIPLY . termino
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    termino                        shift and go to state 154
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 93

    (104) termino1 -> DIVIDE . termino
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    termino                        shift and go to state 155
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 94

    (105) termino1 -> MODULO . termino
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    termino                        shift and go to state 156
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 95

    (106) termino1 -> epsilon .

    PLUS            reduce using rule 106 (termino1 -> epsilon .)
    MINUS           reduce using rule 106 (termino1 -> epsilon .)
    CLOSEBOX        reduce using rule 106 (termino1 -> epsilon .)
    LT              reduce using rule 106 (termino1 -> epsilon .)
    LE              reduce using rule 106 (termino1 -> epsilon .)
    GT              reduce using rule 106 (termino1 -> epsilon .)
    GE              reduce using rule 106 (termino1 -> epsilon .)
    EQ              reduce using rule 106 (termino1 -> epsilon .)
    NE              reduce using rule 106 (termino1 -> epsilon .)
    AND             reduce using rule 106 (termino1 -> epsilon .)
    OR              reduce using rule 106 (termino1 -> epsilon .)
    ID              reduce using rule 106 (termino1 -> epsilon .)
    RETURN          reduce using rule 106 (termino1 -> epsilon .)
    READ            reduce using rule 106 (termino1 -> epsilon .)
    WRITE           reduce using rule 106 (termino1 -> epsilon .)
    IF              reduce using rule 106 (termino1 -> epsilon .)
    WHILE           reduce using rule 106 (termino1 -> epsilon .)
    FOR             reduce using rule 106 (termino1 -> epsilon .)
    OPENPAR         reduce using rule 106 (termino1 -> epsilon .)
    INT             reduce using rule 106 (termino1 -> epsilon .)
    FLOAT           reduce using rule 106 (termino1 -> epsilon .)
    CHAR            reduce using rule 106 (termino1 -> epsilon .)
    CLOSECURLY      reduce using rule 106 (termino1 -> epsilon .)
    CLOSEPAR        reduce using rule 106 (termino1 -> epsilon .)
    COMMA           reduce using rule 106 (termino1 -> epsilon .)
    SEMICOLON       reduce using rule 106 (termino1 -> epsilon .)
    TO              reduce using rule 106 (termino1 -> epsilon .)
    DO              reduce using rule 106 (termino1 -> epsilon .)


state 96

    (107) factor -> ID factor1 .

    MULTIPLY        reduce using rule 107 (factor -> ID factor1 .)
    DIVIDE          reduce using rule 107 (factor -> ID factor1 .)
    MODULO          reduce using rule 107 (factor -> ID factor1 .)
    PLUS            reduce using rule 107 (factor -> ID factor1 .)
    MINUS           reduce using rule 107 (factor -> ID factor1 .)
    CLOSEBOX        reduce using rule 107 (factor -> ID factor1 .)
    LT              reduce using rule 107 (factor -> ID factor1 .)
    LE              reduce using rule 107 (factor -> ID factor1 .)
    GT              reduce using rule 107 (factor -> ID factor1 .)
    GE              reduce using rule 107 (factor -> ID factor1 .)
    EQ              reduce using rule 107 (factor -> ID factor1 .)
    NE              reduce using rule 107 (factor -> ID factor1 .)
    AND             reduce using rule 107 (factor -> ID factor1 .)
    OR              reduce using rule 107 (factor -> ID factor1 .)
    ID              reduce using rule 107 (factor -> ID factor1 .)
    RETURN          reduce using rule 107 (factor -> ID factor1 .)
    READ            reduce using rule 107 (factor -> ID factor1 .)
    WRITE           reduce using rule 107 (factor -> ID factor1 .)
    IF              reduce using rule 107 (factor -> ID factor1 .)
    WHILE           reduce using rule 107 (factor -> ID factor1 .)
    FOR             reduce using rule 107 (factor -> ID factor1 .)
    OPENPAR         reduce using rule 107 (factor -> ID factor1 .)
    INT             reduce using rule 107 (factor -> ID factor1 .)
    FLOAT           reduce using rule 107 (factor -> ID factor1 .)
    CHAR            reduce using rule 107 (factor -> ID factor1 .)
    CLOSECURLY      reduce using rule 107 (factor -> ID factor1 .)
    CLOSEPAR        reduce using rule 107 (factor -> ID factor1 .)
    COMMA           reduce using rule 107 (factor -> ID factor1 .)
    SEMICOLON       reduce using rule 107 (factor -> ID factor1 .)
    TO              reduce using rule 107 (factor -> ID factor1 .)
    DO              reduce using rule 107 (factor -> ID factor1 .)


state 97

    (55) funcion -> ID OPENPAR . funcion1
    (56) funcion1 -> . exp funcion2
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    funcion1                       shift and go to state 157
    exp                            shift and go to state 158
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 98

    (111) factor1 -> OPENBOX . exp CLOSEBOX
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 159
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 99

    (112) factor1 -> epsilon .

    MULTIPLY        reduce using rule 112 (factor1 -> epsilon .)
    DIVIDE          reduce using rule 112 (factor1 -> epsilon .)
    MODULO          reduce using rule 112 (factor1 -> epsilon .)
    PLUS            reduce using rule 112 (factor1 -> epsilon .)
    MINUS           reduce using rule 112 (factor1 -> epsilon .)
    CLOSEBOX        reduce using rule 112 (factor1 -> epsilon .)
    LT              reduce using rule 112 (factor1 -> epsilon .)
    LE              reduce using rule 112 (factor1 -> epsilon .)
    GT              reduce using rule 112 (factor1 -> epsilon .)
    GE              reduce using rule 112 (factor1 -> epsilon .)
    EQ              reduce using rule 112 (factor1 -> epsilon .)
    NE              reduce using rule 112 (factor1 -> epsilon .)
    AND             reduce using rule 112 (factor1 -> epsilon .)
    OR              reduce using rule 112 (factor1 -> epsilon .)
    CLOSEPAR        reduce using rule 112 (factor1 -> epsilon .)
    ID              reduce using rule 112 (factor1 -> epsilon .)
    RETURN          reduce using rule 112 (factor1 -> epsilon .)
    READ            reduce using rule 112 (factor1 -> epsilon .)
    WRITE           reduce using rule 112 (factor1 -> epsilon .)
    IF              reduce using rule 112 (factor1 -> epsilon .)
    WHILE           reduce using rule 112 (factor1 -> epsilon .)
    FOR             reduce using rule 112 (factor1 -> epsilon .)
    OPENPAR         reduce using rule 112 (factor1 -> epsilon .)
    INT             reduce using rule 112 (factor1 -> epsilon .)
    FLOAT           reduce using rule 112 (factor1 -> epsilon .)
    CHAR            reduce using rule 112 (factor1 -> epsilon .)
    CLOSECURLY      reduce using rule 112 (factor1 -> epsilon .)
    COMMA           reduce using rule 112 (factor1 -> epsilon .)
    SEMICOLON       reduce using rule 112 (factor1 -> epsilon .)
    TO              reduce using rule 112 (factor1 -> epsilon .)
    DO              reduce using rule 112 (factor1 -> epsilon .)


state 100

    (108) factor -> OPENPAR expresion . CLOSEPAR

    CLOSEPAR        shift and go to state 160


state 101

    (110) factor -> factor2 varcte .

    MULTIPLY        reduce using rule 110 (factor -> factor2 varcte .)
    DIVIDE          reduce using rule 110 (factor -> factor2 varcte .)
    MODULO          reduce using rule 110 (factor -> factor2 varcte .)
    PLUS            reduce using rule 110 (factor -> factor2 varcte .)
    MINUS           reduce using rule 110 (factor -> factor2 varcte .)
    CLOSEBOX        reduce using rule 110 (factor -> factor2 varcte .)
    LT              reduce using rule 110 (factor -> factor2 varcte .)
    LE              reduce using rule 110 (factor -> factor2 varcte .)
    GT              reduce using rule 110 (factor -> factor2 varcte .)
    GE              reduce using rule 110 (factor -> factor2 varcte .)
    EQ              reduce using rule 110 (factor -> factor2 varcte .)
    NE              reduce using rule 110 (factor -> factor2 varcte .)
    AND             reduce using rule 110 (factor -> factor2 varcte .)
    OR              reduce using rule 110 (factor -> factor2 varcte .)
    ID              reduce using rule 110 (factor -> factor2 varcte .)
    RETURN          reduce using rule 110 (factor -> factor2 varcte .)
    READ            reduce using rule 110 (factor -> factor2 varcte .)
    WRITE           reduce using rule 110 (factor -> factor2 varcte .)
    IF              reduce using rule 110 (factor -> factor2 varcte .)
    WHILE           reduce using rule 110 (factor -> factor2 varcte .)
    FOR             reduce using rule 110 (factor -> factor2 varcte .)
    OPENPAR         reduce using rule 110 (factor -> factor2 varcte .)
    INT             reduce using rule 110 (factor -> factor2 varcte .)
    FLOAT           reduce using rule 110 (factor -> factor2 varcte .)
    CHAR            reduce using rule 110 (factor -> factor2 varcte .)
    CLOSECURLY      reduce using rule 110 (factor -> factor2 varcte .)
    CLOSEPAR        reduce using rule 110 (factor -> factor2 varcte .)
    COMMA           reduce using rule 110 (factor -> factor2 varcte .)
    SEMICOLON       reduce using rule 110 (factor -> factor2 varcte .)
    TO              reduce using rule 110 (factor -> factor2 varcte .)
    DO              reduce using rule 110 (factor -> factor2 varcte .)


state 102

    (116) varcte -> ID .

    MULTIPLY        reduce using rule 116 (varcte -> ID .)
    DIVIDE          reduce using rule 116 (varcte -> ID .)
    MODULO          reduce using rule 116 (varcte -> ID .)
    PLUS            reduce using rule 116 (varcte -> ID .)
    MINUS           reduce using rule 116 (varcte -> ID .)
    CLOSEBOX        reduce using rule 116 (varcte -> ID .)
    LT              reduce using rule 116 (varcte -> ID .)
    LE              reduce using rule 116 (varcte -> ID .)
    GT              reduce using rule 116 (varcte -> ID .)
    GE              reduce using rule 116 (varcte -> ID .)
    EQ              reduce using rule 116 (varcte -> ID .)
    NE              reduce using rule 116 (varcte -> ID .)
    AND             reduce using rule 116 (varcte -> ID .)
    OR              reduce using rule 116 (varcte -> ID .)
    ID              reduce using rule 116 (varcte -> ID .)
    RETURN          reduce using rule 116 (varcte -> ID .)
    READ            reduce using rule 116 (varcte -> ID .)
    WRITE           reduce using rule 116 (varcte -> ID .)
    IF              reduce using rule 116 (varcte -> ID .)
    WHILE           reduce using rule 116 (varcte -> ID .)
    FOR             reduce using rule 116 (varcte -> ID .)
    OPENPAR         reduce using rule 116 (varcte -> ID .)
    INT             reduce using rule 116 (varcte -> ID .)
    FLOAT           reduce using rule 116 (varcte -> ID .)
    CHAR            reduce using rule 116 (varcte -> ID .)
    CLOSECURLY      reduce using rule 116 (varcte -> ID .)
    CLOSEPAR        reduce using rule 116 (varcte -> ID .)
    COMMA           reduce using rule 116 (varcte -> ID .)
    SEMICOLON       reduce using rule 116 (varcte -> ID .)
    TO              reduce using rule 116 (varcte -> ID .)
    DO              reduce using rule 116 (varcte -> ID .)


state 103

    (117) varcte -> INT .

    MULTIPLY        reduce using rule 117 (varcte -> INT .)
    DIVIDE          reduce using rule 117 (varcte -> INT .)
    MODULO          reduce using rule 117 (varcte -> INT .)
    PLUS            reduce using rule 117 (varcte -> INT .)
    MINUS           reduce using rule 117 (varcte -> INT .)
    CLOSEBOX        reduce using rule 117 (varcte -> INT .)
    LT              reduce using rule 117 (varcte -> INT .)
    LE              reduce using rule 117 (varcte -> INT .)
    GT              reduce using rule 117 (varcte -> INT .)
    GE              reduce using rule 117 (varcte -> INT .)
    EQ              reduce using rule 117 (varcte -> INT .)
    NE              reduce using rule 117 (varcte -> INT .)
    AND             reduce using rule 117 (varcte -> INT .)
    OR              reduce using rule 117 (varcte -> INT .)
    ID              reduce using rule 117 (varcte -> INT .)
    RETURN          reduce using rule 117 (varcte -> INT .)
    READ            reduce using rule 117 (varcte -> INT .)
    WRITE           reduce using rule 117 (varcte -> INT .)
    IF              reduce using rule 117 (varcte -> INT .)
    WHILE           reduce using rule 117 (varcte -> INT .)
    FOR             reduce using rule 117 (varcte -> INT .)
    OPENPAR         reduce using rule 117 (varcte -> INT .)
    INT             reduce using rule 117 (varcte -> INT .)
    FLOAT           reduce using rule 117 (varcte -> INT .)
    CHAR            reduce using rule 117 (varcte -> INT .)
    CLOSECURLY      reduce using rule 117 (varcte -> INT .)
    CLOSEPAR        reduce using rule 117 (varcte -> INT .)
    COMMA           reduce using rule 117 (varcte -> INT .)
    SEMICOLON       reduce using rule 117 (varcte -> INT .)
    TO              reduce using rule 117 (varcte -> INT .)
    DO              reduce using rule 117 (varcte -> INT .)


state 104

    (118) varcte -> FLOAT .

    MULTIPLY        reduce using rule 118 (varcte -> FLOAT .)
    DIVIDE          reduce using rule 118 (varcte -> FLOAT .)
    MODULO          reduce using rule 118 (varcte -> FLOAT .)
    PLUS            reduce using rule 118 (varcte -> FLOAT .)
    MINUS           reduce using rule 118 (varcte -> FLOAT .)
    CLOSEBOX        reduce using rule 118 (varcte -> FLOAT .)
    LT              reduce using rule 118 (varcte -> FLOAT .)
    LE              reduce using rule 118 (varcte -> FLOAT .)
    GT              reduce using rule 118 (varcte -> FLOAT .)
    GE              reduce using rule 118 (varcte -> FLOAT .)
    EQ              reduce using rule 118 (varcte -> FLOAT .)
    NE              reduce using rule 118 (varcte -> FLOAT .)
    AND             reduce using rule 118 (varcte -> FLOAT .)
    OR              reduce using rule 118 (varcte -> FLOAT .)
    ID              reduce using rule 118 (varcte -> FLOAT .)
    RETURN          reduce using rule 118 (varcte -> FLOAT .)
    READ            reduce using rule 118 (varcte -> FLOAT .)
    WRITE           reduce using rule 118 (varcte -> FLOAT .)
    IF              reduce using rule 118 (varcte -> FLOAT .)
    WHILE           reduce using rule 118 (varcte -> FLOAT .)
    FOR             reduce using rule 118 (varcte -> FLOAT .)
    OPENPAR         reduce using rule 118 (varcte -> FLOAT .)
    INT             reduce using rule 118 (varcte -> FLOAT .)
    FLOAT           reduce using rule 118 (varcte -> FLOAT .)
    CHAR            reduce using rule 118 (varcte -> FLOAT .)
    CLOSECURLY      reduce using rule 118 (varcte -> FLOAT .)
    CLOSEPAR        reduce using rule 118 (varcte -> FLOAT .)
    COMMA           reduce using rule 118 (varcte -> FLOAT .)
    SEMICOLON       reduce using rule 118 (varcte -> FLOAT .)
    TO              reduce using rule 118 (varcte -> FLOAT .)
    DO              reduce using rule 118 (varcte -> FLOAT .)


state 105

    (119) varcte -> CHAR .

    MULTIPLY        reduce using rule 119 (varcte -> CHAR .)
    DIVIDE          reduce using rule 119 (varcte -> CHAR .)
    MODULO          reduce using rule 119 (varcte -> CHAR .)
    PLUS            reduce using rule 119 (varcte -> CHAR .)
    MINUS           reduce using rule 119 (varcte -> CHAR .)
    CLOSEBOX        reduce using rule 119 (varcte -> CHAR .)
    LT              reduce using rule 119 (varcte -> CHAR .)
    LE              reduce using rule 119 (varcte -> CHAR .)
    GT              reduce using rule 119 (varcte -> CHAR .)
    GE              reduce using rule 119 (varcte -> CHAR .)
    EQ              reduce using rule 119 (varcte -> CHAR .)
    NE              reduce using rule 119 (varcte -> CHAR .)
    AND             reduce using rule 119 (varcte -> CHAR .)
    OR              reduce using rule 119 (varcte -> CHAR .)
    ID              reduce using rule 119 (varcte -> CHAR .)
    RETURN          reduce using rule 119 (varcte -> CHAR .)
    READ            reduce using rule 119 (varcte -> CHAR .)
    WRITE           reduce using rule 119 (varcte -> CHAR .)
    IF              reduce using rule 119 (varcte -> CHAR .)
    WHILE           reduce using rule 119 (varcte -> CHAR .)
    FOR             reduce using rule 119 (varcte -> CHAR .)
    OPENPAR         reduce using rule 119 (varcte -> CHAR .)
    INT             reduce using rule 119 (varcte -> CHAR .)
    FLOAT           reduce using rule 119 (varcte -> CHAR .)
    CHAR            reduce using rule 119 (varcte -> CHAR .)
    CLOSECURLY      reduce using rule 119 (varcte -> CHAR .)
    CLOSEPAR        reduce using rule 119 (varcte -> CHAR .)
    COMMA           reduce using rule 119 (varcte -> CHAR .)
    SEMICOLON       reduce using rule 119 (varcte -> CHAR .)
    TO              reduce using rule 119 (varcte -> CHAR .)
    DO              reduce using rule 119 (varcte -> CHAR .)


state 106

    (51) asignacion -> ID asignacion1 . IS expresion SEMICOLON

    IS              shift and go to state 161


state 107

    (52) asignacion1 -> OPENBOX . exp CLOSEBOX
    (111) factor1 -> OPENBOX . exp CLOSEBOX
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 162
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 108

    (53) asignacion1 -> epsilon .
    (112) factor1 -> epsilon .

    IS              reduce using rule 53 (asignacion1 -> epsilon .)
    MULTIPLY        reduce using rule 112 (factor1 -> epsilon .)
    DIVIDE          reduce using rule 112 (factor1 -> epsilon .)
    MODULO          reduce using rule 112 (factor1 -> epsilon .)
    PLUS            reduce using rule 112 (factor1 -> epsilon .)
    MINUS           reduce using rule 112 (factor1 -> epsilon .)
    LT              reduce using rule 112 (factor1 -> epsilon .)
    LE              reduce using rule 112 (factor1 -> epsilon .)
    GT              reduce using rule 112 (factor1 -> epsilon .)
    GE              reduce using rule 112 (factor1 -> epsilon .)
    EQ              reduce using rule 112 (factor1 -> epsilon .)
    NE              reduce using rule 112 (factor1 -> epsilon .)
    AND             reduce using rule 112 (factor1 -> epsilon .)
    OR              reduce using rule 112 (factor1 -> epsilon .)
    ID              reduce using rule 112 (factor1 -> epsilon .)
    RETURN          reduce using rule 112 (factor1 -> epsilon .)
    READ            reduce using rule 112 (factor1 -> epsilon .)
    WRITE           reduce using rule 112 (factor1 -> epsilon .)
    IF              reduce using rule 112 (factor1 -> epsilon .)
    WHILE           reduce using rule 112 (factor1 -> epsilon .)
    FOR             reduce using rule 112 (factor1 -> epsilon .)
    OPENPAR         reduce using rule 112 (factor1 -> epsilon .)
    INT             reduce using rule 112 (factor1 -> epsilon .)
    FLOAT           reduce using rule 112 (factor1 -> epsilon .)
    CHAR            reduce using rule 112 (factor1 -> epsilon .)
    CLOSECURLY      reduce using rule 112 (factor1 -> epsilon .)


state 109

    (1) programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa1 programa2 MAIN OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY .)


state 110

    (40) estatutos -> asignacion estatutos1 .

    CLOSECURLY      reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    ID              reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    RETURN          reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    READ            reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    WRITE           reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    IF              reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    WHILE           reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    FOR             reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    OPENPAR         reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    PLUS            reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    MINUS           reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    INT             reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    FLOAT           reduce using rule 40 (estatutos -> asignacion estatutos1 .)
    CHAR            reduce using rule 40 (estatutos -> asignacion estatutos1 .)


state 111

    (49) estatutos1 -> estatutos .

    CLOSECURLY      reduce using rule 49 (estatutos1 -> estatutos .)
    ID              reduce using rule 49 (estatutos1 -> estatutos .)
    RETURN          reduce using rule 49 (estatutos1 -> estatutos .)
    READ            reduce using rule 49 (estatutos1 -> estatutos .)
    WRITE           reduce using rule 49 (estatutos1 -> estatutos .)
    IF              reduce using rule 49 (estatutos1 -> estatutos .)
    WHILE           reduce using rule 49 (estatutos1 -> estatutos .)
    FOR             reduce using rule 49 (estatutos1 -> estatutos .)
    OPENPAR         reduce using rule 49 (estatutos1 -> estatutos .)
    PLUS            reduce using rule 49 (estatutos1 -> estatutos .)
    MINUS           reduce using rule 49 (estatutos1 -> estatutos .)
    INT             reduce using rule 49 (estatutos1 -> estatutos .)
    FLOAT           reduce using rule 49 (estatutos1 -> estatutos .)
    CHAR            reduce using rule 49 (estatutos1 -> estatutos .)


state 112

    (50) estatutos1 -> epsilon .
    (115) factor2 -> epsilon .

  ! reduce/reduce conflict for ID resolved using rule 50 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for INT resolved using rule 50 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for FLOAT resolved using rule 50 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for CHAR resolved using rule 50 (estatutos1 -> epsilon .)
    CLOSECURLY      reduce using rule 50 (estatutos1 -> epsilon .)
    ID              reduce using rule 50 (estatutos1 -> epsilon .)
    RETURN          reduce using rule 50 (estatutos1 -> epsilon .)
    READ            reduce using rule 50 (estatutos1 -> epsilon .)
    WRITE           reduce using rule 50 (estatutos1 -> epsilon .)
    IF              reduce using rule 50 (estatutos1 -> epsilon .)
    WHILE           reduce using rule 50 (estatutos1 -> epsilon .)
    FOR             reduce using rule 50 (estatutos1 -> epsilon .)
    OPENPAR         reduce using rule 50 (estatutos1 -> epsilon .)
    PLUS            reduce using rule 50 (estatutos1 -> epsilon .)
    MINUS           reduce using rule 50 (estatutos1 -> epsilon .)
    INT             reduce using rule 50 (estatutos1 -> epsilon .)
    FLOAT           reduce using rule 50 (estatutos1 -> epsilon .)
    CHAR            reduce using rule 50 (estatutos1 -> epsilon .)

  ! ID              [ reduce using rule 115 (factor2 -> epsilon .) ]
  ! INT             [ reduce using rule 115 (factor2 -> epsilon .) ]
  ! FLOAT           [ reduce using rule 115 (factor2 -> epsilon .) ]
  ! CHAR            [ reduce using rule 115 (factor2 -> epsilon .) ]


state 113

    (41) estatutos -> llamada estatutos1 .

    CLOSECURLY      reduce using rule 41 (estatutos -> llamada estatutos1 .)
    ID              reduce using rule 41 (estatutos -> llamada estatutos1 .)
    RETURN          reduce using rule 41 (estatutos -> llamada estatutos1 .)
    READ            reduce using rule 41 (estatutos -> llamada estatutos1 .)
    WRITE           reduce using rule 41 (estatutos -> llamada estatutos1 .)
    IF              reduce using rule 41 (estatutos -> llamada estatutos1 .)
    WHILE           reduce using rule 41 (estatutos -> llamada estatutos1 .)
    FOR             reduce using rule 41 (estatutos -> llamada estatutos1 .)
    OPENPAR         reduce using rule 41 (estatutos -> llamada estatutos1 .)
    PLUS            reduce using rule 41 (estatutos -> llamada estatutos1 .)
    MINUS           reduce using rule 41 (estatutos -> llamada estatutos1 .)
    INT             reduce using rule 41 (estatutos -> llamada estatutos1 .)
    FLOAT           reduce using rule 41 (estatutos -> llamada estatutos1 .)
    CHAR            reduce using rule 41 (estatutos -> llamada estatutos1 .)


state 114

    (42) estatutos -> retorno estatutos1 .

    CLOSECURLY      reduce using rule 42 (estatutos -> retorno estatutos1 .)
    ID              reduce using rule 42 (estatutos -> retorno estatutos1 .)
    RETURN          reduce using rule 42 (estatutos -> retorno estatutos1 .)
    READ            reduce using rule 42 (estatutos -> retorno estatutos1 .)
    WRITE           reduce using rule 42 (estatutos -> retorno estatutos1 .)
    IF              reduce using rule 42 (estatutos -> retorno estatutos1 .)
    WHILE           reduce using rule 42 (estatutos -> retorno estatutos1 .)
    FOR             reduce using rule 42 (estatutos -> retorno estatutos1 .)
    OPENPAR         reduce using rule 42 (estatutos -> retorno estatutos1 .)
    PLUS            reduce using rule 42 (estatutos -> retorno estatutos1 .)
    MINUS           reduce using rule 42 (estatutos -> retorno estatutos1 .)
    INT             reduce using rule 42 (estatutos -> retorno estatutos1 .)
    FLOAT           reduce using rule 42 (estatutos -> retorno estatutos1 .)
    CHAR            reduce using rule 42 (estatutos -> retorno estatutos1 .)


state 115

    (43) estatutos -> lectura estatutos1 .

    CLOSECURLY      reduce using rule 43 (estatutos -> lectura estatutos1 .)
    ID              reduce using rule 43 (estatutos -> lectura estatutos1 .)
    RETURN          reduce using rule 43 (estatutos -> lectura estatutos1 .)
    READ            reduce using rule 43 (estatutos -> lectura estatutos1 .)
    WRITE           reduce using rule 43 (estatutos -> lectura estatutos1 .)
    IF              reduce using rule 43 (estatutos -> lectura estatutos1 .)
    WHILE           reduce using rule 43 (estatutos -> lectura estatutos1 .)
    FOR             reduce using rule 43 (estatutos -> lectura estatutos1 .)
    OPENPAR         reduce using rule 43 (estatutos -> lectura estatutos1 .)
    PLUS            reduce using rule 43 (estatutos -> lectura estatutos1 .)
    MINUS           reduce using rule 43 (estatutos -> lectura estatutos1 .)
    INT             reduce using rule 43 (estatutos -> lectura estatutos1 .)
    FLOAT           reduce using rule 43 (estatutos -> lectura estatutos1 .)
    CHAR            reduce using rule 43 (estatutos -> lectura estatutos1 .)


state 116

    (44) estatutos -> escritura estatutos1 .

    CLOSECURLY      reduce using rule 44 (estatutos -> escritura estatutos1 .)
    ID              reduce using rule 44 (estatutos -> escritura estatutos1 .)
    RETURN          reduce using rule 44 (estatutos -> escritura estatutos1 .)
    READ            reduce using rule 44 (estatutos -> escritura estatutos1 .)
    WRITE           reduce using rule 44 (estatutos -> escritura estatutos1 .)
    IF              reduce using rule 44 (estatutos -> escritura estatutos1 .)
    WHILE           reduce using rule 44 (estatutos -> escritura estatutos1 .)
    FOR             reduce using rule 44 (estatutos -> escritura estatutos1 .)
    OPENPAR         reduce using rule 44 (estatutos -> escritura estatutos1 .)
    PLUS            reduce using rule 44 (estatutos -> escritura estatutos1 .)
    MINUS           reduce using rule 44 (estatutos -> escritura estatutos1 .)
    INT             reduce using rule 44 (estatutos -> escritura estatutos1 .)
    FLOAT           reduce using rule 44 (estatutos -> escritura estatutos1 .)
    CHAR            reduce using rule 44 (estatutos -> escritura estatutos1 .)


state 117

    (45) estatutos -> condicion estatutos1 .

    CLOSECURLY      reduce using rule 45 (estatutos -> condicion estatutos1 .)
    ID              reduce using rule 45 (estatutos -> condicion estatutos1 .)
    RETURN          reduce using rule 45 (estatutos -> condicion estatutos1 .)
    READ            reduce using rule 45 (estatutos -> condicion estatutos1 .)
    WRITE           reduce using rule 45 (estatutos -> condicion estatutos1 .)
    IF              reduce using rule 45 (estatutos -> condicion estatutos1 .)
    WHILE           reduce using rule 45 (estatutos -> condicion estatutos1 .)
    FOR             reduce using rule 45 (estatutos -> condicion estatutos1 .)
    OPENPAR         reduce using rule 45 (estatutos -> condicion estatutos1 .)
    PLUS            reduce using rule 45 (estatutos -> condicion estatutos1 .)
    MINUS           reduce using rule 45 (estatutos -> condicion estatutos1 .)
    INT             reduce using rule 45 (estatutos -> condicion estatutos1 .)
    FLOAT           reduce using rule 45 (estatutos -> condicion estatutos1 .)
    CHAR            reduce using rule 45 (estatutos -> condicion estatutos1 .)


state 118

    (46) estatutos -> while estatutos1 .

    CLOSECURLY      reduce using rule 46 (estatutos -> while estatutos1 .)
    ID              reduce using rule 46 (estatutos -> while estatutos1 .)
    RETURN          reduce using rule 46 (estatutos -> while estatutos1 .)
    READ            reduce using rule 46 (estatutos -> while estatutos1 .)
    WRITE           reduce using rule 46 (estatutos -> while estatutos1 .)
    IF              reduce using rule 46 (estatutos -> while estatutos1 .)
    WHILE           reduce using rule 46 (estatutos -> while estatutos1 .)
    FOR             reduce using rule 46 (estatutos -> while estatutos1 .)
    OPENPAR         reduce using rule 46 (estatutos -> while estatutos1 .)
    PLUS            reduce using rule 46 (estatutos -> while estatutos1 .)
    MINUS           reduce using rule 46 (estatutos -> while estatutos1 .)
    INT             reduce using rule 46 (estatutos -> while estatutos1 .)
    FLOAT           reduce using rule 46 (estatutos -> while estatutos1 .)
    CHAR            reduce using rule 46 (estatutos -> while estatutos1 .)


state 119

    (47) estatutos -> for estatutos1 .

    CLOSECURLY      reduce using rule 47 (estatutos -> for estatutos1 .)
    ID              reduce using rule 47 (estatutos -> for estatutos1 .)
    RETURN          reduce using rule 47 (estatutos -> for estatutos1 .)
    READ            reduce using rule 47 (estatutos -> for estatutos1 .)
    WRITE           reduce using rule 47 (estatutos -> for estatutos1 .)
    IF              reduce using rule 47 (estatutos -> for estatutos1 .)
    WHILE           reduce using rule 47 (estatutos -> for estatutos1 .)
    FOR             reduce using rule 47 (estatutos -> for estatutos1 .)
    OPENPAR         reduce using rule 47 (estatutos -> for estatutos1 .)
    PLUS            reduce using rule 47 (estatutos -> for estatutos1 .)
    MINUS           reduce using rule 47 (estatutos -> for estatutos1 .)
    INT             reduce using rule 47 (estatutos -> for estatutos1 .)
    FLOAT           reduce using rule 47 (estatutos -> for estatutos1 .)
    CHAR            reduce using rule 47 (estatutos -> for estatutos1 .)


state 120

    (48) estatutos -> expresion estatutos1 .

    CLOSECURLY      reduce using rule 48 (estatutos -> expresion estatutos1 .)
    ID              reduce using rule 48 (estatutos -> expresion estatutos1 .)
    RETURN          reduce using rule 48 (estatutos -> expresion estatutos1 .)
    READ            reduce using rule 48 (estatutos -> expresion estatutos1 .)
    WRITE           reduce using rule 48 (estatutos -> expresion estatutos1 .)
    IF              reduce using rule 48 (estatutos -> expresion estatutos1 .)
    WHILE           reduce using rule 48 (estatutos -> expresion estatutos1 .)
    FOR             reduce using rule 48 (estatutos -> expresion estatutos1 .)
    OPENPAR         reduce using rule 48 (estatutos -> expresion estatutos1 .)
    PLUS            reduce using rule 48 (estatutos -> expresion estatutos1 .)
    MINUS           reduce using rule 48 (estatutos -> expresion estatutos1 .)
    INT             reduce using rule 48 (estatutos -> expresion estatutos1 .)
    FLOAT           reduce using rule 48 (estatutos -> expresion estatutos1 .)
    CHAR            reduce using rule 48 (estatutos -> expresion estatutos1 .)


state 121

    (54) llamada -> funcion SEMICOLON .

    ID              reduce using rule 54 (llamada -> funcion SEMICOLON .)
    RETURN          reduce using rule 54 (llamada -> funcion SEMICOLON .)
    READ            reduce using rule 54 (llamada -> funcion SEMICOLON .)
    WRITE           reduce using rule 54 (llamada -> funcion SEMICOLON .)
    IF              reduce using rule 54 (llamada -> funcion SEMICOLON .)
    WHILE           reduce using rule 54 (llamada -> funcion SEMICOLON .)
    FOR             reduce using rule 54 (llamada -> funcion SEMICOLON .)
    OPENPAR         reduce using rule 54 (llamada -> funcion SEMICOLON .)
    PLUS            reduce using rule 54 (llamada -> funcion SEMICOLON .)
    MINUS           reduce using rule 54 (llamada -> funcion SEMICOLON .)
    INT             reduce using rule 54 (llamada -> funcion SEMICOLON .)
    FLOAT           reduce using rule 54 (llamada -> funcion SEMICOLON .)
    CHAR            reduce using rule 54 (llamada -> funcion SEMICOLON .)
    CLOSECURLY      reduce using rule 54 (llamada -> funcion SEMICOLON .)


state 122

    (59) retorno -> RETURN OPENPAR . exp CLOSEPAR SEMICOLON
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 163
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 123

    (92) compare -> exp compare1 .

    EQ              reduce using rule 92 (compare -> exp compare1 .)
    NE              reduce using rule 92 (compare -> exp compare1 .)
    AND             reduce using rule 92 (compare -> exp compare1 .)
    OR              reduce using rule 92 (compare -> exp compare1 .)
    ID              reduce using rule 92 (compare -> exp compare1 .)
    RETURN          reduce using rule 92 (compare -> exp compare1 .)
    READ            reduce using rule 92 (compare -> exp compare1 .)
    WRITE           reduce using rule 92 (compare -> exp compare1 .)
    IF              reduce using rule 92 (compare -> exp compare1 .)
    WHILE           reduce using rule 92 (compare -> exp compare1 .)
    FOR             reduce using rule 92 (compare -> exp compare1 .)
    OPENPAR         reduce using rule 92 (compare -> exp compare1 .)
    PLUS            reduce using rule 92 (compare -> exp compare1 .)
    MINUS           reduce using rule 92 (compare -> exp compare1 .)
    INT             reduce using rule 92 (compare -> exp compare1 .)
    FLOAT           reduce using rule 92 (compare -> exp compare1 .)
    CHAR            reduce using rule 92 (compare -> exp compare1 .)
    CLOSECURLY      reduce using rule 92 (compare -> exp compare1 .)
    CLOSEPAR        reduce using rule 92 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 92 (compare -> exp compare1 .)


state 124

    (93) compare1 -> LT . compare
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    compare                        shift and go to state 164
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 125

    (94) compare1 -> LE . compare
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    compare                        shift and go to state 165
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 126

    (95) compare1 -> GT . compare
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    compare                        shift and go to state 166
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 127

    (96) compare1 -> GE . compare
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    compare                        shift and go to state 167
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 128

    (97) compare1 -> epsilon .

    EQ              reduce using rule 97 (compare1 -> epsilon .)
    NE              reduce using rule 97 (compare1 -> epsilon .)
    AND             reduce using rule 97 (compare1 -> epsilon .)
    OR              reduce using rule 97 (compare1 -> epsilon .)
    ID              reduce using rule 97 (compare1 -> epsilon .)
    RETURN          reduce using rule 97 (compare1 -> epsilon .)
    READ            reduce using rule 97 (compare1 -> epsilon .)
    WRITE           reduce using rule 97 (compare1 -> epsilon .)
    IF              reduce using rule 97 (compare1 -> epsilon .)
    WHILE           reduce using rule 97 (compare1 -> epsilon .)
    FOR             reduce using rule 97 (compare1 -> epsilon .)
    OPENPAR         reduce using rule 97 (compare1 -> epsilon .)
    PLUS            reduce using rule 97 (compare1 -> epsilon .)
    MINUS           reduce using rule 97 (compare1 -> epsilon .)
    INT             reduce using rule 97 (compare1 -> epsilon .)
    FLOAT           reduce using rule 97 (compare1 -> epsilon .)
    CHAR            reduce using rule 97 (compare1 -> epsilon .)
    CLOSECURLY      reduce using rule 97 (compare1 -> epsilon .)
    CLOSEPAR        reduce using rule 97 (compare1 -> epsilon .)
    SEMICOLON       reduce using rule 97 (compare1 -> epsilon .)


state 129

    (60) lectura -> READ OPENPAR . lista_ids CLOSEPAR SEMICOLON
    (17) lista_ids -> . ID lista_ids1

    ID              shift and go to state 169

    lista_ids                      shift and go to state 168

state 130

    (61) escritura -> WRITE OPENPAR . escritura1 CLOSEPAR SEMICOLON
    (62) escritura1 -> . STRING escritura2
    (63) escritura1 -> . lista_ids escritura2
    (17) lista_ids -> . ID lista_ids1

    STRING          shift and go to state 171
    ID              shift and go to state 169

    escritura1                     shift and go to state 170
    lista_ids                      shift and go to state 172

state 131

    (66) condicion -> IF OPENPAR . expresion CLOSEPAR THEN OPENCURLY condicion1
    (81) expresion -> . or
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    expresion                      shift and go to state 173
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 132

    (73) while -> WHILE OPENPAR . expresion CLOSEPAR DO OPENCURLY while1
    (81) expresion -> . or
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    expresion                      shift and go to state 174
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 133

    (76) for -> FOR ID . for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (77) for1 -> . OPENBOX exp CLOSEBOX
    (78) for1 -> . epsilon
    (120) epsilon -> .

    OPENBOX         shift and go to state 176
    IS              reduce using rule 120 (epsilon -> .)

    for1                           shift and go to state 175
    epsilon                        shift and go to state 177

state 134

    (82) or -> and or1 .

    ID              reduce using rule 82 (or -> and or1 .)
    RETURN          reduce using rule 82 (or -> and or1 .)
    READ            reduce using rule 82 (or -> and or1 .)
    WRITE           reduce using rule 82 (or -> and or1 .)
    IF              reduce using rule 82 (or -> and or1 .)
    WHILE           reduce using rule 82 (or -> and or1 .)
    FOR             reduce using rule 82 (or -> and or1 .)
    OPENPAR         reduce using rule 82 (or -> and or1 .)
    PLUS            reduce using rule 82 (or -> and or1 .)
    MINUS           reduce using rule 82 (or -> and or1 .)
    INT             reduce using rule 82 (or -> and or1 .)
    FLOAT           reduce using rule 82 (or -> and or1 .)
    CHAR            reduce using rule 82 (or -> and or1 .)
    CLOSECURLY      reduce using rule 82 (or -> and or1 .)
    CLOSEPAR        reduce using rule 82 (or -> and or1 .)
    SEMICOLON       reduce using rule 82 (or -> and or1 .)


state 135

    (83) or1 -> OR . or
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    or                             shift and go to state 178
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 136

    (84) or1 -> epsilon .

    ID              reduce using rule 84 (or1 -> epsilon .)
    RETURN          reduce using rule 84 (or1 -> epsilon .)
    READ            reduce using rule 84 (or1 -> epsilon .)
    WRITE           reduce using rule 84 (or1 -> epsilon .)
    IF              reduce using rule 84 (or1 -> epsilon .)
    WHILE           reduce using rule 84 (or1 -> epsilon .)
    FOR             reduce using rule 84 (or1 -> epsilon .)
    OPENPAR         reduce using rule 84 (or1 -> epsilon .)
    PLUS            reduce using rule 84 (or1 -> epsilon .)
    MINUS           reduce using rule 84 (or1 -> epsilon .)
    INT             reduce using rule 84 (or1 -> epsilon .)
    FLOAT           reduce using rule 84 (or1 -> epsilon .)
    CHAR            reduce using rule 84 (or1 -> epsilon .)
    CLOSECURLY      reduce using rule 84 (or1 -> epsilon .)
    CLOSEPAR        reduce using rule 84 (or1 -> epsilon .)
    SEMICOLON       reduce using rule 84 (or1 -> epsilon .)


state 137

    (85) and -> equal and1 .

    OR              reduce using rule 85 (and -> equal and1 .)
    ID              reduce using rule 85 (and -> equal and1 .)
    RETURN          reduce using rule 85 (and -> equal and1 .)
    READ            reduce using rule 85 (and -> equal and1 .)
    WRITE           reduce using rule 85 (and -> equal and1 .)
    IF              reduce using rule 85 (and -> equal and1 .)
    WHILE           reduce using rule 85 (and -> equal and1 .)
    FOR             reduce using rule 85 (and -> equal and1 .)
    OPENPAR         reduce using rule 85 (and -> equal and1 .)
    PLUS            reduce using rule 85 (and -> equal and1 .)
    MINUS           reduce using rule 85 (and -> equal and1 .)
    INT             reduce using rule 85 (and -> equal and1 .)
    FLOAT           reduce using rule 85 (and -> equal and1 .)
    CHAR            reduce using rule 85 (and -> equal and1 .)
    CLOSECURLY      reduce using rule 85 (and -> equal and1 .)
    CLOSEPAR        reduce using rule 85 (and -> equal and1 .)
    SEMICOLON       reduce using rule 85 (and -> equal and1 .)


state 138

    (86) and1 -> AND . and
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    and                            shift and go to state 179
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 139

    (87) and1 -> epsilon .

    OR              reduce using rule 87 (and1 -> epsilon .)
    ID              reduce using rule 87 (and1 -> epsilon .)
    RETURN          reduce using rule 87 (and1 -> epsilon .)
    READ            reduce using rule 87 (and1 -> epsilon .)
    WRITE           reduce using rule 87 (and1 -> epsilon .)
    IF              reduce using rule 87 (and1 -> epsilon .)
    WHILE           reduce using rule 87 (and1 -> epsilon .)
    FOR             reduce using rule 87 (and1 -> epsilon .)
    OPENPAR         reduce using rule 87 (and1 -> epsilon .)
    PLUS            reduce using rule 87 (and1 -> epsilon .)
    MINUS           reduce using rule 87 (and1 -> epsilon .)
    INT             reduce using rule 87 (and1 -> epsilon .)
    FLOAT           reduce using rule 87 (and1 -> epsilon .)
    CHAR            reduce using rule 87 (and1 -> epsilon .)
    CLOSECURLY      reduce using rule 87 (and1 -> epsilon .)
    CLOSEPAR        reduce using rule 87 (and1 -> epsilon .)
    SEMICOLON       reduce using rule 87 (and1 -> epsilon .)


state 140

    (88) equal -> compare equal1 .

    AND             reduce using rule 88 (equal -> compare equal1 .)
    OR              reduce using rule 88 (equal -> compare equal1 .)
    ID              reduce using rule 88 (equal -> compare equal1 .)
    RETURN          reduce using rule 88 (equal -> compare equal1 .)
    READ            reduce using rule 88 (equal -> compare equal1 .)
    WRITE           reduce using rule 88 (equal -> compare equal1 .)
    IF              reduce using rule 88 (equal -> compare equal1 .)
    WHILE           reduce using rule 88 (equal -> compare equal1 .)
    FOR             reduce using rule 88 (equal -> compare equal1 .)
    OPENPAR         reduce using rule 88 (equal -> compare equal1 .)
    PLUS            reduce using rule 88 (equal -> compare equal1 .)
    MINUS           reduce using rule 88 (equal -> compare equal1 .)
    INT             reduce using rule 88 (equal -> compare equal1 .)
    FLOAT           reduce using rule 88 (equal -> compare equal1 .)
    CHAR            reduce using rule 88 (equal -> compare equal1 .)
    CLOSECURLY      reduce using rule 88 (equal -> compare equal1 .)
    CLOSEPAR        reduce using rule 88 (equal -> compare equal1 .)
    SEMICOLON       reduce using rule 88 (equal -> compare equal1 .)


state 141

    (89) equal1 -> EQ . equal
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    equal                          shift and go to state 180
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 142

    (90) equal1 -> NE . equal
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    equal                          shift and go to state 181
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 143

    (91) equal1 -> epsilon .

    AND             reduce using rule 91 (equal1 -> epsilon .)
    OR              reduce using rule 91 (equal1 -> epsilon .)
    ID              reduce using rule 91 (equal1 -> epsilon .)
    RETURN          reduce using rule 91 (equal1 -> epsilon .)
    READ            reduce using rule 91 (equal1 -> epsilon .)
    WRITE           reduce using rule 91 (equal1 -> epsilon .)
    IF              reduce using rule 91 (equal1 -> epsilon .)
    WHILE           reduce using rule 91 (equal1 -> epsilon .)
    FOR             reduce using rule 91 (equal1 -> epsilon .)
    OPENPAR         reduce using rule 91 (equal1 -> epsilon .)
    PLUS            reduce using rule 91 (equal1 -> epsilon .)
    MINUS           reduce using rule 91 (equal1 -> epsilon .)
    INT             reduce using rule 91 (equal1 -> epsilon .)
    FLOAT           reduce using rule 91 (equal1 -> epsilon .)
    CHAR            reduce using rule 91 (equal1 -> epsilon .)
    CLOSECURLY      reduce using rule 91 (equal1 -> epsilon .)
    CLOSEPAR        reduce using rule 91 (equal1 -> epsilon .)
    SEMICOLON       reduce using rule 91 (equal1 -> epsilon .)


state 144

    (37) parameters -> tipo ID parameters1 .

    CLOSEPAR        reduce using rule 37 (parameters -> tipo ID parameters1 .)


state 145

    (38) parameters1 -> COMMA . parameters
    (37) parameters -> . tipo ID parameters1
    (22) tipo -> . TYPEFLOAT
    (23) tipo -> . TYPEINT
    (24) tipo -> . TYPECHAR

    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    parameters                     shift and go to state 182
    tipo                           shift and go to state 40

state 146

    (39) parameters1 -> epsilon .

    CLOSEPAR        reduce using rule 39 (parameters1 -> epsilon .)


state 147

    (33) funciones5 -> vars OPENCURLY . funciones6
    (35) funciones6 -> . estatutos funciones6
    (36) funciones6 -> . CLOSECURLY funciones
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 150
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    funciones6                     shift and go to state 183
    estatutos                      shift and go to state 149
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 148

    (34) funciones5 -> OPENCURLY funciones6 .

    MAIN            reduce using rule 34 (funciones5 -> OPENCURLY funciones6 .)


state 149

    (35) funciones6 -> estatutos . funciones6
    (35) funciones6 -> . estatutos funciones6
    (36) funciones6 -> . CLOSECURLY funciones
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 150
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    estatutos                      shift and go to state 149
    funciones6                     shift and go to state 184
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 150

    (36) funciones6 -> CLOSECURLY . funciones
    (25) funciones -> . FUNCTION funciones1
    (26) funciones -> . epsilon
    (120) epsilon -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 120 (epsilon -> .)

    funciones                      shift and go to state 185
    epsilon                        shift and go to state 186

state 151

    (11) vars3 -> OPENBOX exp CLOSEBOX vars4 .

    FUNCTION        reduce using rule 11 (vars3 -> OPENBOX exp CLOSEBOX vars4 .)
    MAIN            reduce using rule 11 (vars3 -> OPENBOX exp CLOSEBOX vars4 .)
    OPENCURLY       reduce using rule 11 (vars3 -> OPENBOX exp CLOSEBOX vars4 .)


state 152

    (99) exp1 -> PLUS exp .

    CLOSEBOX        reduce using rule 99 (exp1 -> PLUS exp .)
    LT              reduce using rule 99 (exp1 -> PLUS exp .)
    LE              reduce using rule 99 (exp1 -> PLUS exp .)
    GT              reduce using rule 99 (exp1 -> PLUS exp .)
    GE              reduce using rule 99 (exp1 -> PLUS exp .)
    EQ              reduce using rule 99 (exp1 -> PLUS exp .)
    NE              reduce using rule 99 (exp1 -> PLUS exp .)
    AND             reduce using rule 99 (exp1 -> PLUS exp .)
    OR              reduce using rule 99 (exp1 -> PLUS exp .)
    ID              reduce using rule 99 (exp1 -> PLUS exp .)
    RETURN          reduce using rule 99 (exp1 -> PLUS exp .)
    READ            reduce using rule 99 (exp1 -> PLUS exp .)
    WRITE           reduce using rule 99 (exp1 -> PLUS exp .)
    IF              reduce using rule 99 (exp1 -> PLUS exp .)
    WHILE           reduce using rule 99 (exp1 -> PLUS exp .)
    FOR             reduce using rule 99 (exp1 -> PLUS exp .)
    OPENPAR         reduce using rule 99 (exp1 -> PLUS exp .)
    PLUS            reduce using rule 99 (exp1 -> PLUS exp .)
    MINUS           reduce using rule 99 (exp1 -> PLUS exp .)
    INT             reduce using rule 99 (exp1 -> PLUS exp .)
    FLOAT           reduce using rule 99 (exp1 -> PLUS exp .)
    CHAR            reduce using rule 99 (exp1 -> PLUS exp .)
    CLOSECURLY      reduce using rule 99 (exp1 -> PLUS exp .)
    CLOSEPAR        reduce using rule 99 (exp1 -> PLUS exp .)
    COMMA           reduce using rule 99 (exp1 -> PLUS exp .)
    SEMICOLON       reduce using rule 99 (exp1 -> PLUS exp .)
    TO              reduce using rule 99 (exp1 -> PLUS exp .)
    DO              reduce using rule 99 (exp1 -> PLUS exp .)


state 153

    (100) exp1 -> MINUS exp .

    CLOSEBOX        reduce using rule 100 (exp1 -> MINUS exp .)
    LT              reduce using rule 100 (exp1 -> MINUS exp .)
    LE              reduce using rule 100 (exp1 -> MINUS exp .)
    GT              reduce using rule 100 (exp1 -> MINUS exp .)
    GE              reduce using rule 100 (exp1 -> MINUS exp .)
    EQ              reduce using rule 100 (exp1 -> MINUS exp .)
    NE              reduce using rule 100 (exp1 -> MINUS exp .)
    AND             reduce using rule 100 (exp1 -> MINUS exp .)
    OR              reduce using rule 100 (exp1 -> MINUS exp .)
    ID              reduce using rule 100 (exp1 -> MINUS exp .)
    RETURN          reduce using rule 100 (exp1 -> MINUS exp .)
    READ            reduce using rule 100 (exp1 -> MINUS exp .)
    WRITE           reduce using rule 100 (exp1 -> MINUS exp .)
    IF              reduce using rule 100 (exp1 -> MINUS exp .)
    WHILE           reduce using rule 100 (exp1 -> MINUS exp .)
    FOR             reduce using rule 100 (exp1 -> MINUS exp .)
    OPENPAR         reduce using rule 100 (exp1 -> MINUS exp .)
    PLUS            reduce using rule 100 (exp1 -> MINUS exp .)
    MINUS           reduce using rule 100 (exp1 -> MINUS exp .)
    INT             reduce using rule 100 (exp1 -> MINUS exp .)
    FLOAT           reduce using rule 100 (exp1 -> MINUS exp .)
    CHAR            reduce using rule 100 (exp1 -> MINUS exp .)
    CLOSECURLY      reduce using rule 100 (exp1 -> MINUS exp .)
    CLOSEPAR        reduce using rule 100 (exp1 -> MINUS exp .)
    COMMA           reduce using rule 100 (exp1 -> MINUS exp .)
    SEMICOLON       reduce using rule 100 (exp1 -> MINUS exp .)
    TO              reduce using rule 100 (exp1 -> MINUS exp .)
    DO              reduce using rule 100 (exp1 -> MINUS exp .)


state 154

    (103) termino1 -> MULTIPLY termino .

    PLUS            reduce using rule 103 (termino1 -> MULTIPLY termino .)
    MINUS           reduce using rule 103 (termino1 -> MULTIPLY termino .)
    CLOSEBOX        reduce using rule 103 (termino1 -> MULTIPLY termino .)
    LT              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    LE              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    GT              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    GE              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    EQ              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    NE              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    AND             reduce using rule 103 (termino1 -> MULTIPLY termino .)
    OR              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    ID              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    RETURN          reduce using rule 103 (termino1 -> MULTIPLY termino .)
    READ            reduce using rule 103 (termino1 -> MULTIPLY termino .)
    WRITE           reduce using rule 103 (termino1 -> MULTIPLY termino .)
    IF              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    WHILE           reduce using rule 103 (termino1 -> MULTIPLY termino .)
    FOR             reduce using rule 103 (termino1 -> MULTIPLY termino .)
    OPENPAR         reduce using rule 103 (termino1 -> MULTIPLY termino .)
    INT             reduce using rule 103 (termino1 -> MULTIPLY termino .)
    FLOAT           reduce using rule 103 (termino1 -> MULTIPLY termino .)
    CHAR            reduce using rule 103 (termino1 -> MULTIPLY termino .)
    CLOSECURLY      reduce using rule 103 (termino1 -> MULTIPLY termino .)
    CLOSEPAR        reduce using rule 103 (termino1 -> MULTIPLY termino .)
    COMMA           reduce using rule 103 (termino1 -> MULTIPLY termino .)
    SEMICOLON       reduce using rule 103 (termino1 -> MULTIPLY termino .)
    TO              reduce using rule 103 (termino1 -> MULTIPLY termino .)
    DO              reduce using rule 103 (termino1 -> MULTIPLY termino .)


state 155

    (104) termino1 -> DIVIDE termino .

    PLUS            reduce using rule 104 (termino1 -> DIVIDE termino .)
    MINUS           reduce using rule 104 (termino1 -> DIVIDE termino .)
    CLOSEBOX        reduce using rule 104 (termino1 -> DIVIDE termino .)
    LT              reduce using rule 104 (termino1 -> DIVIDE termino .)
    LE              reduce using rule 104 (termino1 -> DIVIDE termino .)
    GT              reduce using rule 104 (termino1 -> DIVIDE termino .)
    GE              reduce using rule 104 (termino1 -> DIVIDE termino .)
    EQ              reduce using rule 104 (termino1 -> DIVIDE termino .)
    NE              reduce using rule 104 (termino1 -> DIVIDE termino .)
    AND             reduce using rule 104 (termino1 -> DIVIDE termino .)
    OR              reduce using rule 104 (termino1 -> DIVIDE termino .)
    ID              reduce using rule 104 (termino1 -> DIVIDE termino .)
    RETURN          reduce using rule 104 (termino1 -> DIVIDE termino .)
    READ            reduce using rule 104 (termino1 -> DIVIDE termino .)
    WRITE           reduce using rule 104 (termino1 -> DIVIDE termino .)
    IF              reduce using rule 104 (termino1 -> DIVIDE termino .)
    WHILE           reduce using rule 104 (termino1 -> DIVIDE termino .)
    FOR             reduce using rule 104 (termino1 -> DIVIDE termino .)
    OPENPAR         reduce using rule 104 (termino1 -> DIVIDE termino .)
    INT             reduce using rule 104 (termino1 -> DIVIDE termino .)
    FLOAT           reduce using rule 104 (termino1 -> DIVIDE termino .)
    CHAR            reduce using rule 104 (termino1 -> DIVIDE termino .)
    CLOSECURLY      reduce using rule 104 (termino1 -> DIVIDE termino .)
    CLOSEPAR        reduce using rule 104 (termino1 -> DIVIDE termino .)
    COMMA           reduce using rule 104 (termino1 -> DIVIDE termino .)
    SEMICOLON       reduce using rule 104 (termino1 -> DIVIDE termino .)
    TO              reduce using rule 104 (termino1 -> DIVIDE termino .)
    DO              reduce using rule 104 (termino1 -> DIVIDE termino .)


state 156

    (105) termino1 -> MODULO termino .

    PLUS            reduce using rule 105 (termino1 -> MODULO termino .)
    MINUS           reduce using rule 105 (termino1 -> MODULO termino .)
    CLOSEBOX        reduce using rule 105 (termino1 -> MODULO termino .)
    LT              reduce using rule 105 (termino1 -> MODULO termino .)
    LE              reduce using rule 105 (termino1 -> MODULO termino .)
    GT              reduce using rule 105 (termino1 -> MODULO termino .)
    GE              reduce using rule 105 (termino1 -> MODULO termino .)
    EQ              reduce using rule 105 (termino1 -> MODULO termino .)
    NE              reduce using rule 105 (termino1 -> MODULO termino .)
    AND             reduce using rule 105 (termino1 -> MODULO termino .)
    OR              reduce using rule 105 (termino1 -> MODULO termino .)
    ID              reduce using rule 105 (termino1 -> MODULO termino .)
    RETURN          reduce using rule 105 (termino1 -> MODULO termino .)
    READ            reduce using rule 105 (termino1 -> MODULO termino .)
    WRITE           reduce using rule 105 (termino1 -> MODULO termino .)
    IF              reduce using rule 105 (termino1 -> MODULO termino .)
    WHILE           reduce using rule 105 (termino1 -> MODULO termino .)
    FOR             reduce using rule 105 (termino1 -> MODULO termino .)
    OPENPAR         reduce using rule 105 (termino1 -> MODULO termino .)
    INT             reduce using rule 105 (termino1 -> MODULO termino .)
    FLOAT           reduce using rule 105 (termino1 -> MODULO termino .)
    CHAR            reduce using rule 105 (termino1 -> MODULO termino .)
    CLOSECURLY      reduce using rule 105 (termino1 -> MODULO termino .)
    CLOSEPAR        reduce using rule 105 (termino1 -> MODULO termino .)
    COMMA           reduce using rule 105 (termino1 -> MODULO termino .)
    SEMICOLON       reduce using rule 105 (termino1 -> MODULO termino .)
    TO              reduce using rule 105 (termino1 -> MODULO termino .)
    DO              reduce using rule 105 (termino1 -> MODULO termino .)


state 157

    (55) funcion -> ID OPENPAR funcion1 .

    MULTIPLY        reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    DIVIDE          reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    MODULO          reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    PLUS            reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    MINUS           reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    CLOSEBOX        reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    SEMICOLON       reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    LT              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    LE              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    GT              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    GE              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    EQ              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    NE              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    AND             reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    OR              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    ID              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    RETURN          reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    READ            reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    WRITE           reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    IF              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    WHILE           reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    FOR             reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    OPENPAR         reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    INT             reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    FLOAT           reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    CHAR            reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    CLOSECURLY      reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    CLOSEPAR        reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    COMMA           reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    TO              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)
    DO              reduce using rule 55 (funcion -> ID OPENPAR funcion1 .)


state 158

    (56) funcion1 -> exp . funcion2
    (57) funcion2 -> . COMMA funcion1
    (58) funcion2 -> . CLOSEPAR

    COMMA           shift and go to state 188
    CLOSEPAR        shift and go to state 189

    funcion2                       shift and go to state 187

state 159

    (111) factor1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 190


state 160

    (108) factor -> OPENPAR expresion CLOSEPAR .

    MULTIPLY        reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    DIVIDE          reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    MODULO          reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    PLUS            reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    MINUS           reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    CLOSEBOX        reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    LT              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    LE              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    GT              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    GE              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    EQ              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    NE              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    AND             reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    OR              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    ID              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    RETURN          reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    READ            reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    WRITE           reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    IF              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    WHILE           reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    FOR             reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    OPENPAR         reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    INT             reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    FLOAT           reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    CHAR            reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    CLOSECURLY      reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    CLOSEPAR        reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    COMMA           reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    SEMICOLON       reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    TO              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)
    DO              reduce using rule 108 (factor -> OPENPAR expresion CLOSEPAR .)


state 161

    (51) asignacion -> ID asignacion1 IS . expresion SEMICOLON
    (81) expresion -> . or
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    expresion                      shift and go to state 191
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    exp                            shift and go to state 71
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 162

    (52) asignacion1 -> OPENBOX exp . CLOSEBOX
    (111) factor1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 192


state 163

    (59) retorno -> RETURN OPENPAR exp . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 193


state 164

    (93) compare1 -> LT compare .

    EQ              reduce using rule 93 (compare1 -> LT compare .)
    NE              reduce using rule 93 (compare1 -> LT compare .)
    AND             reduce using rule 93 (compare1 -> LT compare .)
    OR              reduce using rule 93 (compare1 -> LT compare .)
    ID              reduce using rule 93 (compare1 -> LT compare .)
    RETURN          reduce using rule 93 (compare1 -> LT compare .)
    READ            reduce using rule 93 (compare1 -> LT compare .)
    WRITE           reduce using rule 93 (compare1 -> LT compare .)
    IF              reduce using rule 93 (compare1 -> LT compare .)
    WHILE           reduce using rule 93 (compare1 -> LT compare .)
    FOR             reduce using rule 93 (compare1 -> LT compare .)
    OPENPAR         reduce using rule 93 (compare1 -> LT compare .)
    PLUS            reduce using rule 93 (compare1 -> LT compare .)
    MINUS           reduce using rule 93 (compare1 -> LT compare .)
    INT             reduce using rule 93 (compare1 -> LT compare .)
    FLOAT           reduce using rule 93 (compare1 -> LT compare .)
    CHAR            reduce using rule 93 (compare1 -> LT compare .)
    CLOSECURLY      reduce using rule 93 (compare1 -> LT compare .)
    CLOSEPAR        reduce using rule 93 (compare1 -> LT compare .)
    SEMICOLON       reduce using rule 93 (compare1 -> LT compare .)


state 165

    (94) compare1 -> LE compare .

    EQ              reduce using rule 94 (compare1 -> LE compare .)
    NE              reduce using rule 94 (compare1 -> LE compare .)
    AND             reduce using rule 94 (compare1 -> LE compare .)
    OR              reduce using rule 94 (compare1 -> LE compare .)
    ID              reduce using rule 94 (compare1 -> LE compare .)
    RETURN          reduce using rule 94 (compare1 -> LE compare .)
    READ            reduce using rule 94 (compare1 -> LE compare .)
    WRITE           reduce using rule 94 (compare1 -> LE compare .)
    IF              reduce using rule 94 (compare1 -> LE compare .)
    WHILE           reduce using rule 94 (compare1 -> LE compare .)
    FOR             reduce using rule 94 (compare1 -> LE compare .)
    OPENPAR         reduce using rule 94 (compare1 -> LE compare .)
    PLUS            reduce using rule 94 (compare1 -> LE compare .)
    MINUS           reduce using rule 94 (compare1 -> LE compare .)
    INT             reduce using rule 94 (compare1 -> LE compare .)
    FLOAT           reduce using rule 94 (compare1 -> LE compare .)
    CHAR            reduce using rule 94 (compare1 -> LE compare .)
    CLOSECURLY      reduce using rule 94 (compare1 -> LE compare .)
    CLOSEPAR        reduce using rule 94 (compare1 -> LE compare .)
    SEMICOLON       reduce using rule 94 (compare1 -> LE compare .)


state 166

    (95) compare1 -> GT compare .

    EQ              reduce using rule 95 (compare1 -> GT compare .)
    NE              reduce using rule 95 (compare1 -> GT compare .)
    AND             reduce using rule 95 (compare1 -> GT compare .)
    OR              reduce using rule 95 (compare1 -> GT compare .)
    ID              reduce using rule 95 (compare1 -> GT compare .)
    RETURN          reduce using rule 95 (compare1 -> GT compare .)
    READ            reduce using rule 95 (compare1 -> GT compare .)
    WRITE           reduce using rule 95 (compare1 -> GT compare .)
    IF              reduce using rule 95 (compare1 -> GT compare .)
    WHILE           reduce using rule 95 (compare1 -> GT compare .)
    FOR             reduce using rule 95 (compare1 -> GT compare .)
    OPENPAR         reduce using rule 95 (compare1 -> GT compare .)
    PLUS            reduce using rule 95 (compare1 -> GT compare .)
    MINUS           reduce using rule 95 (compare1 -> GT compare .)
    INT             reduce using rule 95 (compare1 -> GT compare .)
    FLOAT           reduce using rule 95 (compare1 -> GT compare .)
    CHAR            reduce using rule 95 (compare1 -> GT compare .)
    CLOSECURLY      reduce using rule 95 (compare1 -> GT compare .)
    CLOSEPAR        reduce using rule 95 (compare1 -> GT compare .)
    SEMICOLON       reduce using rule 95 (compare1 -> GT compare .)


state 167

    (96) compare1 -> GE compare .

    EQ              reduce using rule 96 (compare1 -> GE compare .)
    NE              reduce using rule 96 (compare1 -> GE compare .)
    AND             reduce using rule 96 (compare1 -> GE compare .)
    OR              reduce using rule 96 (compare1 -> GE compare .)
    ID              reduce using rule 96 (compare1 -> GE compare .)
    RETURN          reduce using rule 96 (compare1 -> GE compare .)
    READ            reduce using rule 96 (compare1 -> GE compare .)
    WRITE           reduce using rule 96 (compare1 -> GE compare .)
    IF              reduce using rule 96 (compare1 -> GE compare .)
    WHILE           reduce using rule 96 (compare1 -> GE compare .)
    FOR             reduce using rule 96 (compare1 -> GE compare .)
    OPENPAR         reduce using rule 96 (compare1 -> GE compare .)
    PLUS            reduce using rule 96 (compare1 -> GE compare .)
    MINUS           reduce using rule 96 (compare1 -> GE compare .)
    INT             reduce using rule 96 (compare1 -> GE compare .)
    FLOAT           reduce using rule 96 (compare1 -> GE compare .)
    CHAR            reduce using rule 96 (compare1 -> GE compare .)
    CLOSECURLY      reduce using rule 96 (compare1 -> GE compare .)
    CLOSEPAR        reduce using rule 96 (compare1 -> GE compare .)
    SEMICOLON       reduce using rule 96 (compare1 -> GE compare .)


state 168

    (60) lectura -> READ OPENPAR lista_ids . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 194


state 169

    (17) lista_ids -> ID . lista_ids1
    (18) lista_ids1 -> . lista_ids2
    (19) lista_ids1 -> . OPENBOX exp CLOSEBOX lista_ids2
    (20) lista_ids2 -> . COMMA lista_ids
    (21) lista_ids2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for COMMA resolved as shift
    OPENBOX         shift and go to state 197
    COMMA           shift and go to state 198
    CLOSEPAR        reduce using rule 120 (epsilon -> .)

  ! COMMA           [ reduce using rule 120 (epsilon -> .) ]

    lista_ids1                     shift and go to state 195
    lista_ids2                     shift and go to state 196
    epsilon                        shift and go to state 199

state 170

    (61) escritura -> WRITE OPENPAR escritura1 . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 200


state 171

    (62) escritura1 -> STRING . escritura2
    (64) escritura2 -> . COMMA escritura1
    (65) escritura2 -> . epsilon
    (120) epsilon -> .

    COMMA           shift and go to state 202
    CLOSEPAR        reduce using rule 120 (epsilon -> .)

    escritura2                     shift and go to state 201
    epsilon                        shift and go to state 203

state 172

    (63) escritura1 -> lista_ids . escritura2
    (64) escritura2 -> . COMMA escritura1
    (65) escritura2 -> . epsilon
    (120) epsilon -> .

    COMMA           shift and go to state 202
    CLOSEPAR        reduce using rule 120 (epsilon -> .)

    escritura2                     shift and go to state 204
    epsilon                        shift and go to state 203

state 173

    (66) condicion -> IF OPENPAR expresion . CLOSEPAR THEN OPENCURLY condicion1

    CLOSEPAR        shift and go to state 205


state 174

    (73) while -> WHILE OPENPAR expresion . CLOSEPAR DO OPENCURLY while1

    CLOSEPAR        shift and go to state 206


state 175

    (76) for -> FOR ID for1 . IS exp TO exp DO OPENCURLY for2 CLOSECURLY

    IS              shift and go to state 207


state 176

    (77) for1 -> OPENBOX . exp CLOSEBOX
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 208
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 177

    (78) for1 -> epsilon .

    IS              reduce using rule 78 (for1 -> epsilon .)


state 178

    (83) or1 -> OR or .

    ID              reduce using rule 83 (or1 -> OR or .)
    RETURN          reduce using rule 83 (or1 -> OR or .)
    READ            reduce using rule 83 (or1 -> OR or .)
    WRITE           reduce using rule 83 (or1 -> OR or .)
    IF              reduce using rule 83 (or1 -> OR or .)
    WHILE           reduce using rule 83 (or1 -> OR or .)
    FOR             reduce using rule 83 (or1 -> OR or .)
    OPENPAR         reduce using rule 83 (or1 -> OR or .)
    PLUS            reduce using rule 83 (or1 -> OR or .)
    MINUS           reduce using rule 83 (or1 -> OR or .)
    INT             reduce using rule 83 (or1 -> OR or .)
    FLOAT           reduce using rule 83 (or1 -> OR or .)
    CHAR            reduce using rule 83 (or1 -> OR or .)
    CLOSECURLY      reduce using rule 83 (or1 -> OR or .)
    CLOSEPAR        reduce using rule 83 (or1 -> OR or .)
    SEMICOLON       reduce using rule 83 (or1 -> OR or .)


state 179

    (86) and1 -> AND and .

    OR              reduce using rule 86 (and1 -> AND and .)
    ID              reduce using rule 86 (and1 -> AND and .)
    RETURN          reduce using rule 86 (and1 -> AND and .)
    READ            reduce using rule 86 (and1 -> AND and .)
    WRITE           reduce using rule 86 (and1 -> AND and .)
    IF              reduce using rule 86 (and1 -> AND and .)
    WHILE           reduce using rule 86 (and1 -> AND and .)
    FOR             reduce using rule 86 (and1 -> AND and .)
    OPENPAR         reduce using rule 86 (and1 -> AND and .)
    PLUS            reduce using rule 86 (and1 -> AND and .)
    MINUS           reduce using rule 86 (and1 -> AND and .)
    INT             reduce using rule 86 (and1 -> AND and .)
    FLOAT           reduce using rule 86 (and1 -> AND and .)
    CHAR            reduce using rule 86 (and1 -> AND and .)
    CLOSECURLY      reduce using rule 86 (and1 -> AND and .)
    CLOSEPAR        reduce using rule 86 (and1 -> AND and .)
    SEMICOLON       reduce using rule 86 (and1 -> AND and .)


state 180

    (89) equal1 -> EQ equal .

    AND             reduce using rule 89 (equal1 -> EQ equal .)
    OR              reduce using rule 89 (equal1 -> EQ equal .)
    ID              reduce using rule 89 (equal1 -> EQ equal .)
    RETURN          reduce using rule 89 (equal1 -> EQ equal .)
    READ            reduce using rule 89 (equal1 -> EQ equal .)
    WRITE           reduce using rule 89 (equal1 -> EQ equal .)
    IF              reduce using rule 89 (equal1 -> EQ equal .)
    WHILE           reduce using rule 89 (equal1 -> EQ equal .)
    FOR             reduce using rule 89 (equal1 -> EQ equal .)
    OPENPAR         reduce using rule 89 (equal1 -> EQ equal .)
    PLUS            reduce using rule 89 (equal1 -> EQ equal .)
    MINUS           reduce using rule 89 (equal1 -> EQ equal .)
    INT             reduce using rule 89 (equal1 -> EQ equal .)
    FLOAT           reduce using rule 89 (equal1 -> EQ equal .)
    CHAR            reduce using rule 89 (equal1 -> EQ equal .)
    CLOSECURLY      reduce using rule 89 (equal1 -> EQ equal .)
    CLOSEPAR        reduce using rule 89 (equal1 -> EQ equal .)
    SEMICOLON       reduce using rule 89 (equal1 -> EQ equal .)


state 181

    (90) equal1 -> NE equal .

    AND             reduce using rule 90 (equal1 -> NE equal .)
    OR              reduce using rule 90 (equal1 -> NE equal .)
    ID              reduce using rule 90 (equal1 -> NE equal .)
    RETURN          reduce using rule 90 (equal1 -> NE equal .)
    READ            reduce using rule 90 (equal1 -> NE equal .)
    WRITE           reduce using rule 90 (equal1 -> NE equal .)
    IF              reduce using rule 90 (equal1 -> NE equal .)
    WHILE           reduce using rule 90 (equal1 -> NE equal .)
    FOR             reduce using rule 90 (equal1 -> NE equal .)
    OPENPAR         reduce using rule 90 (equal1 -> NE equal .)
    PLUS            reduce using rule 90 (equal1 -> NE equal .)
    MINUS           reduce using rule 90 (equal1 -> NE equal .)
    INT             reduce using rule 90 (equal1 -> NE equal .)
    FLOAT           reduce using rule 90 (equal1 -> NE equal .)
    CHAR            reduce using rule 90 (equal1 -> NE equal .)
    CLOSECURLY      reduce using rule 90 (equal1 -> NE equal .)
    CLOSEPAR        reduce using rule 90 (equal1 -> NE equal .)
    SEMICOLON       reduce using rule 90 (equal1 -> NE equal .)


state 182

    (38) parameters1 -> COMMA parameters .

    CLOSEPAR        reduce using rule 38 (parameters1 -> COMMA parameters .)


state 183

    (33) funciones5 -> vars OPENCURLY funciones6 .

    MAIN            reduce using rule 33 (funciones5 -> vars OPENCURLY funciones6 .)


state 184

    (35) funciones6 -> estatutos funciones6 .

    MAIN            reduce using rule 35 (funciones6 -> estatutos funciones6 .)


state 185

    (36) funciones6 -> CLOSECURLY funciones .

    MAIN            reduce using rule 36 (funciones6 -> CLOSECURLY funciones .)


state 186

    (26) funciones -> epsilon .

    MAIN            reduce using rule 26 (funciones -> epsilon .)


state 187

    (56) funcion1 -> exp funcion2 .

    MULTIPLY        reduce using rule 56 (funcion1 -> exp funcion2 .)
    DIVIDE          reduce using rule 56 (funcion1 -> exp funcion2 .)
    MODULO          reduce using rule 56 (funcion1 -> exp funcion2 .)
    PLUS            reduce using rule 56 (funcion1 -> exp funcion2 .)
    MINUS           reduce using rule 56 (funcion1 -> exp funcion2 .)
    CLOSEBOX        reduce using rule 56 (funcion1 -> exp funcion2 .)
    SEMICOLON       reduce using rule 56 (funcion1 -> exp funcion2 .)
    LT              reduce using rule 56 (funcion1 -> exp funcion2 .)
    LE              reduce using rule 56 (funcion1 -> exp funcion2 .)
    GT              reduce using rule 56 (funcion1 -> exp funcion2 .)
    GE              reduce using rule 56 (funcion1 -> exp funcion2 .)
    EQ              reduce using rule 56 (funcion1 -> exp funcion2 .)
    NE              reduce using rule 56 (funcion1 -> exp funcion2 .)
    AND             reduce using rule 56 (funcion1 -> exp funcion2 .)
    OR              reduce using rule 56 (funcion1 -> exp funcion2 .)
    ID              reduce using rule 56 (funcion1 -> exp funcion2 .)
    RETURN          reduce using rule 56 (funcion1 -> exp funcion2 .)
    READ            reduce using rule 56 (funcion1 -> exp funcion2 .)
    WRITE           reduce using rule 56 (funcion1 -> exp funcion2 .)
    IF              reduce using rule 56 (funcion1 -> exp funcion2 .)
    WHILE           reduce using rule 56 (funcion1 -> exp funcion2 .)
    FOR             reduce using rule 56 (funcion1 -> exp funcion2 .)
    OPENPAR         reduce using rule 56 (funcion1 -> exp funcion2 .)
    INT             reduce using rule 56 (funcion1 -> exp funcion2 .)
    FLOAT           reduce using rule 56 (funcion1 -> exp funcion2 .)
    CHAR            reduce using rule 56 (funcion1 -> exp funcion2 .)
    CLOSECURLY      reduce using rule 56 (funcion1 -> exp funcion2 .)
    CLOSEPAR        reduce using rule 56 (funcion1 -> exp funcion2 .)
    COMMA           reduce using rule 56 (funcion1 -> exp funcion2 .)
    TO              reduce using rule 56 (funcion1 -> exp funcion2 .)
    DO              reduce using rule 56 (funcion1 -> exp funcion2 .)


state 188

    (57) funcion2 -> COMMA . funcion1
    (56) funcion1 -> . exp funcion2
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    funcion1                       shift and go to state 209
    exp                            shift and go to state 158
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 189

    (58) funcion2 -> CLOSEPAR .

    MULTIPLY        reduce using rule 58 (funcion2 -> CLOSEPAR .)
    DIVIDE          reduce using rule 58 (funcion2 -> CLOSEPAR .)
    MODULO          reduce using rule 58 (funcion2 -> CLOSEPAR .)
    PLUS            reduce using rule 58 (funcion2 -> CLOSEPAR .)
    MINUS           reduce using rule 58 (funcion2 -> CLOSEPAR .)
    CLOSEBOX        reduce using rule 58 (funcion2 -> CLOSEPAR .)
    SEMICOLON       reduce using rule 58 (funcion2 -> CLOSEPAR .)
    LT              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    LE              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    GT              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    GE              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    EQ              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    NE              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    AND             reduce using rule 58 (funcion2 -> CLOSEPAR .)
    OR              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    ID              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    RETURN          reduce using rule 58 (funcion2 -> CLOSEPAR .)
    READ            reduce using rule 58 (funcion2 -> CLOSEPAR .)
    WRITE           reduce using rule 58 (funcion2 -> CLOSEPAR .)
    IF              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    WHILE           reduce using rule 58 (funcion2 -> CLOSEPAR .)
    FOR             reduce using rule 58 (funcion2 -> CLOSEPAR .)
    OPENPAR         reduce using rule 58 (funcion2 -> CLOSEPAR .)
    INT             reduce using rule 58 (funcion2 -> CLOSEPAR .)
    FLOAT           reduce using rule 58 (funcion2 -> CLOSEPAR .)
    CHAR            reduce using rule 58 (funcion2 -> CLOSEPAR .)
    CLOSECURLY      reduce using rule 58 (funcion2 -> CLOSEPAR .)
    CLOSEPAR        reduce using rule 58 (funcion2 -> CLOSEPAR .)
    COMMA           reduce using rule 58 (funcion2 -> CLOSEPAR .)
    TO              reduce using rule 58 (funcion2 -> CLOSEPAR .)
    DO              reduce using rule 58 (funcion2 -> CLOSEPAR .)


state 190

    (111) factor1 -> OPENBOX exp CLOSEBOX .

    MULTIPLY        reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    DIVIDE          reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    MODULO          reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    PLUS            reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    MINUS           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSEBOX        reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    LT              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    LE              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    GT              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    GE              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    EQ              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    NE              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    AND             reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    OR              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSEPAR        reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    ID              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    RETURN          reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    READ            reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    WRITE           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    IF              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    WHILE           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    FOR             reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    OPENPAR         reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    INT             reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    FLOAT           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    CHAR            reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSECURLY      reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    COMMA           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    SEMICOLON       reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    TO              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    DO              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)


state 191

    (51) asignacion -> ID asignacion1 IS expresion . SEMICOLON

    SEMICOLON       shift and go to state 210


state 192

    (52) asignacion1 -> OPENBOX exp CLOSEBOX .
    (111) factor1 -> OPENBOX exp CLOSEBOX .

    IS              reduce using rule 52 (asignacion1 -> OPENBOX exp CLOSEBOX .)
    MULTIPLY        reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    DIVIDE          reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    MODULO          reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    PLUS            reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    MINUS           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    LT              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    LE              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    GT              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    GE              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    EQ              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    NE              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    AND             reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    OR              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    ID              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    RETURN          reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    READ            reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    WRITE           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    IF              reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    WHILE           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    FOR             reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    OPENPAR         reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    INT             reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    FLOAT           reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    CHAR            reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSECURLY      reduce using rule 111 (factor1 -> OPENBOX exp CLOSEBOX .)


state 193

    (59) retorno -> RETURN OPENPAR exp CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 211


state 194

    (60) lectura -> READ OPENPAR lista_ids CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 212


state 195

    (17) lista_ids -> ID lista_ids1 .

    CLOSEPAR        reduce using rule 17 (lista_ids -> ID lista_ids1 .)
    COMMA           reduce using rule 17 (lista_ids -> ID lista_ids1 .)


state 196

    (18) lista_ids1 -> lista_ids2 .

    CLOSEPAR        reduce using rule 18 (lista_ids1 -> lista_ids2 .)
    COMMA           reduce using rule 18 (lista_ids1 -> lista_ids2 .)


state 197

    (19) lista_ids1 -> OPENBOX . exp CLOSEBOX lista_ids2
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 213
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 198

    (20) lista_ids2 -> COMMA . lista_ids
    (17) lista_ids -> . ID lista_ids1

    ID              shift and go to state 169

    lista_ids                      shift and go to state 214

state 199

    (21) lista_ids2 -> epsilon .

    CLOSEPAR        reduce using rule 21 (lista_ids2 -> epsilon .)
    COMMA           reduce using rule 21 (lista_ids2 -> epsilon .)


state 200

    (61) escritura -> WRITE OPENPAR escritura1 CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 215


state 201

    (62) escritura1 -> STRING escritura2 .

    CLOSEPAR        reduce using rule 62 (escritura1 -> STRING escritura2 .)


state 202

    (64) escritura2 -> COMMA . escritura1
    (62) escritura1 -> . STRING escritura2
    (63) escritura1 -> . lista_ids escritura2
    (17) lista_ids -> . ID lista_ids1

    STRING          shift and go to state 171
    ID              shift and go to state 169

    escritura1                     shift and go to state 216
    lista_ids                      shift and go to state 172

state 203

    (65) escritura2 -> epsilon .

    CLOSEPAR        reduce using rule 65 (escritura2 -> epsilon .)


state 204

    (63) escritura1 -> lista_ids escritura2 .

    CLOSEPAR        reduce using rule 63 (escritura1 -> lista_ids escritura2 .)


state 205

    (66) condicion -> IF OPENPAR expresion CLOSEPAR . THEN OPENCURLY condicion1

    THEN            shift and go to state 217


state 206

    (73) while -> WHILE OPENPAR expresion CLOSEPAR . DO OPENCURLY while1

    DO              shift and go to state 218


state 207

    (76) for -> FOR ID for1 IS . exp TO exp DO OPENCURLY for2 CLOSECURLY
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 219
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 208

    (77) for1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 220


state 209

    (57) funcion2 -> COMMA funcion1 .

    MULTIPLY        reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    DIVIDE          reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    MODULO          reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    PLUS            reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    MINUS           reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    CLOSEBOX        reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    SEMICOLON       reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    LT              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    LE              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    GT              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    GE              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    EQ              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    NE              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    AND             reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    OR              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    ID              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    RETURN          reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    READ            reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    WRITE           reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    IF              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    WHILE           reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    FOR             reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    OPENPAR         reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    INT             reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    FLOAT           reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    CHAR            reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    CLOSECURLY      reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    CLOSEPAR        reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    COMMA           reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    TO              reduce using rule 57 (funcion2 -> COMMA funcion1 .)
    DO              reduce using rule 57 (funcion2 -> COMMA funcion1 .)


state 210

    (51) asignacion -> ID asignacion1 IS expresion SEMICOLON .

    ID              reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    RETURN          reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    READ            reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    WRITE           reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    IF              reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    WHILE           reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    FOR             reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    OPENPAR         reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    PLUS            reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    MINUS           reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    INT             reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    FLOAT           reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    CHAR            reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)
    CLOSECURLY      reduce using rule 51 (asignacion -> ID asignacion1 IS expresion SEMICOLON .)


state 211

    (59) retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .

    ID              reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    RETURN          reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    READ            reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    IF              reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    INT             reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 59 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)


state 212

    (60) lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .

    ID              reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    RETURN          reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    READ            reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    IF              reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    INT             reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 60 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)


state 213

    (19) lista_ids1 -> OPENBOX exp . CLOSEBOX lista_ids2

    CLOSEBOX        shift and go to state 221


state 214

    (20) lista_ids2 -> COMMA lista_ids .

    CLOSEPAR        reduce using rule 20 (lista_ids2 -> COMMA lista_ids .)
    COMMA           reduce using rule 20 (lista_ids2 -> COMMA lista_ids .)


state 215

    (61) escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .

    ID              reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    RETURN          reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    READ            reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    IF              reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    INT             reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 61 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)


state 216

    (64) escritura2 -> COMMA escritura1 .

    CLOSEPAR        reduce using rule 64 (escritura2 -> COMMA escritura1 .)


state 217

    (66) condicion -> IF OPENPAR expresion CLOSEPAR THEN . OPENCURLY condicion1

    OPENCURLY       shift and go to state 222


state 218

    (73) while -> WHILE OPENPAR expresion CLOSEPAR DO . OPENCURLY while1

    OPENCURLY       shift and go to state 223


state 219

    (76) for -> FOR ID for1 IS exp . TO exp DO OPENCURLY for2 CLOSECURLY

    TO              shift and go to state 224


state 220

    (77) for1 -> OPENBOX exp CLOSEBOX .

    IS              reduce using rule 77 (for1 -> OPENBOX exp CLOSEBOX .)


state 221

    (19) lista_ids1 -> OPENBOX exp CLOSEBOX . lista_ids2
    (20) lista_ids2 -> . COMMA lista_ids
    (21) lista_ids2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 198
    CLOSEPAR        reduce using rule 120 (epsilon -> .)

  ! COMMA           [ reduce using rule 120 (epsilon -> .) ]

    lista_ids2                     shift and go to state 225
    epsilon                        shift and go to state 199

state 222

    (66) condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY . condicion1
    (67) condicion1 -> . estatutos condicion1
    (68) condicion1 -> . CLOSECURLY condicion2
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 228
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    expresion                      shift and go to state 68
    condicion1                     shift and go to state 226
    estatutos                      shift and go to state 227
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 223

    (73) while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY . while1
    (74) while1 -> . estatutos while1
    (75) while1 -> . CLOSECURLY
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 231
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    expresion                      shift and go to state 68
    while1                         shift and go to state 229
    estatutos                      shift and go to state 230
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 224

    (76) for -> FOR ID for1 IS exp TO . exp DO OPENCURLY for2 CLOSECURLY
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (55) funcion -> . ID OPENPAR funcion1
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 45
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 232
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    funcion                        shift and go to state 47
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 225

    (19) lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2 .

    CLOSEPAR        reduce using rule 19 (lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2 .)
    COMMA           reduce using rule 19 (lista_ids1 -> OPENBOX exp CLOSEBOX lista_ids2 .)


state 226

    (66) condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .

    ID              reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    RETURN          reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    READ            reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    WRITE           reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    IF              reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    WHILE           reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    FOR             reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    OPENPAR         reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    PLUS            reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    MINUS           reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    INT             reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    FLOAT           reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    CHAR            reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    CLOSECURLY      reduce using rule 66 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)


state 227

    (67) condicion1 -> estatutos . condicion1
    (67) condicion1 -> . estatutos condicion1
    (68) condicion1 -> . CLOSECURLY condicion2
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 228
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    estatutos                      shift and go to state 227
    condicion1                     shift and go to state 233
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 228

    (68) condicion1 -> CLOSECURLY . condicion2
    (69) condicion2 -> . ELSE OPENCURLY condicion3
    (70) condicion2 -> . epsilon
    (120) epsilon -> .

    ELSE            shift and go to state 235
    ID              reduce using rule 120 (epsilon -> .)
    RETURN          reduce using rule 120 (epsilon -> .)
    READ            reduce using rule 120 (epsilon -> .)
    WRITE           reduce using rule 120 (epsilon -> .)
    IF              reduce using rule 120 (epsilon -> .)
    WHILE           reduce using rule 120 (epsilon -> .)
    FOR             reduce using rule 120 (epsilon -> .)
    OPENPAR         reduce using rule 120 (epsilon -> .)
    PLUS            reduce using rule 120 (epsilon -> .)
    MINUS           reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    CLOSECURLY      reduce using rule 120 (epsilon -> .)

    condicion2                     shift and go to state 234
    epsilon                        shift and go to state 236

state 229

    (73) while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .

    ID              reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    RETURN          reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    READ            reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    WRITE           reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    IF              reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    WHILE           reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    FOR             reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    OPENPAR         reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    PLUS            reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    MINUS           reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    INT             reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    FLOAT           reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    CHAR            reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    CLOSECURLY      reduce using rule 73 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)


state 230

    (74) while1 -> estatutos . while1
    (74) while1 -> . estatutos while1
    (75) while1 -> . CLOSECURLY
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 231
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    estatutos                      shift and go to state 230
    while1                         shift and go to state 237
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 231

    (75) while1 -> CLOSECURLY .

    ID              reduce using rule 75 (while1 -> CLOSECURLY .)
    RETURN          reduce using rule 75 (while1 -> CLOSECURLY .)
    READ            reduce using rule 75 (while1 -> CLOSECURLY .)
    WRITE           reduce using rule 75 (while1 -> CLOSECURLY .)
    IF              reduce using rule 75 (while1 -> CLOSECURLY .)
    WHILE           reduce using rule 75 (while1 -> CLOSECURLY .)
    FOR             reduce using rule 75 (while1 -> CLOSECURLY .)
    OPENPAR         reduce using rule 75 (while1 -> CLOSECURLY .)
    PLUS            reduce using rule 75 (while1 -> CLOSECURLY .)
    MINUS           reduce using rule 75 (while1 -> CLOSECURLY .)
    INT             reduce using rule 75 (while1 -> CLOSECURLY .)
    FLOAT           reduce using rule 75 (while1 -> CLOSECURLY .)
    CHAR            reduce using rule 75 (while1 -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 75 (while1 -> CLOSECURLY .)


state 232

    (76) for -> FOR ID for1 IS exp TO exp . DO OPENCURLY for2 CLOSECURLY

    DO              shift and go to state 238


state 233

    (67) condicion1 -> estatutos condicion1 .

    ID              reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    RETURN          reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    READ            reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    WRITE           reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    IF              reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    WHILE           reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    FOR             reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    OPENPAR         reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    PLUS            reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    MINUS           reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    INT             reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    FLOAT           reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    CHAR            reduce using rule 67 (condicion1 -> estatutos condicion1 .)
    CLOSECURLY      reduce using rule 67 (condicion1 -> estatutos condicion1 .)


state 234

    (68) condicion1 -> CLOSECURLY condicion2 .

    ID              reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    RETURN          reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    READ            reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    WRITE           reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    IF              reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    WHILE           reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    FOR             reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    OPENPAR         reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    PLUS            reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    MINUS           reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    INT             reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    FLOAT           reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    CHAR            reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)
    CLOSECURLY      reduce using rule 68 (condicion1 -> CLOSECURLY condicion2 .)


state 235

    (69) condicion2 -> ELSE . OPENCURLY condicion3

    OPENCURLY       shift and go to state 239


state 236

    (70) condicion2 -> epsilon .

    ID              reduce using rule 70 (condicion2 -> epsilon .)
    RETURN          reduce using rule 70 (condicion2 -> epsilon .)
    READ            reduce using rule 70 (condicion2 -> epsilon .)
    WRITE           reduce using rule 70 (condicion2 -> epsilon .)
    IF              reduce using rule 70 (condicion2 -> epsilon .)
    WHILE           reduce using rule 70 (condicion2 -> epsilon .)
    FOR             reduce using rule 70 (condicion2 -> epsilon .)
    OPENPAR         reduce using rule 70 (condicion2 -> epsilon .)
    PLUS            reduce using rule 70 (condicion2 -> epsilon .)
    MINUS           reduce using rule 70 (condicion2 -> epsilon .)
    INT             reduce using rule 70 (condicion2 -> epsilon .)
    FLOAT           reduce using rule 70 (condicion2 -> epsilon .)
    CHAR            reduce using rule 70 (condicion2 -> epsilon .)
    CLOSECURLY      reduce using rule 70 (condicion2 -> epsilon .)


state 237

    (74) while1 -> estatutos while1 .

    ID              reduce using rule 74 (while1 -> estatutos while1 .)
    RETURN          reduce using rule 74 (while1 -> estatutos while1 .)
    READ            reduce using rule 74 (while1 -> estatutos while1 .)
    WRITE           reduce using rule 74 (while1 -> estatutos while1 .)
    IF              reduce using rule 74 (while1 -> estatutos while1 .)
    WHILE           reduce using rule 74 (while1 -> estatutos while1 .)
    FOR             reduce using rule 74 (while1 -> estatutos while1 .)
    OPENPAR         reduce using rule 74 (while1 -> estatutos while1 .)
    PLUS            reduce using rule 74 (while1 -> estatutos while1 .)
    MINUS           reduce using rule 74 (while1 -> estatutos while1 .)
    INT             reduce using rule 74 (while1 -> estatutos while1 .)
    FLOAT           reduce using rule 74 (while1 -> estatutos while1 .)
    CHAR            reduce using rule 74 (while1 -> estatutos while1 .)
    CLOSECURLY      reduce using rule 74 (while1 -> estatutos while1 .)


state 238

    (76) for -> FOR ID for1 IS exp TO exp DO . OPENCURLY for2 CLOSECURLY

    OPENCURLY       shift and go to state 240


state 239

    (69) condicion2 -> ELSE OPENCURLY . condicion3
    (71) condicion3 -> . estatutos condicion3
    (72) condicion3 -> . CLOSECURLY
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 243
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    condicion3                     shift and go to state 241
    estatutos                      shift and go to state 242
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 240

    (76) for -> FOR ID for1 IS exp TO exp DO OPENCURLY . for2 CLOSECURLY
    (79) for2 -> . estatutos for2
    (80) for2 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    exp                            shift and go to state 71
    for2                           shift and go to state 244
    estatutos                      shift and go to state 245
    epsilon                        shift and go to state 246
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 241

    (69) condicion2 -> ELSE OPENCURLY condicion3 .

    ID              reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    RETURN          reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    READ            reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    WRITE           reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    IF              reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    WHILE           reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    FOR             reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    OPENPAR         reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    PLUS            reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    MINUS           reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    INT             reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    FLOAT           reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    CHAR            reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)
    CLOSECURLY      reduce using rule 69 (condicion2 -> ELSE OPENCURLY condicion3 .)


state 242

    (71) condicion3 -> estatutos . condicion3
    (71) condicion3 -> . estatutos condicion3
    (72) condicion3 -> . CLOSECURLY
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon
    (120) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 243
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    estatutos                      shift and go to state 242
    condicion3                     shift and go to state 247
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48
    epsilon                        shift and go to state 51

state 243

    (72) condicion3 -> CLOSECURLY .

    ID              reduce using rule 72 (condicion3 -> CLOSECURLY .)
    RETURN          reduce using rule 72 (condicion3 -> CLOSECURLY .)
    READ            reduce using rule 72 (condicion3 -> CLOSECURLY .)
    WRITE           reduce using rule 72 (condicion3 -> CLOSECURLY .)
    IF              reduce using rule 72 (condicion3 -> CLOSECURLY .)
    WHILE           reduce using rule 72 (condicion3 -> CLOSECURLY .)
    FOR             reduce using rule 72 (condicion3 -> CLOSECURLY .)
    OPENPAR         reduce using rule 72 (condicion3 -> CLOSECURLY .)
    PLUS            reduce using rule 72 (condicion3 -> CLOSECURLY .)
    MINUS           reduce using rule 72 (condicion3 -> CLOSECURLY .)
    INT             reduce using rule 72 (condicion3 -> CLOSECURLY .)
    FLOAT           reduce using rule 72 (condicion3 -> CLOSECURLY .)
    CHAR            reduce using rule 72 (condicion3 -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 72 (condicion3 -> CLOSECURLY .)


state 244

    (76) for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 . CLOSECURLY

    CLOSECURLY      shift and go to state 248


state 245

    (79) for2 -> estatutos . for2
    (79) for2 -> . estatutos for2
    (80) for2 -> . epsilon
    (40) estatutos -> . asignacion estatutos1
    (41) estatutos -> . llamada estatutos1
    (42) estatutos -> . retorno estatutos1
    (43) estatutos -> . lectura estatutos1
    (44) estatutos -> . escritura estatutos1
    (45) estatutos -> . condicion estatutos1
    (46) estatutos -> . while estatutos1
    (47) estatutos -> . for estatutos1
    (48) estatutos -> . expresion estatutos1
    (120) epsilon -> .
    (51) asignacion -> . ID asignacion1 IS expresion SEMICOLON
    (54) llamada -> . funcion SEMICOLON
    (59) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (60) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (61) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (66) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (73) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (76) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (81) expresion -> . or
    (55) funcion -> . ID OPENPAR funcion1
    (82) or -> . and or1
    (85) and -> . equal and1
    (88) equal -> . compare equal1
    (92) compare -> . exp compare1
    (98) exp -> . termino exp1
    (102) termino -> . factor termino1
    (107) factor -> . ID factor1
    (108) factor -> . OPENPAR expresion CLOSEPAR
    (109) factor -> . funcion
    (110) factor -> . factor2 varcte
    (113) factor2 -> . PLUS
    (114) factor2 -> . MINUS
    (115) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 120 (epsilon -> .)
    INT             reduce using rule 120 (epsilon -> .)
    FLOAT           reduce using rule 120 (epsilon -> .)
    CHAR            reduce using rule 120 (epsilon -> .)
    ID              shift and go to state 56
    RETURN          shift and go to state 70
    READ            shift and go to state 72
    WRITE           shift and go to state 73
    IF              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76
    OPENPAR         shift and go to state 46
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! ID              [ reduce using rule 120 (epsilon -> .) ]

    estatutos                      shift and go to state 245
    for2                           shift and go to state 249
    epsilon                        shift and go to state 246
    asignacion                     shift and go to state 60
    llamada                        shift and go to state 61
    retorno                        shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 64
    condicion                      shift and go to state 65
    while                          shift and go to state 66
    for                            shift and go to state 67
    expresion                      shift and go to state 68
    funcion                        shift and go to state 69
    exp                            shift and go to state 71
    or                             shift and go to state 77
    and                            shift and go to state 78
    equal                          shift and go to state 79
    compare                        shift and go to state 80
    termino                        shift and go to state 43
    factor                         shift and go to state 44
    factor2                        shift and go to state 48

state 246

    (80) for2 -> epsilon .
    (115) factor2 -> epsilon .

    CLOSECURLY      reduce using rule 80 (for2 -> epsilon .)
    ID              reduce using rule 115 (factor2 -> epsilon .)
    INT             reduce using rule 115 (factor2 -> epsilon .)
    FLOAT           reduce using rule 115 (factor2 -> epsilon .)
    CHAR            reduce using rule 115 (factor2 -> epsilon .)


state 247

    (71) condicion3 -> estatutos condicion3 .

    ID              reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    RETURN          reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    READ            reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    WRITE           reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    IF              reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    WHILE           reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    FOR             reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    OPENPAR         reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    PLUS            reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    MINUS           reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    INT             reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    FLOAT           reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    CHAR            reduce using rule 71 (condicion3 -> estatutos condicion3 .)
    CLOSECURLY      reduce using rule 71 (condicion3 -> estatutos condicion3 .)


state 248

    (76) for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .

    ID              reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    RETURN          reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    READ            reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    WRITE           reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    IF              reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    WHILE           reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    FOR             reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    OPENPAR         reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    PLUS            reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    MINUS           reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    INT             reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    FLOAT           reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    CHAR            reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    CLOSECURLY      reduce using rule 76 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)


state 249

    (79) for2 -> estatutos for2 .

    CLOSECURLY      reduce using rule 79 (for2 -> estatutos for2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 45 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 60 resolved as shift
WARNING: shift/reduce conflict for READ in state 60 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 61 resolved as shift
WARNING: shift/reduce conflict for READ in state 61 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 62 resolved as shift
WARNING: shift/reduce conflict for READ in state 62 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for FOR in state 62 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 63 resolved as shift
WARNING: shift/reduce conflict for READ in state 63 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 64 resolved as shift
WARNING: shift/reduce conflict for READ in state 64 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for FOR in state 64 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 65 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 65 resolved as shift
WARNING: shift/reduce conflict for READ in state 65 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 66 resolved as shift
WARNING: shift/reduce conflict for READ in state 66 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 67 resolved as shift
WARNING: shift/reduce conflict for READ in state 67 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 68 resolved as shift
WARNING: shift/reduce conflict for READ in state 68 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for FOR in state 68 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for ID in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 124 resolved as shift
WARNING: shift/reduce conflict for ID in state 125 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for ID in state 135 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 149 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for ID in state 188 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 207 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 223 resolved as shift
WARNING: shift/reduce conflict for ID in state 224 resolved as shift
WARNING: shift/reduce conflict for ID in state 227 resolved as shift
WARNING: shift/reduce conflict for ID in state 230 resolved as shift
WARNING: shift/reduce conflict for ID in state 239 resolved as shift
WARNING: shift/reduce conflict for ID in state 240 resolved as shift
WARNING: shift/reduce conflict for ID in state 242 resolved as shift
WARNING: shift/reduce conflict for ID in state 245 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (programa2 -> epsilon)
WARNING: rejected rule (funciones -> epsilon) in state 11
WARNING: reduce/reduce conflict in state 112 resolved using rule (estatutos1 -> epsilon)
WARNING: rejected rule (factor2 -> epsilon) in state 112
