Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
Rule 2     programa1 -> ID SEMICOLON vars
Rule 3     programa1 -> ID SEMICOLON
Rule 4     programa2 -> funciones
Rule 5     programa2 -> epsilon
Rule 6     programa3 -> estatutos
Rule 7     programa3 -> epsilon
Rule 8     main -> MAIN
Rule 9     vars -> VARS vars1
Rule 10    vars1 -> tipo COLON vars2
Rule 11    vars2 -> ID vars3
Rule 12    vars3 -> OPENBOX exp CLOSEBOX vars4
Rule 13    vars3 -> vars4
Rule 14    vars4 -> SEMICOLON vars5
Rule 15    vars4 -> COMMA vars2
Rule 16    vars5 -> vars1
Rule 17    vars5 -> epsilon
Rule 18    lista_ids -> ID OPENBOX exp CLOSEBOX lista_ids1
Rule 19    lista_ids -> ID lista_ids1
Rule 20    lista_ids -> STRING lista_ids1
Rule 21    lista_ids1 -> COMMA lista_ids
Rule 22    lista_ids1 -> epsilon
Rule 23    tipo -> TYPEFLOAT
Rule 24    tipo -> TYPEINT
Rule 25    tipo -> TYPECHAR
Rule 26    tipo_void -> TYPEVOID
Rule 27    funciones -> FUNCTION funciones1
Rule 28    funciones -> epsilon
Rule 29    funciones1 -> tipo funciones2 funciones3
Rule 30    funciones1 -> tipo_void funciones2 funciones3
Rule 31    funciones2 -> ID OPENPAR
Rule 32    funciones3 -> parameters funciones4
Rule 33    funciones3 -> funciones4
Rule 34    funciones4 -> CLOSEPAR funciones5
Rule 35    funciones5 -> vars guardar_func OPENCURLY funciones6
Rule 36    funciones5 -> guardar_func OPENCURLY funciones6
Rule 37    funciones6 -> estatutos funciones6
Rule 38    funciones6 -> CLOSECURLY funciones
Rule 39    guardar_func -> epsilon
Rule 40    parameters -> tipo ID parameters1
Rule 41    parameters1 -> COMMA parameters
Rule 42    parameters1 -> epsilon
Rule 43    estatutos -> asignacion estatutos1
Rule 44    estatutos -> llamada estatutos1
Rule 45    estatutos -> retorno estatutos1
Rule 46    estatutos -> lectura estatutos1
Rule 47    estatutos -> escritura estatutos1
Rule 48    estatutos -> condicion estatutos1
Rule 49    estatutos -> while estatutos1
Rule 50    estatutos -> for estatutos1
Rule 51    estatutos -> est_exp estatutos1
Rule 52    estatutos1 -> estatutos
Rule 53    estatutos1 -> epsilon
Rule 54    asignacion -> asignacion1 expresion SEMICOLON
Rule 55    asignacion1 -> ID OPENBOX exp CLOSEBOX IS
Rule 56    asignacion1 -> ID IS
Rule 57    llamada -> funcion SEMICOLON
Rule 58    funcion -> ID OPENPAR funcion1
Rule 59    funcion1 -> exp funcion2
Rule 60    funcion2 -> COMMA funcion1
Rule 61    funcion2 -> CLOSEPAR
Rule 62    retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON
Rule 63    lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON
Rule 64    escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
Rule 65    escritura1 -> lista_ids escritura2
Rule 66    escritura2 -> COMMA escritura1
Rule 67    escritura2 -> epsilon
Rule 68    condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
Rule 69    condicion1 -> estatutos condicion1
Rule 70    condicion1 -> CLOSECURLY condicion2
Rule 71    condicion2 -> ELSE OPENCURLY condicion3
Rule 72    condicion2 -> epsilon
Rule 73    condicion3 -> estatutos condicion3
Rule 74    condicion3 -> CLOSECURLY
Rule 75    while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
Rule 76    while1 -> estatutos while1
Rule 77    while1 -> CLOSECURLY
Rule 78    for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
Rule 79    for1 -> OPENBOX exp CLOSEBOX
Rule 80    for1 -> epsilon
Rule 81    for2 -> estatutos for2
Rule 82    for2 -> epsilon
Rule 83    est_exp -> expresion SEMICOLON
Rule 84    expresion -> and expression1
Rule 85    expresion -> and expression1 expression2 expresion
Rule 86    expression1 -> epsilon
Rule 87    expression2 -> OR
Rule 88    and -> equal and1
Rule 89    and -> equal and1 and2 and
Rule 90    and1 -> epsilon
Rule 91    and2 -> AND
Rule 92    equal -> compare equal1
Rule 93    equal -> compare equal1 equal2 equal
Rule 94    equal1 -> epsilon
Rule 95    equal2 -> EQ
Rule 96    equal2 -> NE
Rule 97    compare -> exp compare1
Rule 98    compare -> exp compare1 compare2 compare
Rule 99    compare1 -> epsilon
Rule 100   compare2 -> LT
Rule 101   compare2 -> LE
Rule 102   compare2 -> GT
Rule 103   compare2 -> GE
Rule 104   exp -> termino exp1
Rule 105   exp -> termino exp1 exp2 exp
Rule 106   exp1 -> epsilon
Rule 107   exp2 -> PLUS
Rule 108   exp2 -> MINUS
Rule 109   termino -> factor termino1
Rule 110   termino -> factor termino1 termino2 termino
Rule 111   termino1 -> epsilon
Rule 112   termino2 -> MULTIPLY
Rule 113   termino2 -> DIVIDE
Rule 114   termino2 -> MODULO
Rule 115   factor -> ID factor1
Rule 116   factor -> openpar expresion closepar
Rule 117   factor -> funcion
Rule 118   factor -> factor2 varcte
Rule 119   openpar -> OPENPAR
Rule 120   closepar -> CLOSEPAR
Rule 121   factor1 -> OPENBOX exp CLOSEBOX
Rule 122   factor1 -> epsilon
Rule 123   factor2 -> PLUS
Rule 124   factor2 -> MINUS
Rule 125   factor2 -> epsilon
Rule 126   varcte -> ID
Rule 127   varcte -> INT
Rule 128   varcte -> FLOAT
Rule 129   varcte -> CHAR
Rule 130   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 91
CHAR                 : 129
CLOSEBOX             : 12 18 55 79 121
CLOSECURLY           : 1 38 70 74 77 78
CLOSEPAR             : 1 34 61 62 63 64 68 75 120
COLON                : 10
COMMA                : 15 21 41 60 66
DIVIDE               : 113
DO                   : 75 78
ELSE                 : 71
EQ                   : 95
FLOAT                : 128
FOR                  : 78
FUNCTION             : 27
GE                   : 103
GT                   : 102
ID                   : 2 3 11 18 19 31 40 55 56 58 78 115 126
IF                   : 68
INT                  : 127
IS                   : 55 56 78
LE                   : 101
LT                   : 100
MAIN                 : 8
MINUS                : 108 124
MODULO               : 114
MULTIPLY             : 112
NE                   : 96
OPENBOX              : 12 18 55 79 121
OPENCURLY            : 1 35 36 68 71 75 78
OPENPAR              : 1 31 58 62 63 64 68 75 119
OR                   : 87
PLUS                 : 107 123
PROGRAM              : 1
READ                 : 63
RETURN               : 62
SEMICOLON            : 2 3 14 54 57 62 63 64 83
STRING               : 20
THEN                 : 68
TO                   : 78
TYPECHAR             : 25
TYPEFLOAT            : 23
TYPEINT              : 24
TYPEVOID             : 26
VARS                 : 9
WHILE                : 75
WRITE                : 64
error                : 

Nonterminals, with rules where they appear

and                  : 84 85 89
and1                 : 88 89
and2                 : 89
asignacion           : 43
asignacion1          : 54
closepar             : 116
compare              : 92 93 98
compare1             : 97 98
compare2             : 98
condicion            : 48
condicion1           : 68 69
condicion2           : 70
condicion3           : 71 73
epsilon              : 5 7 17 22 28 39 42 53 67 72 80 82 86 90 94 99 106 111 122 125
equal                : 88 89 93
equal1               : 92 93
equal2               : 93
escritura            : 47
escritura1           : 64 66
escritura2           : 65
est_exp              : 51
estatutos            : 6 37 52 69 73 76 81
estatutos1           : 43 44 45 46 47 48 49 50 51
exp                  : 12 18 55 59 62 78 78 79 97 98 105 121
exp1                 : 104 105
exp2                 : 105
expresion            : 54 68 75 83 85 116
expression1          : 84 85
expression2          : 85
factor               : 109 110
factor1              : 115
factor2              : 118
for                  : 50
for1                 : 78
for2                 : 78 81
funcion              : 57 117
funcion1             : 58 60
funcion2             : 59
funciones            : 4 38
funciones1           : 27
funciones2           : 29 30
funciones3           : 29 30
funciones4           : 32 33
funciones5           : 34
funciones6           : 35 36 37
guardar_func         : 35 36
lectura              : 46
lista_ids            : 21 63 65
lista_ids1           : 18 19 20
llamada              : 44
main                 : 1
openpar              : 116
parameters           : 32 41
parameters1          : 40
programa             : 0
programa1            : 1
programa2            : 1
programa3            : 1
retorno              : 45
termino              : 104 105 110
termino1             : 109 110
termino2             : 110
tipo                 : 10 29 40
tipo_void            : 30
varcte               : 118
vars                 : 2 35
vars1                : 9 16
vars2                : 10 15
vars3                : 11
vars4                : 12 13
vars5                : 14
while                : 49
while1               : 75 76

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
    (2) programa1 -> . ID SEMICOLON vars
    (3) programa1 -> . ID SEMICOLON

    ID              shift and go to state 4

    programa1                      shift and go to state 3

state 3

    (1) programa -> PROGRAM programa1 . programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
    (4) programa2 -> . funciones
    (5) programa2 -> . epsilon
    (27) funciones -> . FUNCTION funciones1
    (28) funciones -> . epsilon
    (130) epsilon -> .

    FUNCTION        shift and go to state 8
    MAIN            reduce using rule 130 (epsilon -> .)

    programa2                      shift and go to state 5
    funciones                      shift and go to state 6
    epsilon                        shift and go to state 7

state 4

    (2) programa1 -> ID . SEMICOLON vars
    (3) programa1 -> ID . SEMICOLON

    SEMICOLON       shift and go to state 9


state 5

    (1) programa -> PROGRAM programa1 programa2 . main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY
    (8) main -> . MAIN

    MAIN            shift and go to state 11

    main                           shift and go to state 10

state 6

    (4) programa2 -> funciones .

    MAIN            reduce using rule 4 (programa2 -> funciones .)


state 7

    (5) programa2 -> epsilon .
    (28) funciones -> epsilon .

  ! reduce/reduce conflict for MAIN resolved using rule 5 (programa2 -> epsilon .)
    MAIN            reduce using rule 5 (programa2 -> epsilon .)

  ! MAIN            [ reduce using rule 28 (funciones -> epsilon .) ]


state 8

    (27) funciones -> FUNCTION . funciones1
    (29) funciones1 -> . tipo funciones2 funciones3
    (30) funciones1 -> . tipo_void funciones2 funciones3
    (23) tipo -> . TYPEFLOAT
    (24) tipo -> . TYPEINT
    (25) tipo -> . TYPECHAR
    (26) tipo_void -> . TYPEVOID

    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17
    TYPEVOID        shift and go to state 18

    funciones1                     shift and go to state 12
    tipo                           shift and go to state 13
    tipo_void                      shift and go to state 14

state 9

    (2) programa1 -> ID SEMICOLON . vars
    (3) programa1 -> ID SEMICOLON .
    (9) vars -> . VARS vars1

    FUNCTION        reduce using rule 3 (programa1 -> ID SEMICOLON .)
    MAIN            reduce using rule 3 (programa1 -> ID SEMICOLON .)
    VARS            shift and go to state 20

    vars                           shift and go to state 19

state 10

    (1) programa -> PROGRAM programa1 programa2 main . OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY

    OPENPAR         shift and go to state 21


state 11

    (8) main -> MAIN .

    OPENPAR         reduce using rule 8 (main -> MAIN .)


state 12

    (27) funciones -> FUNCTION funciones1 .

    MAIN            reduce using rule 27 (funciones -> FUNCTION funciones1 .)


state 13

    (29) funciones1 -> tipo . funciones2 funciones3
    (31) funciones2 -> . ID OPENPAR

    ID              shift and go to state 23

    funciones2                     shift and go to state 22

state 14

    (30) funciones1 -> tipo_void . funciones2 funciones3
    (31) funciones2 -> . ID OPENPAR

    ID              shift and go to state 23

    funciones2                     shift and go to state 24

state 15

    (23) tipo -> TYPEFLOAT .

    ID              reduce using rule 23 (tipo -> TYPEFLOAT .)
    COLON           reduce using rule 23 (tipo -> TYPEFLOAT .)


state 16

    (24) tipo -> TYPEINT .

    ID              reduce using rule 24 (tipo -> TYPEINT .)
    COLON           reduce using rule 24 (tipo -> TYPEINT .)


state 17

    (25) tipo -> TYPECHAR .

    ID              reduce using rule 25 (tipo -> TYPECHAR .)
    COLON           reduce using rule 25 (tipo -> TYPECHAR .)


state 18

    (26) tipo_void -> TYPEVOID .

    ID              reduce using rule 26 (tipo_void -> TYPEVOID .)


state 19

    (2) programa1 -> ID SEMICOLON vars .

    FUNCTION        reduce using rule 2 (programa1 -> ID SEMICOLON vars .)
    MAIN            reduce using rule 2 (programa1 -> ID SEMICOLON vars .)


state 20

    (9) vars -> VARS . vars1
    (10) vars1 -> . tipo COLON vars2
    (23) tipo -> . TYPEFLOAT
    (24) tipo -> . TYPEINT
    (25) tipo -> . TYPECHAR

    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    vars1                          shift and go to state 25
    tipo                           shift and go to state 26

state 21

    (1) programa -> PROGRAM programa1 programa2 main OPENPAR . CLOSEPAR OPENCURLY programa3 CLOSECURLY

    CLOSEPAR        shift and go to state 27


state 22

    (29) funciones1 -> tipo funciones2 . funciones3
    (32) funciones3 -> . parameters funciones4
    (33) funciones3 -> . funciones4
    (40) parameters -> . tipo ID parameters1
    (34) funciones4 -> . CLOSEPAR funciones5
    (23) tipo -> . TYPEFLOAT
    (24) tipo -> . TYPEINT
    (25) tipo -> . TYPECHAR

    CLOSEPAR        shift and go to state 32
    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    tipo                           shift and go to state 28
    funciones3                     shift and go to state 29
    parameters                     shift and go to state 30
    funciones4                     shift and go to state 31

state 23

    (31) funciones2 -> ID . OPENPAR

    OPENPAR         shift and go to state 33


state 24

    (30) funciones1 -> tipo_void funciones2 . funciones3
    (32) funciones3 -> . parameters funciones4
    (33) funciones3 -> . funciones4
    (40) parameters -> . tipo ID parameters1
    (34) funciones4 -> . CLOSEPAR funciones5
    (23) tipo -> . TYPEFLOAT
    (24) tipo -> . TYPEINT
    (25) tipo -> . TYPECHAR

    CLOSEPAR        shift and go to state 32
    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    funciones3                     shift and go to state 34
    parameters                     shift and go to state 30
    funciones4                     shift and go to state 31
    tipo                           shift and go to state 28

state 25

    (9) vars -> VARS vars1 .

    FUNCTION        reduce using rule 9 (vars -> VARS vars1 .)
    MAIN            reduce using rule 9 (vars -> VARS vars1 .)
    OPENCURLY       reduce using rule 9 (vars -> VARS vars1 .)


state 26

    (10) vars1 -> tipo . COLON vars2

    COLON           shift and go to state 35


state 27

    (1) programa -> PROGRAM programa1 programa2 main OPENPAR CLOSEPAR . OPENCURLY programa3 CLOSECURLY

    OPENCURLY       shift and go to state 36


state 28

    (40) parameters -> tipo . ID parameters1

    ID              shift and go to state 37


state 29

    (29) funciones1 -> tipo funciones2 funciones3 .

    MAIN            reduce using rule 29 (funciones1 -> tipo funciones2 funciones3 .)


state 30

    (32) funciones3 -> parameters . funciones4
    (34) funciones4 -> . CLOSEPAR funciones5

    CLOSEPAR        shift and go to state 32

    funciones4                     shift and go to state 38

state 31

    (33) funciones3 -> funciones4 .

    MAIN            reduce using rule 33 (funciones3 -> funciones4 .)


state 32

    (34) funciones4 -> CLOSEPAR . funciones5
    (35) funciones5 -> . vars guardar_func OPENCURLY funciones6
    (36) funciones5 -> . guardar_func OPENCURLY funciones6
    (9) vars -> . VARS vars1
    (39) guardar_func -> . epsilon
    (130) epsilon -> .

    VARS            shift and go to state 20
    OPENCURLY       reduce using rule 130 (epsilon -> .)

    funciones5                     shift and go to state 39
    vars                           shift and go to state 40
    guardar_func                   shift and go to state 41
    epsilon                        shift and go to state 42

state 33

    (31) funciones2 -> ID OPENPAR .

    CLOSEPAR        reduce using rule 31 (funciones2 -> ID OPENPAR .)
    TYPEFLOAT       reduce using rule 31 (funciones2 -> ID OPENPAR .)
    TYPEINT         reduce using rule 31 (funciones2 -> ID OPENPAR .)
    TYPECHAR        reduce using rule 31 (funciones2 -> ID OPENPAR .)


state 34

    (30) funciones1 -> tipo_void funciones2 funciones3 .

    MAIN            reduce using rule 30 (funciones1 -> tipo_void funciones2 funciones3 .)


state 35

    (10) vars1 -> tipo COLON . vars2
    (11) vars2 -> . ID vars3

    ID              shift and go to state 44

    vars2                          shift and go to state 43

state 36

    (1) programa -> PROGRAM programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY . programa3 CLOSECURLY
    (6) programa3 -> . estatutos
    (7) programa3 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    programa3                      shift and go to state 46
    estatutos                      shift and go to state 47
    epsilon                        shift and go to state 48
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 37

    (40) parameters -> tipo ID . parameters1
    (41) parameters1 -> . COMMA parameters
    (42) parameters1 -> . epsilon
    (130) epsilon -> .

    COMMA           shift and go to state 79
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

    parameters1                    shift and go to state 78
    epsilon                        shift and go to state 80

state 38

    (32) funciones3 -> parameters funciones4 .

    MAIN            reduce using rule 32 (funciones3 -> parameters funciones4 .)


state 39

    (34) funciones4 -> CLOSEPAR funciones5 .

    MAIN            reduce using rule 34 (funciones4 -> CLOSEPAR funciones5 .)


state 40

    (35) funciones5 -> vars . guardar_func OPENCURLY funciones6
    (39) guardar_func -> . epsilon
    (130) epsilon -> .

    OPENCURLY       reduce using rule 130 (epsilon -> .)

    guardar_func                   shift and go to state 81
    epsilon                        shift and go to state 42

state 41

    (36) funciones5 -> guardar_func . OPENCURLY funciones6

    OPENCURLY       shift and go to state 82


state 42

    (39) guardar_func -> epsilon .

    OPENCURLY       reduce using rule 39 (guardar_func -> epsilon .)


state 43

    (10) vars1 -> tipo COLON vars2 .

    FUNCTION        reduce using rule 10 (vars1 -> tipo COLON vars2 .)
    MAIN            reduce using rule 10 (vars1 -> tipo COLON vars2 .)
    OPENCURLY       reduce using rule 10 (vars1 -> tipo COLON vars2 .)


state 44

    (11) vars2 -> ID . vars3
    (12) vars3 -> . OPENBOX exp CLOSEBOX vars4
    (13) vars3 -> . vars4
    (14) vars4 -> . SEMICOLON vars5
    (15) vars4 -> . COMMA vars2

    OPENBOX         shift and go to state 84
    SEMICOLON       shift and go to state 86
    COMMA           shift and go to state 87

    vars3                          shift and go to state 83
    vars4                          shift and go to state 85

state 45

    (119) openpar -> OPENPAR .

    ID              reduce using rule 119 (openpar -> OPENPAR .)
    OPENPAR         reduce using rule 119 (openpar -> OPENPAR .)
    PLUS            reduce using rule 119 (openpar -> OPENPAR .)
    MINUS           reduce using rule 119 (openpar -> OPENPAR .)
    INT             reduce using rule 119 (openpar -> OPENPAR .)
    FLOAT           reduce using rule 119 (openpar -> OPENPAR .)
    CHAR            reduce using rule 119 (openpar -> OPENPAR .)


state 46

    (1) programa -> PROGRAM programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 . CLOSECURLY

    CLOSECURLY      shift and go to state 88


state 47

    (6) programa3 -> estatutos .

    CLOSECURLY      reduce using rule 6 (programa3 -> estatutos .)


state 48

    (7) programa3 -> epsilon .
    (125) factor2 -> epsilon .

    CLOSECURLY      reduce using rule 7 (programa3 -> epsilon .)
    ID              reduce using rule 125 (factor2 -> epsilon .)
    INT             reduce using rule 125 (factor2 -> epsilon .)
    FLOAT           reduce using rule 125 (factor2 -> epsilon .)
    CHAR            reduce using rule 125 (factor2 -> epsilon .)


state 49

    (43) estatutos -> asignacion . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    asignacion                     shift and go to state 49
    estatutos1                     shift and go to state 89
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 50

    (44) estatutos -> llamada . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    llamada                        shift and go to state 50
    estatutos1                     shift and go to state 92
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 51

    (45) estatutos -> retorno . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    retorno                        shift and go to state 51
    estatutos1                     shift and go to state 93
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 52

    (46) estatutos -> lectura . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    lectura                        shift and go to state 52
    estatutos1                     shift and go to state 94
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 53

    (47) estatutos -> escritura . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    escritura                      shift and go to state 53
    estatutos1                     shift and go to state 95
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 54

    (48) estatutos -> condicion . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    condicion                      shift and go to state 54
    estatutos1                     shift and go to state 96
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 55

    (49) estatutos -> while . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    while                          shift and go to state 55
    estatutos1                     shift and go to state 97
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 56

    (50) estatutos -> for . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    for                            shift and go to state 56
    estatutos1                     shift and go to state 98
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 57

    (51) estatutos -> est_exp . estatutos1
    (52) estatutos1 -> . estatutos
    (53) estatutos1 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for OPENPAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! READ            [ reduce using rule 130 (epsilon -> .) ]
  ! WRITE           [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! OPENPAR         [ reduce using rule 130 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 130 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 130 (epsilon -> .) ]

    est_exp                        shift and go to state 57
    estatutos1                     shift and go to state 99
    estatutos                      shift and go to state 90
    epsilon                        shift and go to state 91
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 58

    (54) asignacion -> asignacion1 . expresion SEMICOLON
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    expresion                      shift and go to state 100
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    exp                            shift and go to state 62
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 59

    (83) est_exp -> expresion . SEMICOLON

    SEMICOLON       shift and go to state 104


state 60

    (57) llamada -> funcion . SEMICOLON
    (117) factor -> funcion .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 105
    MULTIPLY        reduce using rule 117 (factor -> funcion .)
    DIVIDE          reduce using rule 117 (factor -> funcion .)
    MODULO          reduce using rule 117 (factor -> funcion .)
    PLUS            reduce using rule 117 (factor -> funcion .)
    MINUS           reduce using rule 117 (factor -> funcion .)
    LT              reduce using rule 117 (factor -> funcion .)
    LE              reduce using rule 117 (factor -> funcion .)
    GT              reduce using rule 117 (factor -> funcion .)
    GE              reduce using rule 117 (factor -> funcion .)
    EQ              reduce using rule 117 (factor -> funcion .)
    NE              reduce using rule 117 (factor -> funcion .)
    AND             reduce using rule 117 (factor -> funcion .)
    OR              reduce using rule 117 (factor -> funcion .)

  ! SEMICOLON       [ reduce using rule 117 (factor -> funcion .) ]


state 61

    (62) retorno -> RETURN . OPENPAR exp CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 106


state 62

    (97) compare -> exp . compare1
    (98) compare -> exp . compare1 compare2 compare
    (99) compare1 -> . epsilon
    (130) epsilon -> .

    LT              reduce using rule 130 (epsilon -> .)
    LE              reduce using rule 130 (epsilon -> .)
    GT              reduce using rule 130 (epsilon -> .)
    GE              reduce using rule 130 (epsilon -> .)
    EQ              reduce using rule 130 (epsilon -> .)
    NE              reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

    compare1                       shift and go to state 107
    epsilon                        shift and go to state 108

state 63

    (63) lectura -> READ . OPENPAR lista_ids CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 109


state 64

    (64) escritura -> WRITE . OPENPAR escritura1 CLOSEPAR SEMICOLON

    OPENPAR         shift and go to state 110


state 65

    (68) condicion -> IF . OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1

    OPENPAR         shift and go to state 111


state 66

    (75) while -> WHILE . OPENPAR expresion CLOSEPAR DO OPENCURLY while1

    OPENPAR         shift and go to state 112


state 67

    (78) for -> FOR . ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY

    ID              shift and go to state 113


state 68

    (55) asignacion1 -> ID . OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> ID . IS
    (58) funcion -> ID . OPENPAR funcion1
    (115) factor -> ID . factor1
    (121) factor1 -> . OPENBOX exp CLOSEBOX
    (122) factor1 -> . epsilon
    (130) epsilon -> .

    OPENBOX         shift and go to state 114
    IS              shift and go to state 115
    OPENPAR         shift and go to state 116
    MULTIPLY        reduce using rule 130 (epsilon -> .)
    DIVIDE          reduce using rule 130 (epsilon -> .)
    MODULO          reduce using rule 130 (epsilon -> .)
    PLUS            reduce using rule 130 (epsilon -> .)
    MINUS           reduce using rule 130 (epsilon -> .)
    LT              reduce using rule 130 (epsilon -> .)
    LE              reduce using rule 130 (epsilon -> .)
    GT              reduce using rule 130 (epsilon -> .)
    GE              reduce using rule 130 (epsilon -> .)
    EQ              reduce using rule 130 (epsilon -> .)
    NE              reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)

    factor1                        shift and go to state 117
    epsilon                        shift and go to state 118

state 69

    (84) expresion -> and . expression1
    (85) expresion -> and . expression1 expression2 expresion
    (86) expression1 -> . epsilon
    (130) epsilon -> .

    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

    expression1                    shift and go to state 119
    epsilon                        shift and go to state 120

state 70

    (88) and -> equal . and1
    (89) and -> equal . and1 and2 and
    (90) and1 -> . epsilon
    (130) epsilon -> .

    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

    and1                           shift and go to state 121
    epsilon                        shift and go to state 122

state 71

    (92) equal -> compare . equal1
    (93) equal -> compare . equal1 equal2 equal
    (94) equal1 -> . epsilon
    (130) epsilon -> .

    EQ              reduce using rule 130 (epsilon -> .)
    NE              reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

    equal1                         shift and go to state 123
    epsilon                        shift and go to state 124

state 72

    (104) exp -> termino . exp1
    (105) exp -> termino . exp1 exp2 exp
    (106) exp1 -> . epsilon
    (130) epsilon -> .

    PLUS            reduce using rule 130 (epsilon -> .)
    MINUS           reduce using rule 130 (epsilon -> .)
    LT              reduce using rule 130 (epsilon -> .)
    LE              reduce using rule 130 (epsilon -> .)
    GT              reduce using rule 130 (epsilon -> .)
    GE              reduce using rule 130 (epsilon -> .)
    EQ              reduce using rule 130 (epsilon -> .)
    NE              reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    CLOSEPAR        reduce using rule 130 (epsilon -> .)
    CLOSEBOX        reduce using rule 130 (epsilon -> .)
    COMMA           reduce using rule 130 (epsilon -> .)
    TO              reduce using rule 130 (epsilon -> .)
    DO              reduce using rule 130 (epsilon -> .)

    exp1                           shift and go to state 125
    epsilon                        shift and go to state 126

state 73

    (109) termino -> factor . termino1
    (110) termino -> factor . termino1 termino2 termino
    (111) termino1 -> . epsilon
    (130) epsilon -> .

    MULTIPLY        reduce using rule 130 (epsilon -> .)
    DIVIDE          reduce using rule 130 (epsilon -> .)
    MODULO          reduce using rule 130 (epsilon -> .)
    PLUS            reduce using rule 130 (epsilon -> .)
    MINUS           reduce using rule 130 (epsilon -> .)
    LT              reduce using rule 130 (epsilon -> .)
    LE              reduce using rule 130 (epsilon -> .)
    GT              reduce using rule 130 (epsilon -> .)
    GE              reduce using rule 130 (epsilon -> .)
    EQ              reduce using rule 130 (epsilon -> .)
    NE              reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    CLOSEPAR        reduce using rule 130 (epsilon -> .)
    CLOSEBOX        reduce using rule 130 (epsilon -> .)
    COMMA           reduce using rule 130 (epsilon -> .)
    TO              reduce using rule 130 (epsilon -> .)
    DO              reduce using rule 130 (epsilon -> .)

    termino1                       shift and go to state 127
    epsilon                        shift and go to state 128

state 74

    (116) factor -> openpar . expresion closepar
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    openpar                        shift and go to state 74
    expresion                      shift and go to state 129
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    exp                            shift and go to state 62
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 75

    (118) factor -> factor2 . varcte
    (126) varcte -> . ID
    (127) varcte -> . INT
    (128) varcte -> . FLOAT
    (129) varcte -> . CHAR

    ID              shift and go to state 131
    INT             shift and go to state 132
    FLOAT           shift and go to state 133
    CHAR            shift and go to state 134

    varcte                         shift and go to state 130

state 76

    (123) factor2 -> PLUS .

    ID              reduce using rule 123 (factor2 -> PLUS .)
    INT             reduce using rule 123 (factor2 -> PLUS .)
    FLOAT           reduce using rule 123 (factor2 -> PLUS .)
    CHAR            reduce using rule 123 (factor2 -> PLUS .)


state 77

    (124) factor2 -> MINUS .

    ID              reduce using rule 124 (factor2 -> MINUS .)
    INT             reduce using rule 124 (factor2 -> MINUS .)
    FLOAT           reduce using rule 124 (factor2 -> MINUS .)
    CHAR            reduce using rule 124 (factor2 -> MINUS .)


state 78

    (40) parameters -> tipo ID parameters1 .

    CLOSEPAR        reduce using rule 40 (parameters -> tipo ID parameters1 .)


state 79

    (41) parameters1 -> COMMA . parameters
    (40) parameters -> . tipo ID parameters1
    (23) tipo -> . TYPEFLOAT
    (24) tipo -> . TYPEINT
    (25) tipo -> . TYPECHAR

    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    parameters                     shift and go to state 135
    tipo                           shift and go to state 28

state 80

    (42) parameters1 -> epsilon .

    CLOSEPAR        reduce using rule 42 (parameters1 -> epsilon .)


state 81

    (35) funciones5 -> vars guardar_func . OPENCURLY funciones6

    OPENCURLY       shift and go to state 136


state 82

    (36) funciones5 -> guardar_func OPENCURLY . funciones6
    (37) funciones6 -> . estatutos funciones6
    (38) funciones6 -> . CLOSECURLY funciones
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 139
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    funciones6                     shift and go to state 137
    estatutos                      shift and go to state 138
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 83

    (11) vars2 -> ID vars3 .

    FUNCTION        reduce using rule 11 (vars2 -> ID vars3 .)
    MAIN            reduce using rule 11 (vars2 -> ID vars3 .)
    OPENCURLY       reduce using rule 11 (vars2 -> ID vars3 .)


state 84

    (12) vars3 -> OPENBOX . exp CLOSEBOX vars4
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 140
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 85

    (13) vars3 -> vars4 .

    FUNCTION        reduce using rule 13 (vars3 -> vars4 .)
    MAIN            reduce using rule 13 (vars3 -> vars4 .)
    OPENCURLY       reduce using rule 13 (vars3 -> vars4 .)


state 86

    (14) vars4 -> SEMICOLON . vars5
    (16) vars5 -> . vars1
    (17) vars5 -> . epsilon
    (10) vars1 -> . tipo COLON vars2
    (130) epsilon -> .
    (23) tipo -> . TYPEFLOAT
    (24) tipo -> . TYPEINT
    (25) tipo -> . TYPECHAR

    FUNCTION        reduce using rule 130 (epsilon -> .)
    MAIN            reduce using rule 130 (epsilon -> .)
    OPENCURLY       reduce using rule 130 (epsilon -> .)
    TYPEFLOAT       shift and go to state 15
    TYPEINT         shift and go to state 16
    TYPECHAR        shift and go to state 17

    vars5                          shift and go to state 141
    vars1                          shift and go to state 142
    epsilon                        shift and go to state 143
    tipo                           shift and go to state 26

state 87

    (15) vars4 -> COMMA . vars2
    (11) vars2 -> . ID vars3

    ID              shift and go to state 44

    vars2                          shift and go to state 144

state 88

    (1) programa -> PROGRAM programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY .

    $end            reduce using rule 1 (programa -> PROGRAM programa1 programa2 main OPENPAR CLOSEPAR OPENCURLY programa3 CLOSECURLY .)


state 89

    (43) estatutos -> asignacion estatutos1 .

    CLOSECURLY      reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    RETURN          reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    READ            reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    WRITE           reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    IF              reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    WHILE           reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    FOR             reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    ID              reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    OPENPAR         reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    PLUS            reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    MINUS           reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    INT             reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    FLOAT           reduce using rule 43 (estatutos -> asignacion estatutos1 .)
    CHAR            reduce using rule 43 (estatutos -> asignacion estatutos1 .)


state 90

    (52) estatutos1 -> estatutos .

    CLOSECURLY      reduce using rule 52 (estatutos1 -> estatutos .)
    RETURN          reduce using rule 52 (estatutos1 -> estatutos .)
    READ            reduce using rule 52 (estatutos1 -> estatutos .)
    WRITE           reduce using rule 52 (estatutos1 -> estatutos .)
    IF              reduce using rule 52 (estatutos1 -> estatutos .)
    WHILE           reduce using rule 52 (estatutos1 -> estatutos .)
    FOR             reduce using rule 52 (estatutos1 -> estatutos .)
    ID              reduce using rule 52 (estatutos1 -> estatutos .)
    OPENPAR         reduce using rule 52 (estatutos1 -> estatutos .)
    PLUS            reduce using rule 52 (estatutos1 -> estatutos .)
    MINUS           reduce using rule 52 (estatutos1 -> estatutos .)
    INT             reduce using rule 52 (estatutos1 -> estatutos .)
    FLOAT           reduce using rule 52 (estatutos1 -> estatutos .)
    CHAR            reduce using rule 52 (estatutos1 -> estatutos .)


state 91

    (53) estatutos1 -> epsilon .
    (125) factor2 -> epsilon .

  ! reduce/reduce conflict for ID resolved using rule 53 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for INT resolved using rule 53 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for FLOAT resolved using rule 53 (estatutos1 -> epsilon .)
  ! reduce/reduce conflict for CHAR resolved using rule 53 (estatutos1 -> epsilon .)
    CLOSECURLY      reduce using rule 53 (estatutos1 -> epsilon .)
    RETURN          reduce using rule 53 (estatutos1 -> epsilon .)
    READ            reduce using rule 53 (estatutos1 -> epsilon .)
    WRITE           reduce using rule 53 (estatutos1 -> epsilon .)
    IF              reduce using rule 53 (estatutos1 -> epsilon .)
    WHILE           reduce using rule 53 (estatutos1 -> epsilon .)
    FOR             reduce using rule 53 (estatutos1 -> epsilon .)
    ID              reduce using rule 53 (estatutos1 -> epsilon .)
    OPENPAR         reduce using rule 53 (estatutos1 -> epsilon .)
    PLUS            reduce using rule 53 (estatutos1 -> epsilon .)
    MINUS           reduce using rule 53 (estatutos1 -> epsilon .)
    INT             reduce using rule 53 (estatutos1 -> epsilon .)
    FLOAT           reduce using rule 53 (estatutos1 -> epsilon .)
    CHAR            reduce using rule 53 (estatutos1 -> epsilon .)

  ! ID              [ reduce using rule 125 (factor2 -> epsilon .) ]
  ! INT             [ reduce using rule 125 (factor2 -> epsilon .) ]
  ! FLOAT           [ reduce using rule 125 (factor2 -> epsilon .) ]
  ! CHAR            [ reduce using rule 125 (factor2 -> epsilon .) ]


state 92

    (44) estatutos -> llamada estatutos1 .

    CLOSECURLY      reduce using rule 44 (estatutos -> llamada estatutos1 .)
    RETURN          reduce using rule 44 (estatutos -> llamada estatutos1 .)
    READ            reduce using rule 44 (estatutos -> llamada estatutos1 .)
    WRITE           reduce using rule 44 (estatutos -> llamada estatutos1 .)
    IF              reduce using rule 44 (estatutos -> llamada estatutos1 .)
    WHILE           reduce using rule 44 (estatutos -> llamada estatutos1 .)
    FOR             reduce using rule 44 (estatutos -> llamada estatutos1 .)
    ID              reduce using rule 44 (estatutos -> llamada estatutos1 .)
    OPENPAR         reduce using rule 44 (estatutos -> llamada estatutos1 .)
    PLUS            reduce using rule 44 (estatutos -> llamada estatutos1 .)
    MINUS           reduce using rule 44 (estatutos -> llamada estatutos1 .)
    INT             reduce using rule 44 (estatutos -> llamada estatutos1 .)
    FLOAT           reduce using rule 44 (estatutos -> llamada estatutos1 .)
    CHAR            reduce using rule 44 (estatutos -> llamada estatutos1 .)


state 93

    (45) estatutos -> retorno estatutos1 .

    CLOSECURLY      reduce using rule 45 (estatutos -> retorno estatutos1 .)
    RETURN          reduce using rule 45 (estatutos -> retorno estatutos1 .)
    READ            reduce using rule 45 (estatutos -> retorno estatutos1 .)
    WRITE           reduce using rule 45 (estatutos -> retorno estatutos1 .)
    IF              reduce using rule 45 (estatutos -> retorno estatutos1 .)
    WHILE           reduce using rule 45 (estatutos -> retorno estatutos1 .)
    FOR             reduce using rule 45 (estatutos -> retorno estatutos1 .)
    ID              reduce using rule 45 (estatutos -> retorno estatutos1 .)
    OPENPAR         reduce using rule 45 (estatutos -> retorno estatutos1 .)
    PLUS            reduce using rule 45 (estatutos -> retorno estatutos1 .)
    MINUS           reduce using rule 45 (estatutos -> retorno estatutos1 .)
    INT             reduce using rule 45 (estatutos -> retorno estatutos1 .)
    FLOAT           reduce using rule 45 (estatutos -> retorno estatutos1 .)
    CHAR            reduce using rule 45 (estatutos -> retorno estatutos1 .)


state 94

    (46) estatutos -> lectura estatutos1 .

    CLOSECURLY      reduce using rule 46 (estatutos -> lectura estatutos1 .)
    RETURN          reduce using rule 46 (estatutos -> lectura estatutos1 .)
    READ            reduce using rule 46 (estatutos -> lectura estatutos1 .)
    WRITE           reduce using rule 46 (estatutos -> lectura estatutos1 .)
    IF              reduce using rule 46 (estatutos -> lectura estatutos1 .)
    WHILE           reduce using rule 46 (estatutos -> lectura estatutos1 .)
    FOR             reduce using rule 46 (estatutos -> lectura estatutos1 .)
    ID              reduce using rule 46 (estatutos -> lectura estatutos1 .)
    OPENPAR         reduce using rule 46 (estatutos -> lectura estatutos1 .)
    PLUS            reduce using rule 46 (estatutos -> lectura estatutos1 .)
    MINUS           reduce using rule 46 (estatutos -> lectura estatutos1 .)
    INT             reduce using rule 46 (estatutos -> lectura estatutos1 .)
    FLOAT           reduce using rule 46 (estatutos -> lectura estatutos1 .)
    CHAR            reduce using rule 46 (estatutos -> lectura estatutos1 .)


state 95

    (47) estatutos -> escritura estatutos1 .

    CLOSECURLY      reduce using rule 47 (estatutos -> escritura estatutos1 .)
    RETURN          reduce using rule 47 (estatutos -> escritura estatutos1 .)
    READ            reduce using rule 47 (estatutos -> escritura estatutos1 .)
    WRITE           reduce using rule 47 (estatutos -> escritura estatutos1 .)
    IF              reduce using rule 47 (estatutos -> escritura estatutos1 .)
    WHILE           reduce using rule 47 (estatutos -> escritura estatutos1 .)
    FOR             reduce using rule 47 (estatutos -> escritura estatutos1 .)
    ID              reduce using rule 47 (estatutos -> escritura estatutos1 .)
    OPENPAR         reduce using rule 47 (estatutos -> escritura estatutos1 .)
    PLUS            reduce using rule 47 (estatutos -> escritura estatutos1 .)
    MINUS           reduce using rule 47 (estatutos -> escritura estatutos1 .)
    INT             reduce using rule 47 (estatutos -> escritura estatutos1 .)
    FLOAT           reduce using rule 47 (estatutos -> escritura estatutos1 .)
    CHAR            reduce using rule 47 (estatutos -> escritura estatutos1 .)


state 96

    (48) estatutos -> condicion estatutos1 .

    CLOSECURLY      reduce using rule 48 (estatutos -> condicion estatutos1 .)
    RETURN          reduce using rule 48 (estatutos -> condicion estatutos1 .)
    READ            reduce using rule 48 (estatutos -> condicion estatutos1 .)
    WRITE           reduce using rule 48 (estatutos -> condicion estatutos1 .)
    IF              reduce using rule 48 (estatutos -> condicion estatutos1 .)
    WHILE           reduce using rule 48 (estatutos -> condicion estatutos1 .)
    FOR             reduce using rule 48 (estatutos -> condicion estatutos1 .)
    ID              reduce using rule 48 (estatutos -> condicion estatutos1 .)
    OPENPAR         reduce using rule 48 (estatutos -> condicion estatutos1 .)
    PLUS            reduce using rule 48 (estatutos -> condicion estatutos1 .)
    MINUS           reduce using rule 48 (estatutos -> condicion estatutos1 .)
    INT             reduce using rule 48 (estatutos -> condicion estatutos1 .)
    FLOAT           reduce using rule 48 (estatutos -> condicion estatutos1 .)
    CHAR            reduce using rule 48 (estatutos -> condicion estatutos1 .)


state 97

    (49) estatutos -> while estatutos1 .

    CLOSECURLY      reduce using rule 49 (estatutos -> while estatutos1 .)
    RETURN          reduce using rule 49 (estatutos -> while estatutos1 .)
    READ            reduce using rule 49 (estatutos -> while estatutos1 .)
    WRITE           reduce using rule 49 (estatutos -> while estatutos1 .)
    IF              reduce using rule 49 (estatutos -> while estatutos1 .)
    WHILE           reduce using rule 49 (estatutos -> while estatutos1 .)
    FOR             reduce using rule 49 (estatutos -> while estatutos1 .)
    ID              reduce using rule 49 (estatutos -> while estatutos1 .)
    OPENPAR         reduce using rule 49 (estatutos -> while estatutos1 .)
    PLUS            reduce using rule 49 (estatutos -> while estatutos1 .)
    MINUS           reduce using rule 49 (estatutos -> while estatutos1 .)
    INT             reduce using rule 49 (estatutos -> while estatutos1 .)
    FLOAT           reduce using rule 49 (estatutos -> while estatutos1 .)
    CHAR            reduce using rule 49 (estatutos -> while estatutos1 .)


state 98

    (50) estatutos -> for estatutos1 .

    CLOSECURLY      reduce using rule 50 (estatutos -> for estatutos1 .)
    RETURN          reduce using rule 50 (estatutos -> for estatutos1 .)
    READ            reduce using rule 50 (estatutos -> for estatutos1 .)
    WRITE           reduce using rule 50 (estatutos -> for estatutos1 .)
    IF              reduce using rule 50 (estatutos -> for estatutos1 .)
    WHILE           reduce using rule 50 (estatutos -> for estatutos1 .)
    FOR             reduce using rule 50 (estatutos -> for estatutos1 .)
    ID              reduce using rule 50 (estatutos -> for estatutos1 .)
    OPENPAR         reduce using rule 50 (estatutos -> for estatutos1 .)
    PLUS            reduce using rule 50 (estatutos -> for estatutos1 .)
    MINUS           reduce using rule 50 (estatutos -> for estatutos1 .)
    INT             reduce using rule 50 (estatutos -> for estatutos1 .)
    FLOAT           reduce using rule 50 (estatutos -> for estatutos1 .)
    CHAR            reduce using rule 50 (estatutos -> for estatutos1 .)


state 99

    (51) estatutos -> est_exp estatutos1 .

    CLOSECURLY      reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    RETURN          reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    READ            reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    WRITE           reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    IF              reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    WHILE           reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    FOR             reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    ID              reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    OPENPAR         reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    PLUS            reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    MINUS           reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    INT             reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    FLOAT           reduce using rule 51 (estatutos -> est_exp estatutos1 .)
    CHAR            reduce using rule 51 (estatutos -> est_exp estatutos1 .)


state 100

    (54) asignacion -> asignacion1 expresion . SEMICOLON

    SEMICOLON       shift and go to state 145


state 101

    (115) factor -> ID . factor1
    (58) funcion -> ID . OPENPAR funcion1
    (121) factor1 -> . OPENBOX exp CLOSEBOX
    (122) factor1 -> . epsilon
    (130) epsilon -> .

    OPENPAR         shift and go to state 116
    OPENBOX         shift and go to state 146
    MULTIPLY        reduce using rule 130 (epsilon -> .)
    DIVIDE          reduce using rule 130 (epsilon -> .)
    MODULO          reduce using rule 130 (epsilon -> .)
    PLUS            reduce using rule 130 (epsilon -> .)
    MINUS           reduce using rule 130 (epsilon -> .)
    LT              reduce using rule 130 (epsilon -> .)
    LE              reduce using rule 130 (epsilon -> .)
    GT              reduce using rule 130 (epsilon -> .)
    GE              reduce using rule 130 (epsilon -> .)
    EQ              reduce using rule 130 (epsilon -> .)
    NE              reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    CLOSEPAR        reduce using rule 130 (epsilon -> .)
    CLOSEBOX        reduce using rule 130 (epsilon -> .)
    COMMA           reduce using rule 130 (epsilon -> .)
    TO              reduce using rule 130 (epsilon -> .)
    DO              reduce using rule 130 (epsilon -> .)

    factor1                        shift and go to state 117
    epsilon                        shift and go to state 118

state 102

    (117) factor -> funcion .

    MULTIPLY        reduce using rule 117 (factor -> funcion .)
    DIVIDE          reduce using rule 117 (factor -> funcion .)
    MODULO          reduce using rule 117 (factor -> funcion .)
    PLUS            reduce using rule 117 (factor -> funcion .)
    MINUS           reduce using rule 117 (factor -> funcion .)
    LT              reduce using rule 117 (factor -> funcion .)
    LE              reduce using rule 117 (factor -> funcion .)
    GT              reduce using rule 117 (factor -> funcion .)
    GE              reduce using rule 117 (factor -> funcion .)
    EQ              reduce using rule 117 (factor -> funcion .)
    NE              reduce using rule 117 (factor -> funcion .)
    AND             reduce using rule 117 (factor -> funcion .)
    OR              reduce using rule 117 (factor -> funcion .)
    SEMICOLON       reduce using rule 117 (factor -> funcion .)
    CLOSEPAR        reduce using rule 117 (factor -> funcion .)
    CLOSEBOX        reduce using rule 117 (factor -> funcion .)
    COMMA           reduce using rule 117 (factor -> funcion .)
    TO              reduce using rule 117 (factor -> funcion .)
    DO              reduce using rule 117 (factor -> funcion .)


state 103

    (125) factor2 -> epsilon .

    ID              reduce using rule 125 (factor2 -> epsilon .)
    INT             reduce using rule 125 (factor2 -> epsilon .)
    FLOAT           reduce using rule 125 (factor2 -> epsilon .)
    CHAR            reduce using rule 125 (factor2 -> epsilon .)


state 104

    (83) est_exp -> expresion SEMICOLON .

    RETURN          reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    READ            reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    WRITE           reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    IF              reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    WHILE           reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    FOR             reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    ID              reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    OPENPAR         reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    PLUS            reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    MINUS           reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    INT             reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    FLOAT           reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    CHAR            reduce using rule 83 (est_exp -> expresion SEMICOLON .)
    CLOSECURLY      reduce using rule 83 (est_exp -> expresion SEMICOLON .)


state 105

    (57) llamada -> funcion SEMICOLON .

    RETURN          reduce using rule 57 (llamada -> funcion SEMICOLON .)
    READ            reduce using rule 57 (llamada -> funcion SEMICOLON .)
    WRITE           reduce using rule 57 (llamada -> funcion SEMICOLON .)
    IF              reduce using rule 57 (llamada -> funcion SEMICOLON .)
    WHILE           reduce using rule 57 (llamada -> funcion SEMICOLON .)
    FOR             reduce using rule 57 (llamada -> funcion SEMICOLON .)
    ID              reduce using rule 57 (llamada -> funcion SEMICOLON .)
    OPENPAR         reduce using rule 57 (llamada -> funcion SEMICOLON .)
    PLUS            reduce using rule 57 (llamada -> funcion SEMICOLON .)
    MINUS           reduce using rule 57 (llamada -> funcion SEMICOLON .)
    INT             reduce using rule 57 (llamada -> funcion SEMICOLON .)
    FLOAT           reduce using rule 57 (llamada -> funcion SEMICOLON .)
    CHAR            reduce using rule 57 (llamada -> funcion SEMICOLON .)
    CLOSECURLY      reduce using rule 57 (llamada -> funcion SEMICOLON .)


state 106

    (62) retorno -> RETURN OPENPAR . exp CLOSEPAR SEMICOLON
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 147
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 107

    (97) compare -> exp compare1 .
    (98) compare -> exp compare1 . compare2 compare
    (100) compare2 -> . LT
    (101) compare2 -> . LE
    (102) compare2 -> . GT
    (103) compare2 -> . GE

    EQ              reduce using rule 97 (compare -> exp compare1 .)
    NE              reduce using rule 97 (compare -> exp compare1 .)
    AND             reduce using rule 97 (compare -> exp compare1 .)
    OR              reduce using rule 97 (compare -> exp compare1 .)
    SEMICOLON       reduce using rule 97 (compare -> exp compare1 .)
    CLOSEPAR        reduce using rule 97 (compare -> exp compare1 .)
    LT              shift and go to state 149
    LE              shift and go to state 150
    GT              shift and go to state 151
    GE              shift and go to state 152

    compare2                       shift and go to state 148

state 108

    (99) compare1 -> epsilon .

    LT              reduce using rule 99 (compare1 -> epsilon .)
    LE              reduce using rule 99 (compare1 -> epsilon .)
    GT              reduce using rule 99 (compare1 -> epsilon .)
    GE              reduce using rule 99 (compare1 -> epsilon .)
    EQ              reduce using rule 99 (compare1 -> epsilon .)
    NE              reduce using rule 99 (compare1 -> epsilon .)
    AND             reduce using rule 99 (compare1 -> epsilon .)
    OR              reduce using rule 99 (compare1 -> epsilon .)
    SEMICOLON       reduce using rule 99 (compare1 -> epsilon .)
    CLOSEPAR        reduce using rule 99 (compare1 -> epsilon .)


state 109

    (63) lectura -> READ OPENPAR . lista_ids CLOSEPAR SEMICOLON
    (18) lista_ids -> . ID OPENBOX exp CLOSEBOX lista_ids1
    (19) lista_ids -> . ID lista_ids1
    (20) lista_ids -> . STRING lista_ids1

    ID              shift and go to state 154
    STRING          shift and go to state 155

    lista_ids                      shift and go to state 153

state 110

    (64) escritura -> WRITE OPENPAR . escritura1 CLOSEPAR SEMICOLON
    (65) escritura1 -> . lista_ids escritura2
    (18) lista_ids -> . ID OPENBOX exp CLOSEBOX lista_ids1
    (19) lista_ids -> . ID lista_ids1
    (20) lista_ids -> . STRING lista_ids1

    ID              shift and go to state 154
    STRING          shift and go to state 155

    escritura1                     shift and go to state 156
    lista_ids                      shift and go to state 157

state 111

    (68) condicion -> IF OPENPAR . expresion CLOSEPAR THEN OPENCURLY condicion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    expresion                      shift and go to state 158
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    exp                            shift and go to state 62
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 112

    (75) while -> WHILE OPENPAR . expresion CLOSEPAR DO OPENCURLY while1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    expresion                      shift and go to state 159
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    exp                            shift and go to state 62
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 113

    (78) for -> FOR ID . for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (79) for1 -> . OPENBOX exp CLOSEBOX
    (80) for1 -> . epsilon
    (130) epsilon -> .

    OPENBOX         shift and go to state 161
    IS              reduce using rule 130 (epsilon -> .)

    for1                           shift and go to state 160
    epsilon                        shift and go to state 162

state 114

    (55) asignacion1 -> ID OPENBOX . exp CLOSEBOX IS
    (121) factor1 -> OPENBOX . exp CLOSEBOX
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 163
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 115

    (56) asignacion1 -> ID IS .

    ID              reduce using rule 56 (asignacion1 -> ID IS .)
    OPENPAR         reduce using rule 56 (asignacion1 -> ID IS .)
    PLUS            reduce using rule 56 (asignacion1 -> ID IS .)
    MINUS           reduce using rule 56 (asignacion1 -> ID IS .)
    INT             reduce using rule 56 (asignacion1 -> ID IS .)
    FLOAT           reduce using rule 56 (asignacion1 -> ID IS .)
    CHAR            reduce using rule 56 (asignacion1 -> ID IS .)


state 116

    (58) funcion -> ID OPENPAR . funcion1
    (59) funcion1 -> . exp funcion2
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    funcion1                       shift and go to state 164
    exp                            shift and go to state 165
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 117

    (115) factor -> ID factor1 .

    MULTIPLY        reduce using rule 115 (factor -> ID factor1 .)
    DIVIDE          reduce using rule 115 (factor -> ID factor1 .)
    MODULO          reduce using rule 115 (factor -> ID factor1 .)
    PLUS            reduce using rule 115 (factor -> ID factor1 .)
    MINUS           reduce using rule 115 (factor -> ID factor1 .)
    LT              reduce using rule 115 (factor -> ID factor1 .)
    LE              reduce using rule 115 (factor -> ID factor1 .)
    GT              reduce using rule 115 (factor -> ID factor1 .)
    GE              reduce using rule 115 (factor -> ID factor1 .)
    EQ              reduce using rule 115 (factor -> ID factor1 .)
    NE              reduce using rule 115 (factor -> ID factor1 .)
    AND             reduce using rule 115 (factor -> ID factor1 .)
    OR              reduce using rule 115 (factor -> ID factor1 .)
    SEMICOLON       reduce using rule 115 (factor -> ID factor1 .)
    CLOSEPAR        reduce using rule 115 (factor -> ID factor1 .)
    CLOSEBOX        reduce using rule 115 (factor -> ID factor1 .)
    COMMA           reduce using rule 115 (factor -> ID factor1 .)
    TO              reduce using rule 115 (factor -> ID factor1 .)
    DO              reduce using rule 115 (factor -> ID factor1 .)


state 118

    (122) factor1 -> epsilon .

    MULTIPLY        reduce using rule 122 (factor1 -> epsilon .)
    DIVIDE          reduce using rule 122 (factor1 -> epsilon .)
    MODULO          reduce using rule 122 (factor1 -> epsilon .)
    PLUS            reduce using rule 122 (factor1 -> epsilon .)
    MINUS           reduce using rule 122 (factor1 -> epsilon .)
    LT              reduce using rule 122 (factor1 -> epsilon .)
    LE              reduce using rule 122 (factor1 -> epsilon .)
    GT              reduce using rule 122 (factor1 -> epsilon .)
    GE              reduce using rule 122 (factor1 -> epsilon .)
    EQ              reduce using rule 122 (factor1 -> epsilon .)
    NE              reduce using rule 122 (factor1 -> epsilon .)
    AND             reduce using rule 122 (factor1 -> epsilon .)
    OR              reduce using rule 122 (factor1 -> epsilon .)
    SEMICOLON       reduce using rule 122 (factor1 -> epsilon .)
    CLOSEPAR        reduce using rule 122 (factor1 -> epsilon .)
    CLOSEBOX        reduce using rule 122 (factor1 -> epsilon .)
    COMMA           reduce using rule 122 (factor1 -> epsilon .)
    TO              reduce using rule 122 (factor1 -> epsilon .)
    DO              reduce using rule 122 (factor1 -> epsilon .)


state 119

    (84) expresion -> and expression1 .
    (85) expresion -> and expression1 . expression2 expresion
    (87) expression2 -> . OR

    SEMICOLON       reduce using rule 84 (expresion -> and expression1 .)
    CLOSEPAR        reduce using rule 84 (expresion -> and expression1 .)
    OR              shift and go to state 167

    expression2                    shift and go to state 166

state 120

    (86) expression1 -> epsilon .

    OR              reduce using rule 86 (expression1 -> epsilon .)
    SEMICOLON       reduce using rule 86 (expression1 -> epsilon .)
    CLOSEPAR        reduce using rule 86 (expression1 -> epsilon .)


state 121

    (88) and -> equal and1 .
    (89) and -> equal and1 . and2 and
    (91) and2 -> . AND

    OR              reduce using rule 88 (and -> equal and1 .)
    SEMICOLON       reduce using rule 88 (and -> equal and1 .)
    CLOSEPAR        reduce using rule 88 (and -> equal and1 .)
    AND             shift and go to state 169

    and2                           shift and go to state 168

state 122

    (90) and1 -> epsilon .

    AND             reduce using rule 90 (and1 -> epsilon .)
    OR              reduce using rule 90 (and1 -> epsilon .)
    SEMICOLON       reduce using rule 90 (and1 -> epsilon .)
    CLOSEPAR        reduce using rule 90 (and1 -> epsilon .)


state 123

    (92) equal -> compare equal1 .
    (93) equal -> compare equal1 . equal2 equal
    (95) equal2 -> . EQ
    (96) equal2 -> . NE

    AND             reduce using rule 92 (equal -> compare equal1 .)
    OR              reduce using rule 92 (equal -> compare equal1 .)
    SEMICOLON       reduce using rule 92 (equal -> compare equal1 .)
    CLOSEPAR        reduce using rule 92 (equal -> compare equal1 .)
    EQ              shift and go to state 171
    NE              shift and go to state 172

    equal2                         shift and go to state 170

state 124

    (94) equal1 -> epsilon .

    EQ              reduce using rule 94 (equal1 -> epsilon .)
    NE              reduce using rule 94 (equal1 -> epsilon .)
    AND             reduce using rule 94 (equal1 -> epsilon .)
    OR              reduce using rule 94 (equal1 -> epsilon .)
    SEMICOLON       reduce using rule 94 (equal1 -> epsilon .)
    CLOSEPAR        reduce using rule 94 (equal1 -> epsilon .)


state 125

    (104) exp -> termino exp1 .
    (105) exp -> termino exp1 . exp2 exp
    (107) exp2 -> . PLUS
    (108) exp2 -> . MINUS

    LT              reduce using rule 104 (exp -> termino exp1 .)
    LE              reduce using rule 104 (exp -> termino exp1 .)
    GT              reduce using rule 104 (exp -> termino exp1 .)
    GE              reduce using rule 104 (exp -> termino exp1 .)
    EQ              reduce using rule 104 (exp -> termino exp1 .)
    NE              reduce using rule 104 (exp -> termino exp1 .)
    AND             reduce using rule 104 (exp -> termino exp1 .)
    OR              reduce using rule 104 (exp -> termino exp1 .)
    SEMICOLON       reduce using rule 104 (exp -> termino exp1 .)
    CLOSEPAR        reduce using rule 104 (exp -> termino exp1 .)
    CLOSEBOX        reduce using rule 104 (exp -> termino exp1 .)
    COMMA           reduce using rule 104 (exp -> termino exp1 .)
    TO              reduce using rule 104 (exp -> termino exp1 .)
    DO              reduce using rule 104 (exp -> termino exp1 .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175

    exp2                           shift and go to state 173

state 126

    (106) exp1 -> epsilon .

    PLUS            reduce using rule 106 (exp1 -> epsilon .)
    MINUS           reduce using rule 106 (exp1 -> epsilon .)
    LT              reduce using rule 106 (exp1 -> epsilon .)
    LE              reduce using rule 106 (exp1 -> epsilon .)
    GT              reduce using rule 106 (exp1 -> epsilon .)
    GE              reduce using rule 106 (exp1 -> epsilon .)
    EQ              reduce using rule 106 (exp1 -> epsilon .)
    NE              reduce using rule 106 (exp1 -> epsilon .)
    AND             reduce using rule 106 (exp1 -> epsilon .)
    OR              reduce using rule 106 (exp1 -> epsilon .)
    SEMICOLON       reduce using rule 106 (exp1 -> epsilon .)
    CLOSEPAR        reduce using rule 106 (exp1 -> epsilon .)
    CLOSEBOX        reduce using rule 106 (exp1 -> epsilon .)
    COMMA           reduce using rule 106 (exp1 -> epsilon .)
    TO              reduce using rule 106 (exp1 -> epsilon .)
    DO              reduce using rule 106 (exp1 -> epsilon .)


state 127

    (109) termino -> factor termino1 .
    (110) termino -> factor termino1 . termino2 termino
    (112) termino2 -> . MULTIPLY
    (113) termino2 -> . DIVIDE
    (114) termino2 -> . MODULO

    PLUS            reduce using rule 109 (termino -> factor termino1 .)
    MINUS           reduce using rule 109 (termino -> factor termino1 .)
    LT              reduce using rule 109 (termino -> factor termino1 .)
    LE              reduce using rule 109 (termino -> factor termino1 .)
    GT              reduce using rule 109 (termino -> factor termino1 .)
    GE              reduce using rule 109 (termino -> factor termino1 .)
    EQ              reduce using rule 109 (termino -> factor termino1 .)
    NE              reduce using rule 109 (termino -> factor termino1 .)
    AND             reduce using rule 109 (termino -> factor termino1 .)
    OR              reduce using rule 109 (termino -> factor termino1 .)
    SEMICOLON       reduce using rule 109 (termino -> factor termino1 .)
    CLOSEPAR        reduce using rule 109 (termino -> factor termino1 .)
    CLOSEBOX        reduce using rule 109 (termino -> factor termino1 .)
    COMMA           reduce using rule 109 (termino -> factor termino1 .)
    TO              reduce using rule 109 (termino -> factor termino1 .)
    DO              reduce using rule 109 (termino -> factor termino1 .)
    MULTIPLY        shift and go to state 177
    DIVIDE          shift and go to state 178
    MODULO          shift and go to state 179

    termino2                       shift and go to state 176

state 128

    (111) termino1 -> epsilon .

    MULTIPLY        reduce using rule 111 (termino1 -> epsilon .)
    DIVIDE          reduce using rule 111 (termino1 -> epsilon .)
    MODULO          reduce using rule 111 (termino1 -> epsilon .)
    PLUS            reduce using rule 111 (termino1 -> epsilon .)
    MINUS           reduce using rule 111 (termino1 -> epsilon .)
    LT              reduce using rule 111 (termino1 -> epsilon .)
    LE              reduce using rule 111 (termino1 -> epsilon .)
    GT              reduce using rule 111 (termino1 -> epsilon .)
    GE              reduce using rule 111 (termino1 -> epsilon .)
    EQ              reduce using rule 111 (termino1 -> epsilon .)
    NE              reduce using rule 111 (termino1 -> epsilon .)
    AND             reduce using rule 111 (termino1 -> epsilon .)
    OR              reduce using rule 111 (termino1 -> epsilon .)
    SEMICOLON       reduce using rule 111 (termino1 -> epsilon .)
    CLOSEPAR        reduce using rule 111 (termino1 -> epsilon .)
    CLOSEBOX        reduce using rule 111 (termino1 -> epsilon .)
    COMMA           reduce using rule 111 (termino1 -> epsilon .)
    TO              reduce using rule 111 (termino1 -> epsilon .)
    DO              reduce using rule 111 (termino1 -> epsilon .)


state 129

    (116) factor -> openpar expresion . closepar
    (120) closepar -> . CLOSEPAR

    CLOSEPAR        shift and go to state 181

    closepar                       shift and go to state 180

state 130

    (118) factor -> factor2 varcte .

    MULTIPLY        reduce using rule 118 (factor -> factor2 varcte .)
    DIVIDE          reduce using rule 118 (factor -> factor2 varcte .)
    MODULO          reduce using rule 118 (factor -> factor2 varcte .)
    PLUS            reduce using rule 118 (factor -> factor2 varcte .)
    MINUS           reduce using rule 118 (factor -> factor2 varcte .)
    LT              reduce using rule 118 (factor -> factor2 varcte .)
    LE              reduce using rule 118 (factor -> factor2 varcte .)
    GT              reduce using rule 118 (factor -> factor2 varcte .)
    GE              reduce using rule 118 (factor -> factor2 varcte .)
    EQ              reduce using rule 118 (factor -> factor2 varcte .)
    NE              reduce using rule 118 (factor -> factor2 varcte .)
    AND             reduce using rule 118 (factor -> factor2 varcte .)
    OR              reduce using rule 118 (factor -> factor2 varcte .)
    SEMICOLON       reduce using rule 118 (factor -> factor2 varcte .)
    CLOSEPAR        reduce using rule 118 (factor -> factor2 varcte .)
    CLOSEBOX        reduce using rule 118 (factor -> factor2 varcte .)
    COMMA           reduce using rule 118 (factor -> factor2 varcte .)
    TO              reduce using rule 118 (factor -> factor2 varcte .)
    DO              reduce using rule 118 (factor -> factor2 varcte .)


state 131

    (126) varcte -> ID .

    MULTIPLY        reduce using rule 126 (varcte -> ID .)
    DIVIDE          reduce using rule 126 (varcte -> ID .)
    MODULO          reduce using rule 126 (varcte -> ID .)
    PLUS            reduce using rule 126 (varcte -> ID .)
    MINUS           reduce using rule 126 (varcte -> ID .)
    LT              reduce using rule 126 (varcte -> ID .)
    LE              reduce using rule 126 (varcte -> ID .)
    GT              reduce using rule 126 (varcte -> ID .)
    GE              reduce using rule 126 (varcte -> ID .)
    EQ              reduce using rule 126 (varcte -> ID .)
    NE              reduce using rule 126 (varcte -> ID .)
    AND             reduce using rule 126 (varcte -> ID .)
    OR              reduce using rule 126 (varcte -> ID .)
    SEMICOLON       reduce using rule 126 (varcte -> ID .)
    CLOSEPAR        reduce using rule 126 (varcte -> ID .)
    CLOSEBOX        reduce using rule 126 (varcte -> ID .)
    COMMA           reduce using rule 126 (varcte -> ID .)
    TO              reduce using rule 126 (varcte -> ID .)
    DO              reduce using rule 126 (varcte -> ID .)


state 132

    (127) varcte -> INT .

    MULTIPLY        reduce using rule 127 (varcte -> INT .)
    DIVIDE          reduce using rule 127 (varcte -> INT .)
    MODULO          reduce using rule 127 (varcte -> INT .)
    PLUS            reduce using rule 127 (varcte -> INT .)
    MINUS           reduce using rule 127 (varcte -> INT .)
    LT              reduce using rule 127 (varcte -> INT .)
    LE              reduce using rule 127 (varcte -> INT .)
    GT              reduce using rule 127 (varcte -> INT .)
    GE              reduce using rule 127 (varcte -> INT .)
    EQ              reduce using rule 127 (varcte -> INT .)
    NE              reduce using rule 127 (varcte -> INT .)
    AND             reduce using rule 127 (varcte -> INT .)
    OR              reduce using rule 127 (varcte -> INT .)
    SEMICOLON       reduce using rule 127 (varcte -> INT .)
    CLOSEPAR        reduce using rule 127 (varcte -> INT .)
    CLOSEBOX        reduce using rule 127 (varcte -> INT .)
    COMMA           reduce using rule 127 (varcte -> INT .)
    TO              reduce using rule 127 (varcte -> INT .)
    DO              reduce using rule 127 (varcte -> INT .)


state 133

    (128) varcte -> FLOAT .

    MULTIPLY        reduce using rule 128 (varcte -> FLOAT .)
    DIVIDE          reduce using rule 128 (varcte -> FLOAT .)
    MODULO          reduce using rule 128 (varcte -> FLOAT .)
    PLUS            reduce using rule 128 (varcte -> FLOAT .)
    MINUS           reduce using rule 128 (varcte -> FLOAT .)
    LT              reduce using rule 128 (varcte -> FLOAT .)
    LE              reduce using rule 128 (varcte -> FLOAT .)
    GT              reduce using rule 128 (varcte -> FLOAT .)
    GE              reduce using rule 128 (varcte -> FLOAT .)
    EQ              reduce using rule 128 (varcte -> FLOAT .)
    NE              reduce using rule 128 (varcte -> FLOAT .)
    AND             reduce using rule 128 (varcte -> FLOAT .)
    OR              reduce using rule 128 (varcte -> FLOAT .)
    SEMICOLON       reduce using rule 128 (varcte -> FLOAT .)
    CLOSEPAR        reduce using rule 128 (varcte -> FLOAT .)
    CLOSEBOX        reduce using rule 128 (varcte -> FLOAT .)
    COMMA           reduce using rule 128 (varcte -> FLOAT .)
    TO              reduce using rule 128 (varcte -> FLOAT .)
    DO              reduce using rule 128 (varcte -> FLOAT .)


state 134

    (129) varcte -> CHAR .

    MULTIPLY        reduce using rule 129 (varcte -> CHAR .)
    DIVIDE          reduce using rule 129 (varcte -> CHAR .)
    MODULO          reduce using rule 129 (varcte -> CHAR .)
    PLUS            reduce using rule 129 (varcte -> CHAR .)
    MINUS           reduce using rule 129 (varcte -> CHAR .)
    LT              reduce using rule 129 (varcte -> CHAR .)
    LE              reduce using rule 129 (varcte -> CHAR .)
    GT              reduce using rule 129 (varcte -> CHAR .)
    GE              reduce using rule 129 (varcte -> CHAR .)
    EQ              reduce using rule 129 (varcte -> CHAR .)
    NE              reduce using rule 129 (varcte -> CHAR .)
    AND             reduce using rule 129 (varcte -> CHAR .)
    OR              reduce using rule 129 (varcte -> CHAR .)
    SEMICOLON       reduce using rule 129 (varcte -> CHAR .)
    CLOSEPAR        reduce using rule 129 (varcte -> CHAR .)
    CLOSEBOX        reduce using rule 129 (varcte -> CHAR .)
    COMMA           reduce using rule 129 (varcte -> CHAR .)
    TO              reduce using rule 129 (varcte -> CHAR .)
    DO              reduce using rule 129 (varcte -> CHAR .)


state 135

    (41) parameters1 -> COMMA parameters .

    CLOSEPAR        reduce using rule 41 (parameters1 -> COMMA parameters .)


state 136

    (35) funciones5 -> vars guardar_func OPENCURLY . funciones6
    (37) funciones6 -> . estatutos funciones6
    (38) funciones6 -> . CLOSECURLY funciones
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 139
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    funciones6                     shift and go to state 182
    estatutos                      shift and go to state 138
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 137

    (36) funciones5 -> guardar_func OPENCURLY funciones6 .

    MAIN            reduce using rule 36 (funciones5 -> guardar_func OPENCURLY funciones6 .)


state 138

    (37) funciones6 -> estatutos . funciones6
    (37) funciones6 -> . estatutos funciones6
    (38) funciones6 -> . CLOSECURLY funciones
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 139
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    estatutos                      shift and go to state 138
    funciones6                     shift and go to state 183
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 139

    (38) funciones6 -> CLOSECURLY . funciones
    (27) funciones -> . FUNCTION funciones1
    (28) funciones -> . epsilon
    (130) epsilon -> .

    FUNCTION        shift and go to state 8
    MAIN            reduce using rule 130 (epsilon -> .)

    funciones                      shift and go to state 184
    epsilon                        shift and go to state 185

state 140

    (12) vars3 -> OPENBOX exp . CLOSEBOX vars4

    CLOSEBOX        shift and go to state 186


state 141

    (14) vars4 -> SEMICOLON vars5 .

    FUNCTION        reduce using rule 14 (vars4 -> SEMICOLON vars5 .)
    MAIN            reduce using rule 14 (vars4 -> SEMICOLON vars5 .)
    OPENCURLY       reduce using rule 14 (vars4 -> SEMICOLON vars5 .)


state 142

    (16) vars5 -> vars1 .

    FUNCTION        reduce using rule 16 (vars5 -> vars1 .)
    MAIN            reduce using rule 16 (vars5 -> vars1 .)
    OPENCURLY       reduce using rule 16 (vars5 -> vars1 .)


state 143

    (17) vars5 -> epsilon .

    FUNCTION        reduce using rule 17 (vars5 -> epsilon .)
    MAIN            reduce using rule 17 (vars5 -> epsilon .)
    OPENCURLY       reduce using rule 17 (vars5 -> epsilon .)


state 144

    (15) vars4 -> COMMA vars2 .

    FUNCTION        reduce using rule 15 (vars4 -> COMMA vars2 .)
    MAIN            reduce using rule 15 (vars4 -> COMMA vars2 .)
    OPENCURLY       reduce using rule 15 (vars4 -> COMMA vars2 .)


state 145

    (54) asignacion -> asignacion1 expresion SEMICOLON .

    RETURN          reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    READ            reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    WRITE           reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    IF              reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    WHILE           reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    FOR             reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    ID              reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    OPENPAR         reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    PLUS            reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    MINUS           reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    INT             reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    FLOAT           reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    CHAR            reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)
    CLOSECURLY      reduce using rule 54 (asignacion -> asignacion1 expresion SEMICOLON .)


state 146

    (121) factor1 -> OPENBOX . exp CLOSEBOX
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 187
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 147

    (62) retorno -> RETURN OPENPAR exp . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 188


state 148

    (98) compare -> exp compare1 compare2 . compare
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 62
    compare                        shift and go to state 189
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 149

    (100) compare2 -> LT .

    ID              reduce using rule 100 (compare2 -> LT .)
    OPENPAR         reduce using rule 100 (compare2 -> LT .)
    PLUS            reduce using rule 100 (compare2 -> LT .)
    MINUS           reduce using rule 100 (compare2 -> LT .)
    INT             reduce using rule 100 (compare2 -> LT .)
    FLOAT           reduce using rule 100 (compare2 -> LT .)
    CHAR            reduce using rule 100 (compare2 -> LT .)


state 150

    (101) compare2 -> LE .

    ID              reduce using rule 101 (compare2 -> LE .)
    OPENPAR         reduce using rule 101 (compare2 -> LE .)
    PLUS            reduce using rule 101 (compare2 -> LE .)
    MINUS           reduce using rule 101 (compare2 -> LE .)
    INT             reduce using rule 101 (compare2 -> LE .)
    FLOAT           reduce using rule 101 (compare2 -> LE .)
    CHAR            reduce using rule 101 (compare2 -> LE .)


state 151

    (102) compare2 -> GT .

    ID              reduce using rule 102 (compare2 -> GT .)
    OPENPAR         reduce using rule 102 (compare2 -> GT .)
    PLUS            reduce using rule 102 (compare2 -> GT .)
    MINUS           reduce using rule 102 (compare2 -> GT .)
    INT             reduce using rule 102 (compare2 -> GT .)
    FLOAT           reduce using rule 102 (compare2 -> GT .)
    CHAR            reduce using rule 102 (compare2 -> GT .)


state 152

    (103) compare2 -> GE .

    ID              reduce using rule 103 (compare2 -> GE .)
    OPENPAR         reduce using rule 103 (compare2 -> GE .)
    PLUS            reduce using rule 103 (compare2 -> GE .)
    MINUS           reduce using rule 103 (compare2 -> GE .)
    INT             reduce using rule 103 (compare2 -> GE .)
    FLOAT           reduce using rule 103 (compare2 -> GE .)
    CHAR            reduce using rule 103 (compare2 -> GE .)


state 153

    (63) lectura -> READ OPENPAR lista_ids . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 190


state 154

    (18) lista_ids -> ID . OPENBOX exp CLOSEBOX lista_ids1
    (19) lista_ids -> ID . lista_ids1
    (21) lista_ids1 -> . COMMA lista_ids
    (22) lista_ids1 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for COMMA resolved as shift
    OPENBOX         shift and go to state 191
    COMMA           shift and go to state 193
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

  ! COMMA           [ reduce using rule 130 (epsilon -> .) ]

    lista_ids1                     shift and go to state 192
    epsilon                        shift and go to state 194

state 155

    (20) lista_ids -> STRING . lista_ids1
    (21) lista_ids1 -> . COMMA lista_ids
    (22) lista_ids1 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 193
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

  ! COMMA           [ reduce using rule 130 (epsilon -> .) ]

    lista_ids1                     shift and go to state 195
    epsilon                        shift and go to state 194

state 156

    (64) escritura -> WRITE OPENPAR escritura1 . CLOSEPAR SEMICOLON

    CLOSEPAR        shift and go to state 196


state 157

    (65) escritura1 -> lista_ids . escritura2
    (66) escritura2 -> . COMMA escritura1
    (67) escritura2 -> . epsilon
    (130) epsilon -> .

    COMMA           shift and go to state 198
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

    escritura2                     shift and go to state 197
    epsilon                        shift and go to state 199

state 158

    (68) condicion -> IF OPENPAR expresion . CLOSEPAR THEN OPENCURLY condicion1

    CLOSEPAR        shift and go to state 200


state 159

    (75) while -> WHILE OPENPAR expresion . CLOSEPAR DO OPENCURLY while1

    CLOSEPAR        shift and go to state 201


state 160

    (78) for -> FOR ID for1 . IS exp TO exp DO OPENCURLY for2 CLOSECURLY

    IS              shift and go to state 202


state 161

    (79) for1 -> OPENBOX . exp CLOSEBOX
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 203
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 162

    (80) for1 -> epsilon .

    IS              reduce using rule 80 (for1 -> epsilon .)


state 163

    (55) asignacion1 -> ID OPENBOX exp . CLOSEBOX IS
    (121) factor1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 204


state 164

    (58) funcion -> ID OPENPAR funcion1 .

    SEMICOLON       reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    MULTIPLY        reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    DIVIDE          reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    MODULO          reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    PLUS            reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    MINUS           reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    LT              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    LE              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    GT              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    GE              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    EQ              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    NE              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    AND             reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    OR              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    CLOSEPAR        reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    CLOSEBOX        reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    COMMA           reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    TO              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)
    DO              reduce using rule 58 (funcion -> ID OPENPAR funcion1 .)


state 165

    (59) funcion1 -> exp . funcion2
    (60) funcion2 -> . COMMA funcion1
    (61) funcion2 -> . CLOSEPAR

    COMMA           shift and go to state 206
    CLOSEPAR        shift and go to state 207

    funcion2                       shift and go to state 205

state 166

    (85) expresion -> and expression1 expression2 . expresion
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    and                            shift and go to state 69
    expresion                      shift and go to state 208
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    exp                            shift and go to state 62
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 167

    (87) expression2 -> OR .

    ID              reduce using rule 87 (expression2 -> OR .)
    OPENPAR         reduce using rule 87 (expression2 -> OR .)
    PLUS            reduce using rule 87 (expression2 -> OR .)
    MINUS           reduce using rule 87 (expression2 -> OR .)
    INT             reduce using rule 87 (expression2 -> OR .)
    FLOAT           reduce using rule 87 (expression2 -> OR .)
    CHAR            reduce using rule 87 (expression2 -> OR .)


state 168

    (89) and -> equal and1 and2 . and
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    equal                          shift and go to state 70
    and                            shift and go to state 209
    compare                        shift and go to state 71
    exp                            shift and go to state 62
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 169

    (91) and2 -> AND .

    ID              reduce using rule 91 (and2 -> AND .)
    OPENPAR         reduce using rule 91 (and2 -> AND .)
    PLUS            reduce using rule 91 (and2 -> AND .)
    MINUS           reduce using rule 91 (and2 -> AND .)
    INT             reduce using rule 91 (and2 -> AND .)
    FLOAT           reduce using rule 91 (and2 -> AND .)
    CHAR            reduce using rule 91 (and2 -> AND .)


state 170

    (93) equal -> compare equal1 equal2 . equal
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    compare                        shift and go to state 71
    equal                          shift and go to state 210
    exp                            shift and go to state 62
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 171

    (95) equal2 -> EQ .

    ID              reduce using rule 95 (equal2 -> EQ .)
    OPENPAR         reduce using rule 95 (equal2 -> EQ .)
    PLUS            reduce using rule 95 (equal2 -> EQ .)
    MINUS           reduce using rule 95 (equal2 -> EQ .)
    INT             reduce using rule 95 (equal2 -> EQ .)
    FLOAT           reduce using rule 95 (equal2 -> EQ .)
    CHAR            reduce using rule 95 (equal2 -> EQ .)


state 172

    (96) equal2 -> NE .

    ID              reduce using rule 96 (equal2 -> NE .)
    OPENPAR         reduce using rule 96 (equal2 -> NE .)
    PLUS            reduce using rule 96 (equal2 -> NE .)
    MINUS           reduce using rule 96 (equal2 -> NE .)
    INT             reduce using rule 96 (equal2 -> NE .)
    FLOAT           reduce using rule 96 (equal2 -> NE .)
    CHAR            reduce using rule 96 (equal2 -> NE .)


state 173

    (105) exp -> termino exp1 exp2 . exp
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    termino                        shift and go to state 72
    exp                            shift and go to state 211
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 174

    (107) exp2 -> PLUS .

    ID              reduce using rule 107 (exp2 -> PLUS .)
    OPENPAR         reduce using rule 107 (exp2 -> PLUS .)
    PLUS            reduce using rule 107 (exp2 -> PLUS .)
    MINUS           reduce using rule 107 (exp2 -> PLUS .)
    INT             reduce using rule 107 (exp2 -> PLUS .)
    FLOAT           reduce using rule 107 (exp2 -> PLUS .)
    CHAR            reduce using rule 107 (exp2 -> PLUS .)


state 175

    (108) exp2 -> MINUS .

    ID              reduce using rule 108 (exp2 -> MINUS .)
    OPENPAR         reduce using rule 108 (exp2 -> MINUS .)
    PLUS            reduce using rule 108 (exp2 -> MINUS .)
    MINUS           reduce using rule 108 (exp2 -> MINUS .)
    INT             reduce using rule 108 (exp2 -> MINUS .)
    FLOAT           reduce using rule 108 (exp2 -> MINUS .)
    CHAR            reduce using rule 108 (exp2 -> MINUS .)


state 176

    (110) termino -> factor termino1 termino2 . termino
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    factor                         shift and go to state 73
    termino                        shift and go to state 212
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 177

    (112) termino2 -> MULTIPLY .

    ID              reduce using rule 112 (termino2 -> MULTIPLY .)
    OPENPAR         reduce using rule 112 (termino2 -> MULTIPLY .)
    PLUS            reduce using rule 112 (termino2 -> MULTIPLY .)
    MINUS           reduce using rule 112 (termino2 -> MULTIPLY .)
    INT             reduce using rule 112 (termino2 -> MULTIPLY .)
    FLOAT           reduce using rule 112 (termino2 -> MULTIPLY .)
    CHAR            reduce using rule 112 (termino2 -> MULTIPLY .)


state 178

    (113) termino2 -> DIVIDE .

    ID              reduce using rule 113 (termino2 -> DIVIDE .)
    OPENPAR         reduce using rule 113 (termino2 -> DIVIDE .)
    PLUS            reduce using rule 113 (termino2 -> DIVIDE .)
    MINUS           reduce using rule 113 (termino2 -> DIVIDE .)
    INT             reduce using rule 113 (termino2 -> DIVIDE .)
    FLOAT           reduce using rule 113 (termino2 -> DIVIDE .)
    CHAR            reduce using rule 113 (termino2 -> DIVIDE .)


state 179

    (114) termino2 -> MODULO .

    ID              reduce using rule 114 (termino2 -> MODULO .)
    OPENPAR         reduce using rule 114 (termino2 -> MODULO .)
    PLUS            reduce using rule 114 (termino2 -> MODULO .)
    MINUS           reduce using rule 114 (termino2 -> MODULO .)
    INT             reduce using rule 114 (termino2 -> MODULO .)
    FLOAT           reduce using rule 114 (termino2 -> MODULO .)
    CHAR            reduce using rule 114 (termino2 -> MODULO .)


state 180

    (116) factor -> openpar expresion closepar .

    MULTIPLY        reduce using rule 116 (factor -> openpar expresion closepar .)
    DIVIDE          reduce using rule 116 (factor -> openpar expresion closepar .)
    MODULO          reduce using rule 116 (factor -> openpar expresion closepar .)
    PLUS            reduce using rule 116 (factor -> openpar expresion closepar .)
    MINUS           reduce using rule 116 (factor -> openpar expresion closepar .)
    LT              reduce using rule 116 (factor -> openpar expresion closepar .)
    LE              reduce using rule 116 (factor -> openpar expresion closepar .)
    GT              reduce using rule 116 (factor -> openpar expresion closepar .)
    GE              reduce using rule 116 (factor -> openpar expresion closepar .)
    EQ              reduce using rule 116 (factor -> openpar expresion closepar .)
    NE              reduce using rule 116 (factor -> openpar expresion closepar .)
    AND             reduce using rule 116 (factor -> openpar expresion closepar .)
    OR              reduce using rule 116 (factor -> openpar expresion closepar .)
    SEMICOLON       reduce using rule 116 (factor -> openpar expresion closepar .)
    CLOSEPAR        reduce using rule 116 (factor -> openpar expresion closepar .)
    CLOSEBOX        reduce using rule 116 (factor -> openpar expresion closepar .)
    COMMA           reduce using rule 116 (factor -> openpar expresion closepar .)
    TO              reduce using rule 116 (factor -> openpar expresion closepar .)
    DO              reduce using rule 116 (factor -> openpar expresion closepar .)


state 181

    (120) closepar -> CLOSEPAR .

    MULTIPLY        reduce using rule 120 (closepar -> CLOSEPAR .)
    DIVIDE          reduce using rule 120 (closepar -> CLOSEPAR .)
    MODULO          reduce using rule 120 (closepar -> CLOSEPAR .)
    PLUS            reduce using rule 120 (closepar -> CLOSEPAR .)
    MINUS           reduce using rule 120 (closepar -> CLOSEPAR .)
    LT              reduce using rule 120 (closepar -> CLOSEPAR .)
    LE              reduce using rule 120 (closepar -> CLOSEPAR .)
    GT              reduce using rule 120 (closepar -> CLOSEPAR .)
    GE              reduce using rule 120 (closepar -> CLOSEPAR .)
    EQ              reduce using rule 120 (closepar -> CLOSEPAR .)
    NE              reduce using rule 120 (closepar -> CLOSEPAR .)
    AND             reduce using rule 120 (closepar -> CLOSEPAR .)
    OR              reduce using rule 120 (closepar -> CLOSEPAR .)
    SEMICOLON       reduce using rule 120 (closepar -> CLOSEPAR .)
    CLOSEPAR        reduce using rule 120 (closepar -> CLOSEPAR .)
    CLOSEBOX        reduce using rule 120 (closepar -> CLOSEPAR .)
    COMMA           reduce using rule 120 (closepar -> CLOSEPAR .)
    TO              reduce using rule 120 (closepar -> CLOSEPAR .)
    DO              reduce using rule 120 (closepar -> CLOSEPAR .)


state 182

    (35) funciones5 -> vars guardar_func OPENCURLY funciones6 .

    MAIN            reduce using rule 35 (funciones5 -> vars guardar_func OPENCURLY funciones6 .)


state 183

    (37) funciones6 -> estatutos funciones6 .

    MAIN            reduce using rule 37 (funciones6 -> estatutos funciones6 .)


state 184

    (38) funciones6 -> CLOSECURLY funciones .

    MAIN            reduce using rule 38 (funciones6 -> CLOSECURLY funciones .)


state 185

    (28) funciones -> epsilon .

    MAIN            reduce using rule 28 (funciones -> epsilon .)


state 186

    (12) vars3 -> OPENBOX exp CLOSEBOX . vars4
    (14) vars4 -> . SEMICOLON vars5
    (15) vars4 -> . COMMA vars2

    SEMICOLON       shift and go to state 86
    COMMA           shift and go to state 87

    vars4                          shift and go to state 213

state 187

    (121) factor1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 214


state 188

    (62) retorno -> RETURN OPENPAR exp CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 215


state 189

    (98) compare -> exp compare1 compare2 compare .

    EQ              reduce using rule 98 (compare -> exp compare1 compare2 compare .)
    NE              reduce using rule 98 (compare -> exp compare1 compare2 compare .)
    AND             reduce using rule 98 (compare -> exp compare1 compare2 compare .)
    OR              reduce using rule 98 (compare -> exp compare1 compare2 compare .)
    SEMICOLON       reduce using rule 98 (compare -> exp compare1 compare2 compare .)
    CLOSEPAR        reduce using rule 98 (compare -> exp compare1 compare2 compare .)


state 190

    (63) lectura -> READ OPENPAR lista_ids CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 216


state 191

    (18) lista_ids -> ID OPENBOX . exp CLOSEBOX lista_ids1
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 217
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 192

    (19) lista_ids -> ID lista_ids1 .

    CLOSEPAR        reduce using rule 19 (lista_ids -> ID lista_ids1 .)
    COMMA           reduce using rule 19 (lista_ids -> ID lista_ids1 .)


state 193

    (21) lista_ids1 -> COMMA . lista_ids
    (18) lista_ids -> . ID OPENBOX exp CLOSEBOX lista_ids1
    (19) lista_ids -> . ID lista_ids1
    (20) lista_ids -> . STRING lista_ids1

    ID              shift and go to state 154
    STRING          shift and go to state 155

    lista_ids                      shift and go to state 218

state 194

    (22) lista_ids1 -> epsilon .

    CLOSEPAR        reduce using rule 22 (lista_ids1 -> epsilon .)
    COMMA           reduce using rule 22 (lista_ids1 -> epsilon .)


state 195

    (20) lista_ids -> STRING lista_ids1 .

    CLOSEPAR        reduce using rule 20 (lista_ids -> STRING lista_ids1 .)
    COMMA           reduce using rule 20 (lista_ids -> STRING lista_ids1 .)


state 196

    (64) escritura -> WRITE OPENPAR escritura1 CLOSEPAR . SEMICOLON

    SEMICOLON       shift and go to state 219


state 197

    (65) escritura1 -> lista_ids escritura2 .

    CLOSEPAR        reduce using rule 65 (escritura1 -> lista_ids escritura2 .)


state 198

    (66) escritura2 -> COMMA . escritura1
    (65) escritura1 -> . lista_ids escritura2
    (18) lista_ids -> . ID OPENBOX exp CLOSEBOX lista_ids1
    (19) lista_ids -> . ID lista_ids1
    (20) lista_ids -> . STRING lista_ids1

    ID              shift and go to state 154
    STRING          shift and go to state 155

    escritura1                     shift and go to state 220
    lista_ids                      shift and go to state 157

state 199

    (67) escritura2 -> epsilon .

    CLOSEPAR        reduce using rule 67 (escritura2 -> epsilon .)


state 200

    (68) condicion -> IF OPENPAR expresion CLOSEPAR . THEN OPENCURLY condicion1

    THEN            shift and go to state 221


state 201

    (75) while -> WHILE OPENPAR expresion CLOSEPAR . DO OPENCURLY while1

    DO              shift and go to state 222


state 202

    (78) for -> FOR ID for1 IS . exp TO exp DO OPENCURLY for2 CLOSECURLY
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 223
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 203

    (79) for1 -> OPENBOX exp . CLOSEBOX

    CLOSEBOX        shift and go to state 224


state 204

    (55) asignacion1 -> ID OPENBOX exp CLOSEBOX . IS
    (121) factor1 -> OPENBOX exp CLOSEBOX .

    IS              shift and go to state 225
    MULTIPLY        reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    DIVIDE          reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    MODULO          reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    PLUS            reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    MINUS           reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    LT              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    LE              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    GT              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    GE              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    EQ              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    NE              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    AND             reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    OR              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    SEMICOLON       reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)


state 205

    (59) funcion1 -> exp funcion2 .

    SEMICOLON       reduce using rule 59 (funcion1 -> exp funcion2 .)
    MULTIPLY        reduce using rule 59 (funcion1 -> exp funcion2 .)
    DIVIDE          reduce using rule 59 (funcion1 -> exp funcion2 .)
    MODULO          reduce using rule 59 (funcion1 -> exp funcion2 .)
    PLUS            reduce using rule 59 (funcion1 -> exp funcion2 .)
    MINUS           reduce using rule 59 (funcion1 -> exp funcion2 .)
    LT              reduce using rule 59 (funcion1 -> exp funcion2 .)
    LE              reduce using rule 59 (funcion1 -> exp funcion2 .)
    GT              reduce using rule 59 (funcion1 -> exp funcion2 .)
    GE              reduce using rule 59 (funcion1 -> exp funcion2 .)
    EQ              reduce using rule 59 (funcion1 -> exp funcion2 .)
    NE              reduce using rule 59 (funcion1 -> exp funcion2 .)
    AND             reduce using rule 59 (funcion1 -> exp funcion2 .)
    OR              reduce using rule 59 (funcion1 -> exp funcion2 .)
    CLOSEPAR        reduce using rule 59 (funcion1 -> exp funcion2 .)
    CLOSEBOX        reduce using rule 59 (funcion1 -> exp funcion2 .)
    COMMA           reduce using rule 59 (funcion1 -> exp funcion2 .)
    TO              reduce using rule 59 (funcion1 -> exp funcion2 .)
    DO              reduce using rule 59 (funcion1 -> exp funcion2 .)


state 206

    (60) funcion2 -> COMMA . funcion1
    (59) funcion1 -> . exp funcion2
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    funcion1                       shift and go to state 226
    exp                            shift and go to state 165
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 207

    (61) funcion2 -> CLOSEPAR .

    SEMICOLON       reduce using rule 61 (funcion2 -> CLOSEPAR .)
    MULTIPLY        reduce using rule 61 (funcion2 -> CLOSEPAR .)
    DIVIDE          reduce using rule 61 (funcion2 -> CLOSEPAR .)
    MODULO          reduce using rule 61 (funcion2 -> CLOSEPAR .)
    PLUS            reduce using rule 61 (funcion2 -> CLOSEPAR .)
    MINUS           reduce using rule 61 (funcion2 -> CLOSEPAR .)
    LT              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    LE              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    GT              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    GE              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    EQ              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    NE              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    AND             reduce using rule 61 (funcion2 -> CLOSEPAR .)
    OR              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    CLOSEPAR        reduce using rule 61 (funcion2 -> CLOSEPAR .)
    CLOSEBOX        reduce using rule 61 (funcion2 -> CLOSEPAR .)
    COMMA           reduce using rule 61 (funcion2 -> CLOSEPAR .)
    TO              reduce using rule 61 (funcion2 -> CLOSEPAR .)
    DO              reduce using rule 61 (funcion2 -> CLOSEPAR .)


state 208

    (85) expresion -> and expression1 expression2 expresion .

    SEMICOLON       reduce using rule 85 (expresion -> and expression1 expression2 expresion .)
    CLOSEPAR        reduce using rule 85 (expresion -> and expression1 expression2 expresion .)


state 209

    (89) and -> equal and1 and2 and .

    OR              reduce using rule 89 (and -> equal and1 and2 and .)
    SEMICOLON       reduce using rule 89 (and -> equal and1 and2 and .)
    CLOSEPAR        reduce using rule 89 (and -> equal and1 and2 and .)


state 210

    (93) equal -> compare equal1 equal2 equal .

    AND             reduce using rule 93 (equal -> compare equal1 equal2 equal .)
    OR              reduce using rule 93 (equal -> compare equal1 equal2 equal .)
    SEMICOLON       reduce using rule 93 (equal -> compare equal1 equal2 equal .)
    CLOSEPAR        reduce using rule 93 (equal -> compare equal1 equal2 equal .)


state 211

    (105) exp -> termino exp1 exp2 exp .

    LT              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    LE              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    GT              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    GE              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    EQ              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    NE              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    AND             reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    OR              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    SEMICOLON       reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    CLOSEPAR        reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    CLOSEBOX        reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    COMMA           reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    TO              reduce using rule 105 (exp -> termino exp1 exp2 exp .)
    DO              reduce using rule 105 (exp -> termino exp1 exp2 exp .)


state 212

    (110) termino -> factor termino1 termino2 termino .

    PLUS            reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    MINUS           reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    LT              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    LE              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    GT              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    GE              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    EQ              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    NE              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    AND             reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    OR              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    SEMICOLON       reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    CLOSEPAR        reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    CLOSEBOX        reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    COMMA           reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    TO              reduce using rule 110 (termino -> factor termino1 termino2 termino .)
    DO              reduce using rule 110 (termino -> factor termino1 termino2 termino .)


state 213

    (12) vars3 -> OPENBOX exp CLOSEBOX vars4 .

    FUNCTION        reduce using rule 12 (vars3 -> OPENBOX exp CLOSEBOX vars4 .)
    MAIN            reduce using rule 12 (vars3 -> OPENBOX exp CLOSEBOX vars4 .)
    OPENCURLY       reduce using rule 12 (vars3 -> OPENBOX exp CLOSEBOX vars4 .)


state 214

    (121) factor1 -> OPENBOX exp CLOSEBOX .

    MULTIPLY        reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    DIVIDE          reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    MODULO          reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    PLUS            reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    MINUS           reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    LT              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    LE              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    GT              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    GE              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    EQ              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    NE              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    AND             reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    OR              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    SEMICOLON       reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSEPAR        reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    CLOSEBOX        reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    COMMA           reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    TO              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)
    DO              reduce using rule 121 (factor1 -> OPENBOX exp CLOSEBOX .)


state 215

    (62) retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .

    RETURN          reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    READ            reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    IF              reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    ID              reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    INT             reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 62 (retorno -> RETURN OPENPAR exp CLOSEPAR SEMICOLON .)


state 216

    (63) lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .

    RETURN          reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    READ            reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    IF              reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    ID              reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    INT             reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 63 (lectura -> READ OPENPAR lista_ids CLOSEPAR SEMICOLON .)


state 217

    (18) lista_ids -> ID OPENBOX exp . CLOSEBOX lista_ids1

    CLOSEBOX        shift and go to state 227


state 218

    (21) lista_ids1 -> COMMA lista_ids .

    CLOSEPAR        reduce using rule 21 (lista_ids1 -> COMMA lista_ids .)
    COMMA           reduce using rule 21 (lista_ids1 -> COMMA lista_ids .)


state 219

    (64) escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .

    RETURN          reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    READ            reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    WRITE           reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    IF              reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    WHILE           reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    FOR             reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    ID              reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    OPENPAR         reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    PLUS            reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    MINUS           reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    INT             reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    FLOAT           reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    CHAR            reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)
    CLOSECURLY      reduce using rule 64 (escritura -> WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON .)


state 220

    (66) escritura2 -> COMMA escritura1 .

    CLOSEPAR        reduce using rule 66 (escritura2 -> COMMA escritura1 .)


state 221

    (68) condicion -> IF OPENPAR expresion CLOSEPAR THEN . OPENCURLY condicion1

    OPENCURLY       shift and go to state 228


state 222

    (75) while -> WHILE OPENPAR expresion CLOSEPAR DO . OPENCURLY while1

    OPENCURLY       shift and go to state 229


state 223

    (78) for -> FOR ID for1 IS exp . TO exp DO OPENCURLY for2 CLOSECURLY

    TO              shift and go to state 230


state 224

    (79) for1 -> OPENBOX exp CLOSEBOX .

    IS              reduce using rule 79 (for1 -> OPENBOX exp CLOSEBOX .)


state 225

    (55) asignacion1 -> ID OPENBOX exp CLOSEBOX IS .

    ID              reduce using rule 55 (asignacion1 -> ID OPENBOX exp CLOSEBOX IS .)
    OPENPAR         reduce using rule 55 (asignacion1 -> ID OPENBOX exp CLOSEBOX IS .)
    PLUS            reduce using rule 55 (asignacion1 -> ID OPENBOX exp CLOSEBOX IS .)
    MINUS           reduce using rule 55 (asignacion1 -> ID OPENBOX exp CLOSEBOX IS .)
    INT             reduce using rule 55 (asignacion1 -> ID OPENBOX exp CLOSEBOX IS .)
    FLOAT           reduce using rule 55 (asignacion1 -> ID OPENBOX exp CLOSEBOX IS .)
    CHAR            reduce using rule 55 (asignacion1 -> ID OPENBOX exp CLOSEBOX IS .)


state 226

    (60) funcion2 -> COMMA funcion1 .

    SEMICOLON       reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    MULTIPLY        reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    DIVIDE          reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    MODULO          reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    PLUS            reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    MINUS           reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    LT              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    LE              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    GT              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    GE              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    EQ              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    NE              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    AND             reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    OR              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    CLOSEPAR        reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    CLOSEBOX        reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    COMMA           reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    TO              reduce using rule 60 (funcion2 -> COMMA funcion1 .)
    DO              reduce using rule 60 (funcion2 -> COMMA funcion1 .)


state 227

    (18) lista_ids -> ID OPENBOX exp CLOSEBOX . lista_ids1
    (21) lista_ids1 -> . COMMA lista_ids
    (22) lista_ids1 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 193
    CLOSEPAR        reduce using rule 130 (epsilon -> .)

  ! COMMA           [ reduce using rule 130 (epsilon -> .) ]

    lista_ids1                     shift and go to state 231
    epsilon                        shift and go to state 194

state 228

    (68) condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY . condicion1
    (69) condicion1 -> . estatutos condicion1
    (70) condicion1 -> . CLOSECURLY condicion2
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 234
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    expresion                      shift and go to state 59
    condicion1                     shift and go to state 232
    estatutos                      shift and go to state 233
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 229

    (75) while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY . while1
    (76) while1 -> . estatutos while1
    (77) while1 -> . CLOSECURLY
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 237
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    expresion                      shift and go to state 59
    while1                         shift and go to state 235
    estatutos                      shift and go to state 236
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 230

    (78) for -> FOR ID for1 IS exp TO . exp DO OPENCURLY for2 CLOSECURLY
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (58) funcion -> . ID OPENPAR funcion1
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 101
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 238
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    funcion                        shift and go to state 102
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 231

    (18) lista_ids -> ID OPENBOX exp CLOSEBOX lista_ids1 .

    CLOSEPAR        reduce using rule 18 (lista_ids -> ID OPENBOX exp CLOSEBOX lista_ids1 .)
    COMMA           reduce using rule 18 (lista_ids -> ID OPENBOX exp CLOSEBOX lista_ids1 .)


state 232

    (68) condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .

    RETURN          reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    READ            reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    WRITE           reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    IF              reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    WHILE           reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    FOR             reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    ID              reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    OPENPAR         reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    PLUS            reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    MINUS           reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    INT             reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    FLOAT           reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    CHAR            reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)
    CLOSECURLY      reduce using rule 68 (condicion -> IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1 .)


state 233

    (69) condicion1 -> estatutos . condicion1
    (69) condicion1 -> . estatutos condicion1
    (70) condicion1 -> . CLOSECURLY condicion2
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 234
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    estatutos                      shift and go to state 233
    condicion1                     shift and go to state 239
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 234

    (70) condicion1 -> CLOSECURLY . condicion2
    (71) condicion2 -> . ELSE OPENCURLY condicion3
    (72) condicion2 -> . epsilon
    (130) epsilon -> .

    ELSE            shift and go to state 241
    RETURN          reduce using rule 130 (epsilon -> .)
    READ            reduce using rule 130 (epsilon -> .)
    WRITE           reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    OPENPAR         reduce using rule 130 (epsilon -> .)
    PLUS            reduce using rule 130 (epsilon -> .)
    MINUS           reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    CLOSECURLY      reduce using rule 130 (epsilon -> .)

    condicion2                     shift and go to state 240
    epsilon                        shift and go to state 242

state 235

    (75) while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .

    RETURN          reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    READ            reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    WRITE           reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    IF              reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    WHILE           reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    FOR             reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    ID              reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    OPENPAR         reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    PLUS            reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    MINUS           reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    INT             reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    FLOAT           reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    CHAR            reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)
    CLOSECURLY      reduce using rule 75 (while -> WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1 .)


state 236

    (76) while1 -> estatutos . while1
    (76) while1 -> . estatutos while1
    (77) while1 -> . CLOSECURLY
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 237
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    estatutos                      shift and go to state 236
    while1                         shift and go to state 243
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 237

    (77) while1 -> CLOSECURLY .

    RETURN          reduce using rule 77 (while1 -> CLOSECURLY .)
    READ            reduce using rule 77 (while1 -> CLOSECURLY .)
    WRITE           reduce using rule 77 (while1 -> CLOSECURLY .)
    IF              reduce using rule 77 (while1 -> CLOSECURLY .)
    WHILE           reduce using rule 77 (while1 -> CLOSECURLY .)
    FOR             reduce using rule 77 (while1 -> CLOSECURLY .)
    ID              reduce using rule 77 (while1 -> CLOSECURLY .)
    OPENPAR         reduce using rule 77 (while1 -> CLOSECURLY .)
    PLUS            reduce using rule 77 (while1 -> CLOSECURLY .)
    MINUS           reduce using rule 77 (while1 -> CLOSECURLY .)
    INT             reduce using rule 77 (while1 -> CLOSECURLY .)
    FLOAT           reduce using rule 77 (while1 -> CLOSECURLY .)
    CHAR            reduce using rule 77 (while1 -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 77 (while1 -> CLOSECURLY .)


state 238

    (78) for -> FOR ID for1 IS exp TO exp . DO OPENCURLY for2 CLOSECURLY

    DO              shift and go to state 244


state 239

    (69) condicion1 -> estatutos condicion1 .

    RETURN          reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    READ            reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    WRITE           reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    IF              reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    WHILE           reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    FOR             reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    ID              reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    OPENPAR         reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    PLUS            reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    MINUS           reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    INT             reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    FLOAT           reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    CHAR            reduce using rule 69 (condicion1 -> estatutos condicion1 .)
    CLOSECURLY      reduce using rule 69 (condicion1 -> estatutos condicion1 .)


state 240

    (70) condicion1 -> CLOSECURLY condicion2 .

    RETURN          reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    READ            reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    WRITE           reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    IF              reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    WHILE           reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    FOR             reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    ID              reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    OPENPAR         reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    PLUS            reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    MINUS           reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    INT             reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    FLOAT           reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    CHAR            reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)
    CLOSECURLY      reduce using rule 70 (condicion1 -> CLOSECURLY condicion2 .)


state 241

    (71) condicion2 -> ELSE . OPENCURLY condicion3

    OPENCURLY       shift and go to state 245


state 242

    (72) condicion2 -> epsilon .

    RETURN          reduce using rule 72 (condicion2 -> epsilon .)
    READ            reduce using rule 72 (condicion2 -> epsilon .)
    WRITE           reduce using rule 72 (condicion2 -> epsilon .)
    IF              reduce using rule 72 (condicion2 -> epsilon .)
    WHILE           reduce using rule 72 (condicion2 -> epsilon .)
    FOR             reduce using rule 72 (condicion2 -> epsilon .)
    ID              reduce using rule 72 (condicion2 -> epsilon .)
    OPENPAR         reduce using rule 72 (condicion2 -> epsilon .)
    PLUS            reduce using rule 72 (condicion2 -> epsilon .)
    MINUS           reduce using rule 72 (condicion2 -> epsilon .)
    INT             reduce using rule 72 (condicion2 -> epsilon .)
    FLOAT           reduce using rule 72 (condicion2 -> epsilon .)
    CHAR            reduce using rule 72 (condicion2 -> epsilon .)
    CLOSECURLY      reduce using rule 72 (condicion2 -> epsilon .)


state 243

    (76) while1 -> estatutos while1 .

    RETURN          reduce using rule 76 (while1 -> estatutos while1 .)
    READ            reduce using rule 76 (while1 -> estatutos while1 .)
    WRITE           reduce using rule 76 (while1 -> estatutos while1 .)
    IF              reduce using rule 76 (while1 -> estatutos while1 .)
    WHILE           reduce using rule 76 (while1 -> estatutos while1 .)
    FOR             reduce using rule 76 (while1 -> estatutos while1 .)
    ID              reduce using rule 76 (while1 -> estatutos while1 .)
    OPENPAR         reduce using rule 76 (while1 -> estatutos while1 .)
    PLUS            reduce using rule 76 (while1 -> estatutos while1 .)
    MINUS           reduce using rule 76 (while1 -> estatutos while1 .)
    INT             reduce using rule 76 (while1 -> estatutos while1 .)
    FLOAT           reduce using rule 76 (while1 -> estatutos while1 .)
    CHAR            reduce using rule 76 (while1 -> estatutos while1 .)
    CLOSECURLY      reduce using rule 76 (while1 -> estatutos while1 .)


state 244

    (78) for -> FOR ID for1 IS exp TO exp DO . OPENCURLY for2 CLOSECURLY

    OPENCURLY       shift and go to state 246


state 245

    (71) condicion2 -> ELSE OPENCURLY . condicion3
    (73) condicion3 -> . estatutos condicion3
    (74) condicion3 -> . CLOSECURLY
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 249
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    condicion3                     shift and go to state 247
    estatutos                      shift and go to state 248
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 246

    (78) for -> FOR ID for1 IS exp TO exp DO OPENCURLY . for2 CLOSECURLY
    (81) for2 -> . estatutos for2
    (82) for2 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    exp                            shift and go to state 62
    for2                           shift and go to state 250
    estatutos                      shift and go to state 251
    epsilon                        shift and go to state 252
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 247

    (71) condicion2 -> ELSE OPENCURLY condicion3 .

    RETURN          reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    READ            reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    WRITE           reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    IF              reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    WHILE           reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    FOR             reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    ID              reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    OPENPAR         reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    PLUS            reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    MINUS           reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    INT             reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    FLOAT           reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    CHAR            reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)
    CLOSECURLY      reduce using rule 71 (condicion2 -> ELSE OPENCURLY condicion3 .)


state 248

    (73) condicion3 -> estatutos . condicion3
    (73) condicion3 -> . estatutos condicion3
    (74) condicion3 -> . CLOSECURLY
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon
    (130) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      shift and go to state 249
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    estatutos                      shift and go to state 248
    condicion3                     shift and go to state 253
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75
    epsilon                        shift and go to state 103

state 249

    (74) condicion3 -> CLOSECURLY .

    RETURN          reduce using rule 74 (condicion3 -> CLOSECURLY .)
    READ            reduce using rule 74 (condicion3 -> CLOSECURLY .)
    WRITE           reduce using rule 74 (condicion3 -> CLOSECURLY .)
    IF              reduce using rule 74 (condicion3 -> CLOSECURLY .)
    WHILE           reduce using rule 74 (condicion3 -> CLOSECURLY .)
    FOR             reduce using rule 74 (condicion3 -> CLOSECURLY .)
    ID              reduce using rule 74 (condicion3 -> CLOSECURLY .)
    OPENPAR         reduce using rule 74 (condicion3 -> CLOSECURLY .)
    PLUS            reduce using rule 74 (condicion3 -> CLOSECURLY .)
    MINUS           reduce using rule 74 (condicion3 -> CLOSECURLY .)
    INT             reduce using rule 74 (condicion3 -> CLOSECURLY .)
    FLOAT           reduce using rule 74 (condicion3 -> CLOSECURLY .)
    CHAR            reduce using rule 74 (condicion3 -> CLOSECURLY .)
    CLOSECURLY      reduce using rule 74 (condicion3 -> CLOSECURLY .)


state 250

    (78) for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 . CLOSECURLY

    CLOSECURLY      shift and go to state 254


state 251

    (81) for2 -> estatutos . for2
    (81) for2 -> . estatutos for2
    (82) for2 -> . epsilon
    (43) estatutos -> . asignacion estatutos1
    (44) estatutos -> . llamada estatutos1
    (45) estatutos -> . retorno estatutos1
    (46) estatutos -> . lectura estatutos1
    (47) estatutos -> . escritura estatutos1
    (48) estatutos -> . condicion estatutos1
    (49) estatutos -> . while estatutos1
    (50) estatutos -> . for estatutos1
    (51) estatutos -> . est_exp estatutos1
    (130) epsilon -> .
    (54) asignacion -> . asignacion1 expresion SEMICOLON
    (57) llamada -> . funcion SEMICOLON
    (62) retorno -> . RETURN OPENPAR exp CLOSEPAR SEMICOLON
    (63) lectura -> . READ OPENPAR lista_ids CLOSEPAR SEMICOLON
    (64) escritura -> . WRITE OPENPAR escritura1 CLOSEPAR SEMICOLON
    (68) condicion -> . IF OPENPAR expresion CLOSEPAR THEN OPENCURLY condicion1
    (75) while -> . WHILE OPENPAR expresion CLOSEPAR DO OPENCURLY while1
    (78) for -> . FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY
    (83) est_exp -> . expresion SEMICOLON
    (55) asignacion1 -> . ID OPENBOX exp CLOSEBOX IS
    (56) asignacion1 -> . ID IS
    (58) funcion -> . ID OPENPAR funcion1
    (84) expresion -> . and expression1
    (85) expresion -> . and expression1 expression2 expresion
    (88) and -> . equal and1
    (89) and -> . equal and1 and2 and
    (92) equal -> . compare equal1
    (93) equal -> . compare equal1 equal2 equal
    (97) compare -> . exp compare1
    (98) compare -> . exp compare1 compare2 compare
    (104) exp -> . termino exp1
    (105) exp -> . termino exp1 exp2 exp
    (109) termino -> . factor termino1
    (110) termino -> . factor termino1 termino2 termino
    (115) factor -> . ID factor1
    (116) factor -> . openpar expresion closepar
    (117) factor -> . funcion
    (118) factor -> . factor2 varcte
    (119) openpar -> . OPENPAR
    (123) factor2 -> . PLUS
    (124) factor2 -> . MINUS
    (125) factor2 -> . epsilon

  ! shift/reduce conflict for ID resolved as shift
    CLOSECURLY      reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    CHAR            reduce using rule 130 (epsilon -> .)
    RETURN          shift and go to state 61
    READ            shift and go to state 63
    WRITE           shift and go to state 64
    IF              shift and go to state 65
    WHILE           shift and go to state 66
    FOR             shift and go to state 67
    ID              shift and go to state 68
    OPENPAR         shift and go to state 45
    PLUS            shift and go to state 76
    MINUS           shift and go to state 77

  ! ID              [ reduce using rule 130 (epsilon -> .) ]

    estatutos                      shift and go to state 251
    for2                           shift and go to state 255
    epsilon                        shift and go to state 252
    asignacion                     shift and go to state 49
    llamada                        shift and go to state 50
    retorno                        shift and go to state 51
    lectura                        shift and go to state 52
    escritura                      shift and go to state 53
    condicion                      shift and go to state 54
    while                          shift and go to state 55
    for                            shift and go to state 56
    est_exp                        shift and go to state 57
    asignacion1                    shift and go to state 58
    expresion                      shift and go to state 59
    funcion                        shift and go to state 60
    exp                            shift and go to state 62
    and                            shift and go to state 69
    equal                          shift and go to state 70
    compare                        shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    openpar                        shift and go to state 74
    factor2                        shift and go to state 75

state 252

    (82) for2 -> epsilon .
    (125) factor2 -> epsilon .

    CLOSECURLY      reduce using rule 82 (for2 -> epsilon .)
    ID              reduce using rule 125 (factor2 -> epsilon .)
    INT             reduce using rule 125 (factor2 -> epsilon .)
    FLOAT           reduce using rule 125 (factor2 -> epsilon .)
    CHAR            reduce using rule 125 (factor2 -> epsilon .)


state 253

    (73) condicion3 -> estatutos condicion3 .

    RETURN          reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    READ            reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    WRITE           reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    IF              reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    WHILE           reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    FOR             reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    ID              reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    OPENPAR         reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    PLUS            reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    MINUS           reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    INT             reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    FLOAT           reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    CHAR            reduce using rule 73 (condicion3 -> estatutos condicion3 .)
    CLOSECURLY      reduce using rule 73 (condicion3 -> estatutos condicion3 .)


state 254

    (78) for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .

    RETURN          reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    READ            reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    WRITE           reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    IF              reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    WHILE           reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    FOR             reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    ID              reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    OPENPAR         reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    PLUS            reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    MINUS           reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    INT             reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    FLOAT           reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    CHAR            reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)
    CLOSECURLY      reduce using rule 78 (for -> FOR ID for1 IS exp TO exp DO OPENCURLY for2 CLOSECURLY .)


state 255

    (81) for2 -> estatutos for2 .

    CLOSECURLY      reduce using rule 81 (for2 -> estatutos for2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 49 resolved as shift
WARNING: shift/reduce conflict for READ in state 49 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for FOR in state 49 resolved as shift
WARNING: shift/reduce conflict for ID in state 49 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 50 resolved as shift
WARNING: shift/reduce conflict for READ in state 50 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 50 resolved as shift
WARNING: shift/reduce conflict for FOR in state 50 resolved as shift
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 51 resolved as shift
WARNING: shift/reduce conflict for READ in state 51 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 51 resolved as shift
WARNING: shift/reduce conflict for IF in state 51 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 51 resolved as shift
WARNING: shift/reduce conflict for FOR in state 51 resolved as shift
WARNING: shift/reduce conflict for ID in state 51 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 52 resolved as shift
WARNING: shift/reduce conflict for READ in state 52 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 52 resolved as shift
WARNING: shift/reduce conflict for IF in state 52 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 52 resolved as shift
WARNING: shift/reduce conflict for FOR in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 53 resolved as shift
WARNING: shift/reduce conflict for READ in state 53 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 53 resolved as shift
WARNING: shift/reduce conflict for IF in state 53 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for FOR in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 54 resolved as shift
WARNING: shift/reduce conflict for READ in state 54 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 54 resolved as shift
WARNING: shift/reduce conflict for IF in state 54 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 54 resolved as shift
WARNING: shift/reduce conflict for FOR in state 54 resolved as shift
WARNING: shift/reduce conflict for ID in state 54 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 55 resolved as shift
WARNING: shift/reduce conflict for READ in state 55 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 55 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 55 resolved as shift
WARNING: shift/reduce conflict for FOR in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 56 resolved as shift
WARNING: shift/reduce conflict for READ in state 56 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 56 resolved as shift
WARNING: shift/reduce conflict for IF in state 56 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 56 resolved as shift
WARNING: shift/reduce conflict for FOR in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 56 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 57 resolved as shift
WARNING: shift/reduce conflict for READ in state 57 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for OPENPAR in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 106 resolved as shift
WARNING: shift/reduce conflict for ID in state 111 resolved as shift
WARNING: shift/reduce conflict for ID in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 114 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 154 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 202 resolved as shift
WARNING: shift/reduce conflict for ID in state 206 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 227 resolved as shift
WARNING: shift/reduce conflict for ID in state 228 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 230 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for ID in state 236 resolved as shift
WARNING: shift/reduce conflict for ID in state 245 resolved as shift
WARNING: shift/reduce conflict for ID in state 246 resolved as shift
WARNING: shift/reduce conflict for ID in state 248 resolved as shift
WARNING: shift/reduce conflict for ID in state 251 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (programa2 -> epsilon)
WARNING: rejected rule (funciones -> epsilon) in state 7
WARNING: reduce/reduce conflict in state 91 resolved using rule (estatutos1 -> epsilon)
WARNING: rejected rule (factor2 -> epsilon) in state 91
